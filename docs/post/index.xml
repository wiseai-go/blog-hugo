<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on WiseAI的博客</title>
    <link>http://wiseai.cn/post/</link>
    <description>Recent content in Posts on WiseAI的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>陇ICP备15000157号</copyright>
    <lastBuildDate>Tue, 20 Sep 2022 10:52:06 +0800</lastBuildDate><atom:link href="http://wiseai.cn/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Goframe开发工具gf的编译方法</title>
      <link>http://wiseai.cn/post/goframe%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7gf%E7%9A%84%E7%BC%96%E8%AF%91%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 20 Sep 2022 10:52:06 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/goframe%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7gf%E7%9A%84%E7%BC%96%E8%AF%91%E6%96%B9%E6%B3%95/</guid>
      <description>这里主要说明自行编译的方法 点击下载源码 ，这里最好放在~/go/src/github/下，方便导入。
根据自己的需要修改数据库依赖，文件/cmd/gf/internal/cmd/cmd_gen_dao.go的import。sqlite 和oracle 的驱动需要安装cgo环境。
进入到gf cli的源码目录/cmd/gf 编译
# go build main.go或者gf build main.go
这里说明几个需要注意的事项:
编译的时候最好使用以前编译的gf编译，用go build不能写入gf的信息 GoFrame CLI Tool v2.1.4, https://goframe.org GoFrame Version: v2.1.0 in current go.mod CLI Installed At: /home/xjc/go/src/github.com/gogf/gf/cmd/gf/gf Current is a custom installed version, no installation information. 用gf build就有编译信息了
GoFrame CLI Tool v2.1.4, https://goframe.org GoFrame Version: v2.1.0 in current go.mod CLI Installed At: /usr/bin/gf CLI Built Detail: Go Version: go1.19.1 GF Version: v2.1.4 Git Commit: none Build Time: 2022-09-20 10:24:57 这里的Git Commit没有内容，主要是懒得去加。 Git Commit怎么用go语言取值没有去找，比较直接的方法是修改这个文件github.</description>
    </item>
    
    <item>
      <title>Goframe中数据库配置</title>
      <link>http://wiseai.cn/post/goframe%E4%B8%AD%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 16 Sep 2022 10:55:47 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/goframe%E4%B8%AD%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/</guid>
      <description>goframe中获取数据库操作对象有三种方式，一种是使用g.DB方法（推荐），一种是使用原生gdb.New方法，还有一种是使用包原生单例方法gdb.Instance
配置文件 { &amp;#34;database&amp;#34;: { &amp;#34;default&amp;#34;: [{&amp;#34;link&amp;#34;: &amp;#34;sqlite:/home/xjc/go/src/gitee/test-gf/testGf.db&amp;#34;, &amp;#34;debug&amp;#34;: &amp;#34;true&amp;#34;}], &amp;#34;focus&amp;#34;: [{&amp;#34;link&amp;#34;: &amp;#34;mysql:focus:sadmQHH*i@tcp(192.168.1.1:3306)/focus&amp;#34;, &amp;#34;debug&amp;#34;: &amp;#34;true&amp;#34;, &amp;#34;role&amp;#34;: &amp;#34;master&amp;#34;}] [{&amp;#34;link&amp;#34;: &amp;#34;mysql:focus:sadmQHH*i@tcp(192.168.1.2:3306)/focus&amp;#34;, &amp;#34;debug&amp;#34;: &amp;#34;true&amp;#34;, &amp;#34;role&amp;#34;: &amp;#34;slave&amp;#34;}] } } 这里是json格式，也可以使用yaml，这样配置的原因是可以方便配置集群模式，具体查看文档
加载数据库驱动 这里找加载方法
mport ( _ &amp;#34;github.com/gogf/gf/contrib/drivers/sqlite/v2&amp;#34; _ &amp;#34;github.com/gogf/gf/contrib/drivers/mysql/v2&amp;#34; ) g.DB方法（推荐） 加载数据库驱动，这里找加载方法
import ( &amp;#34;github.com/gogf/gf/v2/frame/g&amp;#34; ) // 获取默认配置的数据库对象(配置名称为&amp;#34;default&amp;#34;) db := g.DB() // 获取配置分组名称为&amp;#34;user&amp;#34;的数据库对象 db := g.DB(&amp;#34;user&amp;#34;) g.DB对象管理方式获取的是单例对象，整合了配置文件的管理功能，支持配置文件热更新。
gdb.New是根据给定的数据库节点配置创建一个新的数据库对象(非单例)，无法使用配置文件。（这里有坑） db, err := gdb.New(gdb.ConfigNode{ Host : &amp;#34;/home/xjc/go/src/gitee/test-gf/&amp;#34;, Name : &amp;#34;testGf.db&amp;#34;, Type : &amp;#34;sqlite&amp;#34;, }) 这里不支持link写法，注意这里sqlite的写法
gdb.Instance是包原生单例管理方法，需要结合配置方法一起使用，通过分组名称(非必需)获取对应配置的数据库单例对象。 gdb.SetConfig(gdb.Config { &amp;#34;default&amp;#34; : gdb.</description>
    </item>
    
    <item>
      <title>什么是高级的欲望?</title>
      <link>http://wiseai.cn/post/%E4%BB%80%E4%B9%88%E6%98%AF%E9%AB%98%E7%BA%A7%E7%9A%84%E6%AC%B2%E6%9C%9B/</link>
      <pubDate>Wed, 07 Sep 2022 17:35:02 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/%E4%BB%80%E4%B9%88%E6%98%AF%E9%AB%98%E7%BA%A7%E7%9A%84%E6%AC%B2%E6%9C%9B/</guid>
      <description>01
还记得那个北大数学扫地僧韦东奕吗？
随着他一手馒头一手矿泉水的照片在网上走红，他在数学方面的惊人战绩也被挖了出来，于是被人尊称为“韦神”。
2个月前，有人在北大食堂偶遇“韦神”，于是拍下了这张照片。
只见“韦神”穿着朴素，坐在狭小的位置里专心干饭，丝毫未察觉周围人的目光。
有人好奇他午餐都吃些什么。
巧的是，前两天又有人在同一地点遇到了他，拍下了他的饭和伞。
这个配置，用“寒酸”二字来形容一点不为过。
按理说，一个北大的助教，怎么也不至于“沦落”到这番境地。
但其实，这种“寒酸”并非他被动选择的结果，而是他主动坚持的日常。
有人不理解：
“这样的男生在婚恋市场上会受女生欢迎吗？”
“这样活着，还有什么意思？”
事实上，“韦神”的世界，不是我们普通人能理解的。
你觉得他朴素节俭的日常很无趣，他却沉迷在数学的世界里自得其乐。
数学带给他的乐趣，远远超过了吃什么喝什么穿什么。
对于他来说，食物就是用来饱腹的，衣服就是用来遮体取暖的，床就是用来睡觉的，有吃有穿有睡就已足够。
他的物质生活虽然朴素简单，但是他的精神世界，远比我们绝大多数人浩瀚得多。
02
“韦神”的朴素，让我想起那个践行“不消费主义”的乔桑。
在《90后女生“抠门”日常曝光，获赞31万：这样的穷人，活得有多爽？》一文中，我提到了她的极简生活方式：
快用完的牙膏，要把包装剪开，再多用一个月，直到把剩余的牙膏用得干干净净。和邻居以物换物，用黑豆、燕麦，换来邻居的荔枝、猕猴桃、西瓜、排骨汤。买菜时跟老板要那些长得不好看、有点焉儿、没人要的菜，便宜买。一年四季的衣服只有16件，一件卫衣和运动裤可以穿十几天，脏了就洗，第二天干了接着穿。……
这种生活方式，乔桑已经坚持了600多天，不是因为穷，而是因为削减了不必要的欲望。
但很多网友不理解，评论中也充斥着许多这样的言论：
“为什么要活得像开工厂一样？”“这样的生活其实和行尸走肉没有区别。”“什么时候生活只剩穿衣服和洗衣服了，我可能没生存在地球上，无法理解。”
在他们眼里，乔桑的生活方式很极端也很无趣。
但在她看来，只为必须的物品付钱，珍惜粮食和蔬菜，把简化生活后空出来的时间和精力，关注健康和心灵，是让生活回归生活的最好方式。
虽然乔桑的物质生活很简陋，但她的精神世界却很富足。
因为原本用于购物、消费、以及打理过多物品的时间，都被她腾出来思考、读书和做瑜伽。
在这个过程中，她发现自己喜欢上了读书，通勤和工作之余，她都在“啃书”，两个月可以看20多本。
“原来看一本书，比买一件衣服充实多了”，这是她坚持“不消费主义”后的真实感受。
为了让阅读的好习惯惠及他人，她还开了自己的“流浪书店”，把网友、朋友和自己的旧书收集起来，消毒、贴标签，一排排码在墙角，为周围邻居提供免费借阅。
目前，她已经收集到了整整一面墙的书。
03
“韦神”和乔桑，都不是物质真正匮乏的一类人。
他们所呈现出的“抠门”状态，其实是高级欲望替代了低级欲望之后的结果。
什么是高级的欲望？ 周国平说，高级欲望指人的精神需要，它也是人性的组成部分。人一旦品尝到和陶醉于更高层次的快乐，他面对形形色色的较低快乐的诱惑就自然有了“定力”。
简单来说，高级的欲望是一个创造的过程，它回馈给人的是幸福感和成就感，比如学习欲。
而低级的欲望是一个消费的过程，它带来的是失落、沮丧和懊恼，比如物质欲。
这里的消费，除了真金白银的消耗，也包括时间和精力的消耗。比如刷短视频。
前顺丰集团CTO吴建平，在《超级学习》一书中提到刷手机上瘾的机制：
推荐系统加入一些奇怪的算法，越来越讨用户喜欢。只要打开短视频就停不下来上滑，总是忍不住想看下一个视频是什么，有免费开盲盒的感觉。……空闲时间刷一下，时间嗖嗖地没了，这些应用像是一个偷时间的贼。
因为APP的复杂算法，让你只要刷几个自己喜欢的内容，系统就会一直推荐类似的给你，直到你刷得停不下来。
吴建平说，这在心理学上叫做“随机性奖励”，专用于刺激多巴胺分泌。
为什么有人喜欢喝咖啡？因为咖啡因能够让人对多巴胺更敏感，而多巴胺是上瘾的关键。
刷手机上瘾也是如此，手指往上滑动的时候，你不知道系统会推荐什么样的视频。当你发现是自己喜欢的，多巴胺就被刺激了，大脑感受到愉悦，你就会一直为这种愉悦买单。
但这样的愉悦很短暂，愉悦过后，你收获的往往只有空虚和失落。
而阅读或学习带来的愉悦，不但会让你收获成长，还能让你感受长时间的快感。
04
也有人意识到“低级欲望上瘾”的坏处，于是想方设法去克制乃至灭绝这种欲望，但效果往往不佳。
毕竟在学习和娱乐这两件事中，多数人都会选择娱乐。
因为学习是长期主义，立足未来，但是令人感到痛苦；娱乐聚焦眼前，令人放松。
所以，对抗“低级欲望上瘾”的最好办法不是压制它，而是唤醒、发展和满足高级的欲望。
一旦在阅读或学习上获得过快乐，日积月累，获得的成就越多，甚至超过购物和娱乐带来的愉悦，低级欲望的诱惑就不再有吸引力了。
想要发展高级欲望，并以此替代低级欲望，不妨试试最小努力原则：
把阻力降到最小，让自己一想起来，就能够即刻去行动。
比如你想提升学习的欲望，就保证手边随时都有一本书，一有空闲时间，就抓起来翻。
只要初期投入一定的努力，让这个“轮子”转动起来，后面就可以慢慢减少投入，它会一刻不停地转下去。
这就是“飞轮效应”（正向反馈）起作用的结果。
最后，值得一提的是，自律的人并非不娱乐，而是懂得适度娱乐。
无论是带来短期愉悦的低级欲望，还是带来持久愉悦的高级欲望，只要懂得平衡，并始终让高级欲望处于主导地位，幸福就不会离你太遥远。
共勉。</description>
    </item>
    
    <item>
      <title>Go程序的时间</title>
      <link>http://wiseai.cn/post/go%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%97%B6%E9%97%B4/</link>
      <pubDate>Thu, 25 Aug 2022 10:25:07 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/go%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%97%B6%E9%97%B4/</guid>
      <description>Time包定义的类型
Time: 时间类型, 包含了秒和纳秒以及 Location
Month: type Month int 月份.
定义了十二个月的常量
const ( January Month = 1 + iota February March April May June July August September October November December ) Weekday 类型: type Weekday int 周
定义了一周的七天
const ( Sunday Weekday = iota Monday Tuesday Wednesday Thursday Friday Saturday ) Duration： type Duration int64 持续时间.
定义了以下持续时间类型.
多用于时间的加减 需要传入Duration做为参数的时候.
可以直接传入 time.Second
const ( Nanosecond Duration = 1 Microsecond = 1000 * Nanosecond Millisecond = 1000 * Microsecond Second = 1000 * Millisecond Minute = 60 * Second Hour = 60 * Minute ) Location</description>
    </item>
    
    <item>
      <title>golang使用smtp发送Email</title>
      <link>http://wiseai.cn/post/email/</link>
      <pubDate>Tue, 23 Aug 2022 10:33:39 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/email/</guid>
      <description>几个开源的代码：
email 这个代码比较清晰，我现在用的就是这个，Star2.1k gomail 没用过，Star3.7k mailhog 这个Star10.7，看着是不错功能强大，但是依赖太多，没深入学习 邮件相关汇总 这个是一个邮件相关代码汇总的帖子，内容比较旧了，但是可以参考学习下 使用ssl的例子：
import ( &amp;#34;tls.Config&amp;#34; &amp;#34;email&amp;#34;//引入包，看怎么引入了 ) func SendMail(s string) error { e := NewEmail() e.From = &amp;#34;发送邮箱&amp;#34; e.To = []string{&amp;#34;目标邮箱&amp;#34;} // e.Bcc = []string{&amp;#34;bcc@junzhe.net&amp;#34;} // e.Cc = []string{&amp;#34;cc@junzhe.net&amp;#34;} //这两个基本不用 e.Subject = &amp;#34;这个是主题&amp;#34; // e.Text = []byte(&amp;#34;这里是内容&amp;#34;) e.HTML = []byte(&amp;#34;这是HTML格式的内容&amp;#34;) t := &amp;amp;tls.Config{InsecureSkipVerify: true, ServerName: &amp;#34;这里是smtp服务器&amp;#34;} err := e.SendWithTLS(&amp;#34;smtp服务器:465&amp;#34;, smtp.PlainAuth(&amp;#34;&amp;#34;, &amp;#34;邮箱名&amp;#34;, &amp;#34;密码&amp;#34;, &amp;#34;smtp服务器&amp;#34;), t) return err } </description>
    </item>
    
    <item>
      <title>Go程序执行系统命令</title>
      <link>http://wiseai.cn/post/go%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 12 Jul 2022 17:56:39 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/go%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4/</guid>
      <description>直接上代码:
package main import ( &amp;#34;bytes&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;os/exec&amp;#34; ) func main() { var err error var stdout, stderr string Loop: err = nil stdout, stderr = &amp;#34;&amp;#34;, &amp;#34;&amp;#34; fmt.Println(&amp;#34;1.列出当前目录中的目录和文件&amp;#34;) fmt.Println(&amp;#34;2.当前目录占用空间&amp;#34;) fmt.Println(&amp;#34;3.重启打印服务&amp;#34;) fmt.Println(&amp;#34;退出请输入9&amp;#34;) fmt.Println(&amp;#34;-----------------------------&amp;#34;) var key uint8 fmt.Scanf(&amp;#34;%d&amp;#34;, &amp;amp;key) switch key { case 1: err, stdout, stderr = shellRun(&amp;#34;ls -lh&amp;#34;) case 3: err, stdout, stderr = shellRun(&amp;#34;systemctl restart cups&amp;#34;) fmt.Println(&amp;#34;请输入密码!&amp;#34;) case 2: err, stdout, stderr = shellRun(&amp;#34;du -h&amp;#34;) fmt.Println(&amp;#34;当前目录占用空间为:&amp;#34;) case 9: fmt.</description>
    </item>
    
    <item>
      <title>nohup及重定向</title>
      <link>http://wiseai.cn/post/nohup%E5%8F%8A%E9%87%8D%E5%AE%9A%E5%90%91/</link>
      <pubDate>Fri, 08 Jul 2022 16:30:38 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/nohup%E5%8F%8A%E9%87%8D%E5%AE%9A%E5%90%91/</guid>
      <description> 语法：nohup Command [ Arg … ] [　&amp;amp; ]
描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。要在后台运行 nohup 命令，添加 &amp;amp; 到命令的尾部。
操作系统中有三个常用的流：
0：标准输入流 stdin 1：标准输出流 stdout 2：标准错误流 stderr &amp;gt; info.txt实际是 1 &amp;gt; info.txt的省略用法；
&amp;lt; info.txt实际是 0 &amp;lt; info.txt的省略用法。
下面步入正题： &amp;gt;nohup ./text.sh &amp;gt;output 2&amp;gt;&amp;amp;1 &amp;amp; &amp;gt;su – wiseai -c ‘/usr/local/bin/jupyter notebook &amp;amp;&amp;gt; /dev/null &amp;amp;’ 解释：
带&amp;amp;的命令行，即使terminal（终端）关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上)； 2&amp;gt;&amp;amp;1和&amp;amp;&amp;gt;相同:意思是把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件output里面，所以结果是标准错误和标准输出都导入文件output里面了。 至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而stdout有。这就会导致 &amp;gt;output 2&amp;gt;output 文件output被两次打开，而stdout和stderr将会竞争覆盖，这肯定不是我门想要的。 /dev/null文件的作用，这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。 所以一般很大的stdou和stderr当你不关心的时候可以利用stdout和stderr定向到这里。 </description>
    </item>
    
    <item>
      <title>Golang执行系统命令</title>
      <link>http://wiseai.cn/post/golang%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 08 Jul 2022 16:06:32 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/golang%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4/</guid>
      <description>直接上代码:
package main import ( &amp;#34;bytes&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;os/exec&amp;#34; ) func main() { var err error var stdout, stderr string Loop: err = nil stdout, stderr = &amp;#34;&amp;#34;, &amp;#34;&amp;#34; fmt.Println(&amp;#34;1.列出当前目录中的目录和文件&amp;#34;) fmt.Println(&amp;#34;2.重启打印服务&amp;#34;) fmt.Println(&amp;#34;退出请输入9&amp;#34;) fmt.Println(&amp;#34;-----------------------------&amp;#34;) var key uint8 fmt.Scanf(&amp;#34;%d&amp;#34;, &amp;amp;key) switch key { case 1: err, stdout, stderr = shellRun(&amp;#34;ls -l&amp;#34;) case 2: err, stdout, stderr = shellRun(&amp;#34;systemctl restart cups&amp;#34;) fmt.Println(&amp;#34;请输入密码!&amp;#34;) case 9: fmt.Println(&amp;#34;安全退出&amp;#34;) return default: fmt.Println(&amp;#34;-----------------------------&amp;#34;) fmt.Println(&amp;#34;请输入正确的数字!&amp;#34;) } if err != nil { fmt.</description>
    </item>
    
    <item>
      <title>aria2命令</title>
      <link>http://wiseai.cn/post/aria2%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 17:26:36 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/aria2%E5%91%BD%E4%BB%A4/</guid>
      <description>安装 # dnf install aria2 配置文件aria2.conf #基本配置 dir=/home/tzb/aria2/ log=/home/tzb/aria2/aria2.log input-file=/home/tzb/aria2/session/aria2.session save-session=/home/tzb/aria2/session/ save-session-interval=60 force-save=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true log-level=error #see --split option max-concurrent-downloads=5 continue=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true max-overall-download-limit=0 max-overall-upload-limit=50K max-upload-limit=20 # Http/FTP options connect-timeout=120 lowest-speed-limit=10K max-connection-per-server=10 max-file-not-found=2 min-split-size=1M split=5 check-certificate=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;false http-no-cache=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true # FTP Specific Options # BT/PT Setting bt-enable-lpd=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true #bt-max-peers=55 follow-torrent=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true enable-dht6=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;false bt-seed-unverified rpc-save-upload-metadata=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true bt-hash-check-seed bt-remove-unselected-file bt-request-peer-speed-limit=100K seed-ratio=0.0 # Metalink Specific Options # RPC Options enable-rpc=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true pause=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;false rpc-allow-origin-all=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true rpc-listen-all=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true rpc-save-upload-metadata=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true rpc-secure=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;false # Advanced Options daemon=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true disable-ipv6=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true enable-mmap=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true file-allocation=falloc max-download-result=120 #no-file-allocation-limit=32M force-sequential=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true parameterized-uri=&amp;lt;span class=&amp;#34;hljs-literal&amp;#34;&amp;gt;true 开机启动 编辑rc.</description>
    </item>
    
    <item>
      <title>find命令</title>
      <link>http://wiseai.cn/post/find%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 17:24:28 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/find%E5%91%BD%E4%BB%A4/</guid>
      <description>一.find命令
基本格式：find path expression
1.按照文件名查找
(1)find / -name httpd.conf　#在根目录下查找文件httpd.conf，表示在整个硬盘查找 (2)find /etc -name httpd.conf　#在/etc目录下文件httpd.conf (3)find /etc -name &amp;#39;*srm*&amp;#39;　#使用通配符*(0或者任意多个)。表示在/etc目录下查找文件名中含有字符串&amp;#39;srm&amp;#39;的文件 (4)find . -name &amp;#39;srm*&amp;#39; #表示当前目录下查找文件名开头是字符串&amp;#39;srm&amp;#39;的文件 2.按照文件特征查找
(1)find / -amin -10 # 查找在系统中最后10分钟访问的文件(access time) (2)find / -atime -2　# 查找在系统中最后48小时访问的文件 (3)find / -empty # 查找在系统中为空的文件或者文件夹 (4)find / -group cat # 查找在系统中属于 group为cat的文件 (5)find / -mmin -5 # 查找在系统中最后5分钟里修改过的文件(modify time) (6)find / -mtime -1 #查找在系统中最后24小时里修改过的文件 (7)find / -user fred #查找在系统中属于fred这个用户的文件 (8)find / -size +10000c　#查找出大于10000000字节的文件(c:字节，w:双字，k:KB，M:MB，G:GB) (9)find / -size -1000k #查找出小于1000KB的文件 3.</description>
    </item>
    
    <item>
      <title>grep命令</title>
      <link>http://wiseai.cn/post/grep%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 17:21:46 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/grep%E5%91%BD%E4%BB%A4/</guid>
      <description>基本格式：grep expression
1.主要参数
[options]主要参数：
－c：只输出匹配行的计数。 －i：不区分大小写 －h：查询多文件时不显示文件名。 －l：查询多文件时只输出包含匹配字符的文件名。 －n：显示匹配行及行号。 －s：不显示不存在或无匹配文本的错误信息。 －v：显示不包含匹配文本的所有行。 －r：查询目录及子目录下的文件包含匹配字符的文件名。 pattern正则表达式主要参数：
\： 忽略正则表达式中特殊字符的原有含义。 ^：匹配正则表达式的开始行。 $: 匹配正则表达式的结束行。 \&amp;lt;：从匹配正则表达 式的行开始。 \&amp;gt;：到匹配正则表达式的行结束。 [ ]：单个字符，如[A]即A符合要求 。 [ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。 .：所有的单个字符。 * ：有字符，长度可以为0。 2.实例
(1)grep &#39;test&#39; d*　#显示所有以d开头的文件中包含 test的行 (2)grep &#39;test&#39; aa bb cc #显示在aa，bb，cc文件中包含test的行 (3)grep &#39;[a-z]\{5\}&#39; aa #显示所有包含每行字符串至少有5个连续小写字符的字符串的行 (4)grep magic /usr/src　#显示/usr/src目录下的文件(不含子目录)包含magic的行 (5)grep -r magic /usr/src　#显示/usr/src目录下的文件(包含子目录)包含magic的行 (6)grep -w pattern files ：只匹配整个单词，而不是字符串的一部分(如匹配&#39;magic&#39;，而不是&#39;magical&#39;) </description>
    </item>
    
    <item>
      <title>kill命令</title>
      <link>http://wiseai.cn/post/kill%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 17:14:28 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/kill%E5%91%BD%E4%BB%A4/</guid>
      <description>kill命令用来删除执行中的程序或工作。kill可将指定的信息送至程序。预设的信息为SIGTERM(15),可将指定程序终止。若仍无法终止该程序，可使用SIGKILL(9)信息尝试强制删除程序。程序或工作的编号可利用ps指令或job指令查看。
# kill (选项) (参数) 选项:
-a：当处理当前进程时，不限制命令名和进程号的对应关系； -l &amp;lt;信息编号&amp;gt;：若不加&amp;lt;信息编号&amp;gt;选项，则-l参数会列出全部的信息名称； -p：指定kill 命令只打印相关进程的进程号，而不发送任何信号； -s &amp;lt;信息名称或编号&amp;gt;：指定要送出的信息； -u：指定用户。 参数:
进程或作业识别号：指定要删除的进程或作业。
[root@wiseai ~]# kill -l 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR1 11) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM 16) SIGSTKFLT 17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP 21) SIGTTIN 22) SIGTTOU 23) SIGURG 24) SIGXCPU 25) SIGXFSZ 26) SIGVTALRM 27) SIGPROF 28) SIGWINCH 29) SIGIO 30) SIGPWR 31) SIGSYS 34) SIGRTMIN 35) SIGRTMIN+1 36) SIGRTMIN+2 37) SIGRTMIN+3 38) SIGRTMIN+4 39) SIGRTMIN+5 40) SIGRTMIN+6 41) SIGRTMIN+7 42) SIGRTMIN+8 43) SIGRTMIN+9 44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9 56) SIGRTMAX-8 57) SIGRTMAX-7 58) SIGRTMAX-6 59) SIGRTMAX-5 60) SIGRTMAX-4 61) SIGRTMAX-3 62) SIGRTMAX-2 63) SIGRTMAX-1 64) SIGRTMAX 只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略，下面是常用的信号：</description>
    </item>
    
    <item>
      <title>screen命令</title>
      <link>http://wiseai.cn/post/screen%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 17:09:03 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/screen%E5%91%BD%E4%BB%A4/</guid>
      <description>一、使用 创建一个新的窗口 安装完成后，直接敲命令screen就可以启动它。但是这样启动的screen会话没有名字，实践上推荐为每个screen会话取一个名字，方便分辨： ＃ screen -S david
screen启动后，会创建第一个窗口，也就是窗口No. 0，并在其中打开一个系统默认的shell，一般都会是bash。所以你敲入命令screen之后，会立刻又返回到命令提示符，仿佛什么也没有发生似的，其实你已经进入Screen的世界了。当然，也可以在screen命令之后加入你喜欢的参数，使之直接打开你指定的程序，例如： ＃ screen vi david.txt screen创建一个执行vi david.txt的单窗口会话，退出vi 将退出该窗口/会话。
可以使用快捷键C-a A来为当前窗口重命名 暂时中断会话，在screen窗口键入C-a d，Screen会给出detached提示 找到该screen会话： ＃ screen -ls
重新连接会话： ＃ screen -r 12865
将指定的screen作业离线 ＃ screen -d
清除dead 会话 ＃ screen -wipe
语法 ＃screen [-AmRvx -ls -wipe][-d &amp;lt;作业名称&amp;gt;][-h &amp;lt;行数&amp;gt;][-r &amp;lt;作业名称&amp;gt;][-s ][-S &amp;lt;作业名称&amp;gt;]
参数说明 -A 将所有的视窗都调整为目前终端机的大小。 -d &amp;lt;作业名称&amp;gt; 将指定的screen作业离线。 -h &amp;lt;行数&amp;gt; 指定视窗的缓冲区行数。 -m 即使目前已在作业中的screen作业，仍强制建立新的screen作业。 -r &amp;lt;作业名称&amp;gt; 恢复离线的screen作业。 -R 先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。 -s 指定建立新视窗时，所要执行的shell。 -S &amp;lt;作业名称&amp;gt; 指定screen作业的名称。 -v 显示版本信息。 -x 恢复之前离线的screen作业。 -ls或--list 显示目前所有的screen作业。 -wipe 检查目前所有的screen作业，并删除已经无法使用的screen作业。 常用screen参数 &amp;gt; screen -S yourname -&amp;gt; 新建一个叫yourname的session &amp;gt; screen -ls -&amp;gt; 列出当前所有的session &amp;gt; screen -r yourname -&amp;gt; 回到yourname这个session &amp;gt; screen -d yourname -&amp;gt; 远程detach某个session &amp;gt; screen -d -r yourname -&amp;gt; 结束当前session并回到yourname这个session 在每个screen session 下，所有命令都以 ctrl+a(C-a) 开始。 C-a ?</description>
    </item>
    
    <item>
      <title>netstat命令</title>
      <link>http://wiseai.cn/post/netstat%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 17:01:28 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/netstat%E5%91%BD%E4%BB%A4/</guid>
      <description>简介 Netstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等等。
输出信息含义 执行netstat后，其输出结果为
Active Internet connections (w/o servers) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 2 210.34.6.89:telnet 210.34.6.96:2873 ESTABLISHED tcp 296 0 210.34.6.89:1165 210.34.6.84:netbios-ssn ESTABLISHED tcp 0 0 localhost.localdom:9001 localhost.localdom:1162 ESTABLISHED tcp 0 0 localhost.localdom:1162 localhost.localdom:9001 ESTABLISHED tcp 0 80 210.34.6.89:1161 210.34.6.10:netbios-ssn CLOSE Active UNIX domain sockets (w/o servers) Proto RefCnt Flags Type State I-Node Path unix 1 [ ] STREAM CONNECTED 16178 @000000dd unix 1 [ ] STREAM CONNECTED 16176 @000000dc unix 9 [ ] DGRAM 5292 /dev/log unix 1 [ ] STREAM CONNECTED 16182 @000000df 从整体上看，netstat的输出结果可以分为两个部分：</description>
    </item>
    
    <item>
      <title>Debian的包管理工具apt</title>
      <link>http://wiseai.cn/post/debian%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 06 Jul 2022 16:52:16 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/debian%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
      <description>清除所有已删除包的残余配置文件： #dpkg -l |grep ^rc|awk &#39;{print $2}&#39; |xargs dpkg -P</description>
    </item>
    
    <item>
      <title>diff、cmp命令</title>
      <link>http://wiseai.cn/post/diffcmp%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 16:46:27 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/diffcmp%E5%91%BD%E4%BB%A4/</guid>
      <description>diff以行为单位对比：
$ diff [-bBi] from-file to-file 选项与参数： from-file ：一个档名，作为原始比对档案的档名； to-file ：一个档名，作为目的比对档案的档名； 注意，from-file 或to-file 可以- 取代，那个- 代表『Standard input』之意。 -b ：忽略一行当中，仅有多个空白的差异(例如&#34;about me&#34; 与&#34;about me&#34; 视为相同 -B ：忽略空白行的差异。 -i ：忽略大小写的不同。 cmp利用『位元组』单位去比对：
$ cmp [-l] file1 file2 选项与参数： -l ：将所有的不同点的位元组处都列出来。因为cmp 预设仅会输出第一个发现的不同点。 </description>
    </item>
    
    <item>
      <title>Docker容器设置ssh连接</title>
      <link>http://wiseai.cn/post/docker%E5%AE%B9%E5%99%A8%E8%AE%BE%E7%BD%AEssh%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Wed, 06 Jul 2022 16:36:58 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/docker%E5%AE%B9%E5%99%A8%E8%AE%BE%E7%BD%AEssh%E8%BF%9E%E6%8E%A5/</guid>
      <description>这里以debian容器为例：
一、进入容器、更改更新源及安装openssh-server # docker exec -it debian /bin/bash # sed -i -e &#39;s/deb.debian.org/mirrors.aliyun.com/g&#39; \ -e &#39;s/security.debian.org/mirrors.aliyun.com/g&#39; \ /etc/apt/sources.list # apt install openssh-server 二、添加目录、修改配置文件 # mkdir -p /run/sshd 注：(这个地方看启动服务时的提示信息，运行sshd服务的命令只能使用绝对路径/usr/sbin/sshd -D)
下面修改/etc/ssh/sshd_config 先说下PermitRootLogin：prohibit-password 允许root登陆但不能使用密码登陆yes 允许root以任何方式登陆,我们这里只允许使用密钥无密码登陆： # sed -i &#39;s/#PermitRootLogin prohibit-password/PermitRootLogin prohibit-password/g&#39; /etc/ssh/sshd_config 下面修改/etc/pam.d/sshd # sed -i &#39;s/session .*required .*pam_loginuid.so/#session required pam_loginuid.so/g&#39; /etc/pam.d/sshd 注：这个是一个pam登陆控制，可以参考ftp服务器设置
三、添加ssh服务，使服务在容器打开时就启动： # sed -i &#39;$a /usr/sbin/sshd -D&#39; /etc/bash.bashrc centos容器中遇到的问题： 显示/etc/ssh/中缺少公钥和私钥：
$ ssh-keygen -t rsa -N &amp;#39;&amp;#39; -f /etc/ssh/ sh_host_rsa_key $ ssh-keygen -t ed25519 -N &amp;#39;&amp;#39; -f /etc/ssh/ssh_host_ed25519_key $ ssh-keygen -t ecdsa -N &amp;#39;&amp;#39; -f /etc/ssh/ssh_host_ecdsa_key </description>
    </item>
    
    <item>
      <title>profile、bashrc、bash_profile详解</title>
      <link>http://wiseai.cn/post/profilebashrcbash_profile%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 06 Jul 2022 16:20:56 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/profilebashrcbash_profile%E8%AF%A6%E8%A7%A3/</guid>
      <description>/etc/profile: 此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.并从/etc/profile.d目录的配置文件中搜集shell的设置.
英文描述为：
# /etc/profile # System wide environment and startup programs, for login setup # Functions and aliases [Go](http://lib.csdn.net/base/go &amp;#34;Go知识库&amp;#34;) in /etc/bashrc # It&amp;#39;s NOT a good idea to change this file unless you know what you # are doing. It&amp;#39;s much better to create a custom.sh shell script in # /etc/profile.d/ to make custom changes to your environment, as this # will prevent the need for merging in future updates.</description>
    </item>
    
    <item>
      <title>sed和awk命令</title>
      <link>http://wiseai.cn/post/sed%E5%92%8Cawk%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 16:03:36 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/sed%E5%92%8Cawk%E5%91%BD%E4%BB%A4/</guid>
      <description># sed [-nefr] [动作]
选项与参数：
-n ：使用安静(silent)模式。在一般sed 的用法中，所有来自STDIN 的资料一般都会被列出到屏幕上。 但如果加上-n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。 -e ：直接在指令列模式上进行sed 的动作编辑； -f ：直接将sed 的动作写在一个档案内， -f filename 则可以执行filename 内的sed 动作； -r ：sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法) -i ：直接修改读取的档案内容，而不是由屏幕输出。 动作说明： [n1[,n2]]function
n1, n2 ：不见得会存在，一般代表『选择进行动作的行数』，举例来说，如果我的动作 是需要在10 到20 行之间进行的，则『 10,20[动作行为] 』 function 有底下这些咚咚： a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～ c ：取代， c 的后面可以接字串，这些字串可以取代n1,n2 之间的行！ d ：删除，因为是删除啊，所以d后面通常不接任何咚咚； i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)； p ：列印，亦即将某个选择的资料印出。通常p 会与参数sed -n 一起运作～ s ：取代，可以直接进行取代的工作！通常这个s的动作可以搭配正规表示法！ 例如1,20s/old/new/g 例子：
sed &amp;#39;2,5d&amp;#39; 删除2-5行 sed &amp;#39;2a abc&amp;#39; 在第二行后添加abc sed &amp;#39;2,5c abc&amp;#39; 将2-5行替换为abc sed -n &amp;#39;2,5p&amp;#39; 打印2-5行 sed &amp;#39;s/word1/word2/g&amp;#39; 将word1替换为word2 sed -i 直接修改文档内容 # cat /etc/passwd | sed -e &#39;4d&#39; -e &#39;6c no six line&#39; &amp;gt; passwd.</description>
    </item>
    
    <item>
      <title>sftp命令</title>
      <link>http://wiseai.cn/post/sftp%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 15:57:22 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/sftp%E5%91%BD%E4%BB%A4/</guid>
      <description>常用方式 格式：sftp &amp;lt;host&amp;gt; 通过sftp连接&amp;lt;host&amp;gt;，端口为默认的22，用户为Linux当前登录用户。 格式：sftp -oPort=&amp;lt;port&amp;gt; &amp;lt;host&amp;gt; 通过sftp连接&amp;lt;host&amp;gt;，指定端口&amp;lt;port&amp;gt;，用户为Linux当前登录用户。 格式：sftp &amp;lt;user&amp;gt;@&amp;lt;host&amp;gt; 通过sftp连接&amp;lt;host&amp;gt;，端口为默认的22，指定用户&amp;lt;user&amp;gt;。 格式：sftp -oPort=&amp;lt;port&amp;gt; &amp;lt;user&amp;gt;@&amp;lt;host&amp;gt; 通过sftp连接&amp;lt;host&amp;gt;，端口为&amp;lt;port&amp;gt;，用户为&amp;lt;user&amp;gt;。 sftp连接成功之后常用操作命令如下：
help/? 打印帮助信息。 pwd 查看远程服务器当前目录； lpwd 查看本地系统的当前目录。 cd &amp;lt;dir&amp;gt; 将远程服务器的当前目录更改为&amp;lt;dir&amp;gt;； lcd &amp;lt;dir&amp;gt; 将本地系统的当前目录更改为&amp;lt;dir&amp;gt;。 ls 显示远程服务器上当前目录的文件名； ls -l 显示远程服务器上当前目录的文件详细列表； ls &amp;lt;pattern&amp;gt; 显示远程服务器上符合指定模式&amp;lt;pattern&amp;gt;的文件名； ls -l &amp;lt;pattern&amp;gt; 显示远程服务器上符合指定模式&amp;lt;pattern&amp;gt;的文件详细列表。 lls 显示本地系统上当前目录的文件名； lls的其他参数与ls命令的类似。 get &amp;lt;file&amp;gt; 下载指定文件&amp;lt;file&amp;gt;； -r参数操作目录 get &amp;lt;pattern&amp;gt; 下载符合指定模式&amp;lt;pattern&amp;gt;的文件。-r参数操作目录 put &amp;lt;file&amp;gt; 上传指定文件&amp;lt;file&amp;gt;；-r参数操作目录 put &amp;lt;pattern&amp;gt; 上传符合指定模式&amp;lt;pattern&amp;gt;的文件。-r参数操作目录 progress 切换是否显示文件传输进度。 mkdir &amp;lt;dir&amp;gt; 在远程服务器上创建目录； lmkdir &amp;lt;dir&amp;gt; 在本地系统上创建目录。 exit/quit/bye 退出sftp。 ! 启动一个本地shell。 ! &amp;lt;commandline&amp;gt; 执行本地命令行。 其他命令还有：chgrp, chmod, chown, ln, lumask, rename, rm, rmdir, symlink, version。</description>
    </item>
    
    <item>
      <title>ssh免密码登陆</title>
      <link>http://wiseai.cn/post/ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E9%99%86/</link>
      <pubDate>Wed, 06 Jul 2022 15:49:33 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E9%99%86/</guid>
      <description>在client生成公钥和私钥： ＃ ssh-keygen -t rsa 注:这个命令可以参考下git的使用，rsa也没有问题。
位置在~/.ssh/下，分别是id_rsa和id_rsa.pub
将client的公钥上传到server： ＃ ssh-copy-id -p &#39;端口&#39; &#39;用户名@IP或域名&#39; 这个时候client的公钥文件内容会追加写入到server的 .ssh/authorized_keys 文件中。
登陆免密了：
＃ ssh -p &#39;端口&#39; &#39;用户名@IP或域名&#39; 打完，收功。</description>
    </item>
    
    <item>
      <title>Golang生成随机字符串</title>
      <link>http://wiseai.cn/post/golang%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Wed, 06 Jul 2022 08:54:04 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/golang%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>假如我们要生成一个固定长度的随机字符串，包含大小写字母，没有数字，没有特殊字符串，那么我们怎么做呢？需要怎样优化，才会更简单，更高效？在最终的方案之前，我们看看最常见的写法是怎样的，然后是如何一步步演进到最终的高效率方案的。好吧，先看下最原始的方案。
常见做法(Runes) func init() { rand.Seed(time.Now().UnixNano()) } var letterRunes = []rune(&amp;#34;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#34;) func RandStringRunes(n int) string { b := make([]rune, n) for i := range b { b[i] = letterRunes[rand.Intn(len(letterRunes))] } return string(b) } 这个实现比较简单，二十六字母（大小写），然后随机取数，获得随机字符串。
Bytes改进 我们在最开始的时候进行了假设，我们的随机字符串只包含大小写字母，这样的话，我们发现没有必要使用rune类型存储，因为在Golang（Go语言）UTF-8编码下，英文字母和byte字节是一对一的。byte的本质是uint8类型，而rune本质是int32类型。我们改进后的代码如下：
const letterBytes = &amp;#34;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#34; func RandStringBytes(n int) string { b := make([]byte, n) for i := range b { b[i] = letterBytes[rand.Intn(len(letterBytes))] } return string(b) } 仔细看上面的代码，我们不光对rune类型进行了改进，还把原来的letter变量变成了常量，这样len(letterBytes)也是一个常量，代码的效率将大大提升。
余数改进 我们前面的方案都是通过调用rand.Intn()生成的随机字符，这个rand.Intn()其实是委托调用的Rand.Intn(),而Rand.Intn()最终又是调用的Rand.Int31n()实现。相比我们直接调用rand.Int63()来说，rand.Intn()要慢很多。
所以我们可以把rand.Intn()换成rand.Int63()来提高效率，为了不超过letterBytes的索引范围，我们使用余数来保证。
func RandStringBytesRmndr(n int) string { b := make([]byte, n) for i := range b { b[i] = letterBytes[rand.</description>
    </item>
    
    <item>
      <title>U盘启动盘制作</title>
      <link>http://wiseai.cn/post/u%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C/</link>
      <pubDate>Tue, 05 Jul 2022 10:08:37 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/u%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C/</guid>
      <description>一、Ventoy:制作可启动U盘的开源工具 github
gitee
优点 多平台、支持Iso镜像多
使用方法 在安装包解压后的目录下，打开终端执行 sudo sh VentoyWeb.sh
打开浏览器，直接访问 http://127.0.0.1:24680
提示：
执行第1步后会在终端上打印出对应的 http 地址。很多系统中都可以按下 Ctrl 键，同时鼠标点击链接即可。无需再手动打开浏览器。 VentoyWeb.sh 默认情况下监听 127.0.0.1 地址的 24680 端口。此时只能通过本机的浏览器进行访问。 你也可以像这样 sudo sh VentoyWeb.sh -H 192.168.0.100 -P 8080 指定IP地址和端口号。 此时你可以通过同网络内的另一台电脑上的浏览器来访问这个界面进行操作。这在有些情况下比较方便。 比如，你有一台机器里面安装了Linux的系统，但是并没有安装图形界面，只有命令行操作界面。此时你可以在命令行里面执行上述命令， 然后在另外一台有图形环境的电脑上（比如Windows）通过浏览器访问对应的页面进行操作。只要这两台电脑网络上是联通的即可。 二、rufus:只支持windows的U盘启动盘制作工具 github
使用方法 没有特别的，和其它windows程序一样，下一步，下一步就可以了。</description>
    </item>
    
    <item>
      <title>愁</title>
      <link>http://wiseai.cn/post/%E6%84%81/</link>
      <pubDate>Mon, 04 Jul 2022 16:40:53 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/%E6%84%81/</guid>
      <description>靠在阳台抽烟， 我抽一半，风抽一半，
我没和风计较，
因为风也有自己的忧愁。
斜依栏 吞云雾，
半入清风半入喉，
莫问清风何处走，
清风也识人间愁。</description>
    </item>
    
    <item>
      <title>大数的阶乘</title>
      <link>http://wiseai.cn/post/%E5%A4%A7%E6%95%B0%E7%9A%84%E9%98%B6%E4%B9%98/</link>
      <pubDate>Mon, 27 Jun 2022 10:38:51 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/%E5%A4%A7%E6%95%B0%E7%9A%84%E9%98%B6%E4%B9%98/</guid>
      <description>直接上代码:
C语言: #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;time.h&amp;gt; //给计算结果一个数组，并指定大小为4096 //第一次写程序使用的字符串保存大数，但是有个问题，需要char到int来回转换，影响计算性能。 //所以使用数组来保存数据，方便计算 int jieguo[40960] = {0}; //数组长度 int len = 0; //fac为计算阶乘的函数，计算结果存储在jieguo[4096]数组中 int fac(int n) { int v = 0; int f = 0; //初始化jieguo数组和数组长度 jieguo[0] = 1; len = 1; for(int i = 1; i &amp;lt;= n; i++) { for(int j = len - 1; j &amp;gt;= 0; j--) { v = i * jieguo[j]; jieguo[j] = v % 10; v = v / 10; f = j + 1; //如果v大于0，说明还要进位，所以将进位的数加上原来的数，判断进位后存储。 //为了提高效率，使用for进行循环 for(; v &amp;gt; 0 &amp;amp;&amp;amp; f &amp;lt; len; f++) { v = v + jieguo[f]; jieguo[f] = v % 10; v = v / 10; } //如果这时f等于数组的长度len并且v还大于0，说明需要增加jieguo数组的长度 //为了提高效率，仍然使用for进行循环 for(; v &amp;gt; 0;) { jieguo[len] = v % 10; v = v / 10; len++; if(len &amp;gt; 40960 - 2) { //这个时候说明数组长度不够，需要增加jieguo后面的数值 //计算100的阶乘的数组长度为158，计算1000的阶乘的数组长度为2568。 //可以根据实际需要进行设置。 return 1; } } }	} return 0; } //下面写主函数 int main(void) { int num; printf(&amp;#34;请输入需要计算阶乘的数字:&amp;#34;); scanf(&amp;#34;%d&amp;#34;, &amp;amp;num); //计算阶乘结果 int r = fac(num); //如果返回1,则说明数组长度不够，需要增加长度 if(r == 1) { printf(&amp;#34;计算结果太大，请增加数组长度！\n&amp;#34;); return 0; } printf(&amp;#34;%d的阶乘为：&amp;#34;, num); for(int i = len - 1; i &amp;gt;= 0; i--) { printf(&amp;#34;%d&amp;#34;, jieguo[i]); } printf(&amp;#34;\n&amp;#34;); printf(&amp;#34;%d\n&amp;#34;, len); printf(&amp;#34;运行时间:%.</description>
    </item>
    
    <item>
      <title>Linux中firefox支持flash</title>
      <link>http://wiseai.cn/post/linux%E4%B8%ADfirefox%E6%94%AF%E6%8C%81flash/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%ADfirefox%E6%94%AF%E6%8C%81flash/</guid>
      <description>这个有点旧了，参考下 进入adobe中下载flash
解压文件
cp ./libflashplayer.so /home/wiseai/.mozilla/plugins/
chmod 755 /home/wiseai/.mozilla/plugins/libflashplayer.so
搞定</description>
    </item>
    
    <item>
      <title>Linux远程连接软件</title>
      <link>http://wiseai.cn/post/linux%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%BD%AF%E4%BB%B6/</guid>
      <description>远程桌面客户端:Remmina Remote Desktop Client
安装：apt install remmina</description>
    </item>
    
    <item>
      <title>NetworkManager网络管理相关问题</title>
      <link>http://wiseai.cn/post/networkmanager%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/networkmanager%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
      <description>相关配置文件位置 /etc/dbus-1/system.d/NetworkManager.conf /etc/dbus-1/system.d/nm-avahi-autoipd.conf /etc/dbus-1/system.d/nm-dhcp-client.conf /etc/dbus-1/system.d/nm-dispatcher.conf /etc/dbus-1/system.d/nm-system-settings.conf /etc/rc.d/init.d/NetworkManager
/etc/dbus-1/system.d/nm-applet.conf
不使用Network Manager 管理某些网络设备 默认情况下，NetworkManager 管理除 lo（环回）设备以外的所有网络设备，因为一些情况需要将设备设置为 unmanaged，也就是不使用NetworkManager管理这些设备。 查看设备状态 # nmcli device status 在 /etc/NetworkManager/NetworkManager.conf 配置文件的[main] 层级下启用插件 keyfile。 [main] plugins=keyfile 这个一般都启用了。 - 创建 /etc/NetworkManager/conf.d/unmanaged-devices.conf 配置文件（这个文件名没有要求，自己容易识别就可以了），包含以下内容：
[keyfile] unmanaged-devices=interface-name:wlan* 以分号隔开； 可以使用通配符来匹配接口； interface-name:eth*,except:interface-name:eth0;表示：除了 eth0，其他以 eth 开头的接口全部 unmanaged； 可以通过 mac 地址来排除接口，mac:66:77:88:99:00:aa - 重启服务 # systemctl restart network-manager.service</description>
    </item>
    
    <item>
      <title>php5-fpm.sock failed</title>
      <link>http://wiseai.cn/post/php5-fpm.sock-failed/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/php5-fpm.sock-failed/</guid>
      <description>/etc/php5/fpm/pool.d/www.conf
里面找到这样一段代码：
listen = 127.0.0.1:9000
在这上面代码的下面添加一行：
listen = /var/run/php5-fpm.sock
保存后启动php5-fpm
/etc/init.d/php5-fpm restart
这时就可以正常访问了</description>
    </item>
    
    <item>
      <title>php截取中文字符串乱码问题</title>
      <link>http://wiseai.cn/post/php%E6%88%AA%E5%8F%96%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/php%E6%88%AA%E5%8F%96%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</guid>
      <description>php截取字符串有两个函数:
一个是substr()，这个用来截取全字母的字符串，截取UTF-8的汉字就会出错；
另一个是mb_substr()，这个用来截取汉字，但一定要注明编码方式：mb_substr(&amp;lsquo;我的祖国是中国&amp;rsquo;, 0, 4, &amp;lsquo;utf-8&amp;rsquo;);</description>
    </item>
    
    <item>
      <title>samba服务器配置和使用</title>
      <link>http://wiseai.cn/post/samba%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/samba%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>安装：
#dnf install samba
端口：
管理工作组：UDP137，138
共享数据：TCP139，445（不一定存在）
启动服务：
#systemctl start smb
#systemctl enable smb
配置文件（/etc/samba/smb.conf）:
1.先设定好服务器整体环境方面的参数
[global]
config file = /etc/samba/conf/smb.conf.%m
说明：config file可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件 不存在，则该项无效。这个参数很有用，可以使得samba配置更灵活，可以让一台samba服务器模拟多台不同配置的服务器。比如，你想让PC1（主机 名）这台电脑在访问Samba Server时使用它自己的配置文件，那么先在/etc/samba/host/下为PC1配置一个名为smb.conf.pc1的文件，然后在 smb.conf中加入：config file = /etc/samba/conf/smb.conf.%m。这样当PC1请求连接Samba Server时，smb.conf.%m就被替换成smb.conf.pc1。这样，对于PC1来说，它所使用的Samba服务就是由 smb.conf.pc1定义的，而其他机器访问Samba Server则还是应用smb.conf。
#用户组 workgroup = mygroup #欢迎信息 server string = Samba Server Version %v #加密 security = user #使用TDB 数据库格式 passdb backend = tdbsam #不加载打印机 load printers = no #共享名 [homes] #说明 comment = Home Directories #除了使用者自己外,不可被其他人浏览 browseable = no #挂载后可擦写此分享 writable = yes #建立档案的权限为 664 create mode = 0664 #建立目录的权限为 775 directory mode = 0775 #指定允许访问该共享资源的用户&amp;amp;&amp;amp;多个用户或者组中间用逗号隔开，如果要加入一个组就用&amp;#34;@组名&amp;#34;表示,%s表示代替前一个[]里的内容 valid users = %S valid users = MYDOMAIN\%S [share] comment = Public Stuff #实际的 Linux 上面的目录位置 path = /home/samba #用来指定该共享的管理员（对该共享具有完全控制权限） admin users = admin #指定允许访问该共享资源的用户或者组 valid users = share,@share #指定不允许访问该共享资源的用户 invalid users = guest #除了使用者自己外,不可被其他人浏览 browseable = no #指定可以在该共享下写入文件的用户 write list = share,@share #指定该共享是否允许guest账户访问 public = no #指定该共享路径是否可写 writable = yes #可以在该共享下写入文件的用户和组 write list = share,@share 用 testparm 查阅 smb.</description>
    </item>
    
    <item>
      <title>ssh加密算法的启用禁用方法</title>
      <link>http://wiseai.cn/post/ssh%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%9A%84%E5%90%AF%E7%94%A8%E7%A6%81%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/ssh%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%9A%84%E5%90%AF%E7%94%A8%E7%A6%81%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>“手机ES文件浏览器”不能连接sftp的问题解决方法 首先，说说为什么学习这个东西，在使用“手机ES文件浏览器”这个软件的时候，出现了不能连接的情况，在网上查询后发现是KexAlgorithms 密钥交换算法的问题，在/etc/ssh/sshd_config后添加: KexAlgorithms +diffie-hellman-group14-sha1 后问题解决。 出现no matching host key type found.Their offer: ssh-rsa,ssh-dss这个问题时,在/etc/ssh/sshd_config后添加： HostKeyAlgorithms ssh-rsa 配置位置：/etc/ssh/sshd_config Ciphers Ciphers 指定 ssh 使用的加密算法。多个加密算法之间使用逗号分隔。当 Ciphers 的值以 + 字符开始时，指定的加密算法将附加到默认集合，不影响默认集合中的其它算法。当 Ciphers 的值以 ‘-’ 字符开始时，指定的加密算法将会从默认集合中移除，不影响默认集合中的其它项目。 比如，在 sshd_config 文件的最后添加如下行： Ciphers +3des-cbc,aes128-cbc 这样就添加了两个加密算法。 Ciphers -3des-cbc,aes128-cbc 这样就删除了两个加密算法。
MACs MACs 选项指定可用的 MAC（消息认证代码）算法，用于数据完整性保护。配置方法与 Ciphers 一致。
KexAlgorithms KexAlgorithms 选项指定可用的密钥交换算法。配置方法与 Ciphers 一致。
PubkeyAcceptedKeyTypes PubkeyAcceptedKeyTypes 指定公钥认证允许的密钥类型。配置方法与 Ciphers 一致。
查看 ssh 支持的不同类别的加密算法 Ciphers: ssh -Q cipher MACs: ssh -Q mac KexAlgorithms: ssh -Q kex PubkeyAcceptedKeyTypes: ssh -Q key</description>
    </item>
    
    <item>
      <title>vi和vim使用</title>
      <link>http://wiseai.cn/post/vi%E5%92%8Cvim%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/vi%E5%92%8Cvim%E4%BD%BF%E7%94%A8/</guid>
      <description>三种模式，分别是『一般指令模式』、『编辑模式』与『指令列命令模式』。 一般指令模式(command mode) 以vi 打开一个档案就直接进入一般指令模式了(这是预设的模式，也简称为一般模式)。在这个模式中， 你可以使用『上下左右』按键来移动游标，你可以使用『删除字元』或『删除整列』来处理档案内容， 也可以使用『复制、贴上』来处理你的文件资料。 编辑模式(insert mode) 在一般指令模式中可以进行删除、复制、贴上等等的动作，但是却无法编辑文件内容的！要等到你按下『i, I, o, O, a, A, r, R』等任何一个字母之后才会进入编辑模式。注意了！通常在Linux中，按下这些按键时，在画面的左下方会出现『INSERT或REPLACE』的字样，此时才可以进行编辑。而如果要回到一般指令模式时，则必须要按下『Esc』这个按键即可退出编辑模式。 指令列命令模式(command-line mode) 在一般模式当中，输入『 : / ?』三个中的任何一个按钮，就可以将游标移动到最底下那一列。在这个模式当中，可以提供你『搜寻资料』的动作，而读取、存档、大量取代字元、离开vi 、显示行号等等的动作则是在此模式中达成的！ 按键说明 一般指令模式可用的按键说明，游标移动、复制贴上、搜寻取代等 屏幕『向下』移动半页: [Ctrl] + [d] 屏幕『向上』移动半页: [Ctrl] + [u] 游标向右移动这一列的n个字符: n空格键 移动到这个档案的第n行#: nG 游标向下移动n行#:n回车键 搜寻与取代 在第n1与n2列之间寻找word1这个字串，并将该字串取代为word2 #:n1,n2s/word1/word2/g 从第一列到最后一列寻找word1字串，并将该字串取代为word2 #:1,$s/word1/word2/g 从第一列到最后一列寻找word1字串，并将该字串取代为word2,且在取代前显示提示字元给使用者确认(confirm)是否需要取代 #:1,$s/word1/word2/gc 删除、复制与粘贴 删除游标所在到第一行的所有资料#:d1G 删除游标所在到最后一列的所有资料#:dG 删除游标所在处，到该行的最后一个字符#:d$ 删除游标所在处，到该行的最前面一个字符#:d0 将游标所在行与下一行的资料结合成同一列#:J 复原前一个动作#:u 重做上一个动作#:[Ctrl]+r 重复前一个动作#:. 区块选择的按键意义 用长方形的方式选择区块#:[Ctrl]+v 多档案编辑
vim /etc/hosts /etc/resolv.conf 编辑下一个档案::n 编辑上一个档案::N 列出目前这个vim的开启的所有档案::files 多视窗功能 在指令列模式输入『:sp {filename}』 『[ctrl]+w+↑』[ctrl]+w+j及『[ctrl]+w+↓』[ctrl]+w+k在两个视窗之间移动 </description>
    </item>
    
    <item>
      <title>下载命令wget</title>
      <link>http://wiseai.cn/post/%E4%B8%8B%E8%BD%BD%E5%91%BD%E4%BB%A4wget/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E4%B8%8B%E8%BD%BD%E5%91%BD%E4%BB%A4wget/</guid>
      <description>选项:
-b 后台下载 -O 文件名为***（大写o） -i 下载文件中的URL -t 设置重试次数（0为无限次） -c 断点续传 其它参数：wget –help</description>
    </item>
    
    <item>
      <title>使用caddy搭建webdav服务器</title>
      <link>http://wiseai.cn/post/%E4%BD%BF%E7%94%A8caddy%E6%90%AD%E5%BB%BAwebdav%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E4%BD%BF%E7%94%A8caddy%E6%90%AD%E5%BB%BAwebdav%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>首先下载或者编译包含Webdav插件的Caddy 生成密码（设置123456789的密码） # caddy hash-password --plaintext 123456789
JDJhJDE0JHpGUDNaL1Q5UEV2dWZxd1BCYWdGUS56WkdZbHJDZG8ybURERWYyRzlzLzd0TTM2akYxNFVh
编辑Caddyfile { http_port 80 https_port 443 order webdav before file_server } :6666 { root * /home/xjc/software/caddy/ encode zstd gzip basicauth { #用户名 上面命令生成的密码 admin JDJhJDE0JHpGUDNaL1Q5UEV2dWZxd1BCYWdGUS56WkdZbHJDZG8ybURERWYyRzlzLzd0TTM2akYxNFVh } route { rewrite /webdav /webdav/ webdav /webdav/* { prefix /webdav } } } 运行服务 # caddy run -config Caddyfile -watch
或者
# caddy start后台运行服务
# caddy stop停止服务
挂载webdav网盘 # sudo mount.davfs http://127.0.0.1:6666/webdav /file/to/path/ -o uid=uos,gid=uos</description>
    </item>
    
    <item>
      <title>使用OpenSSL生成证书</title>
      <link>http://wiseai.cn/post/%E4%BD%BF%E7%94%A8openssl%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E4%BD%BF%E7%94%A8openssl%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6/</guid>
      <description>下载安装OpenSSL，进入/bin/下面，执行命令（把ssl目录下的openssl.cnf 拷贝到bin目录下）
1.首先要生成服务器端的私钥(key文件):
openssl genrsa -des3 -out server.key 1024 [root@airwaySSL openssl]# cd ssl/ [root@airwaySSL ssl]# pwd /home/openssl/ssl [root@airwaySSL ssl]# ls certs man misc openssl.cnf private server.csr server.key 运行时会提示输入密码,此密码用于加密key文件(参数des3便是指加密算法,当然也可以选用其他你认为安全的算法.),以后每当需读取此文件(通过openssl提供的命令或API)都需输入口令.如果觉得不方便,也可以去除这个口令,但一定要采取其他的保护措施!
去除key文件口令的命令:
openssl rsa -in server.key -out server.key 2.openssl req -new -key server.key -out server.csr -config openssl.cnf
[root@airwaySSL bin]# openssl req -new -key server.key -out server.csr -config openssl.cnf Enter pass phrase for server.key:12345 You are about to be asked to enter information that will be incorporated into your certificate request.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 boot EEPROM</title>
      <link>http://wiseai.cn/post/raspberry-pi-4-boot-eeprom/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/raspberry-pi-4-boot-eeprom/</guid>
      <description>Raspberry Pi 4 boot EEPROM 官方文档：https://www.raspberrypi.org/documentation/hardware/raspberrypi/booteeprom.md
升级 Updating from Raspberry Pi OS Bootloader updates are instigated during a normal apt update, apt full-upgrade cycle, this means you will get new features and bug fixes during your normal updates.
Bootloader updates are performed by rpi-eeprom-update service provided by the rpi-eeprom package. This service runs at boot and updates the bootloader at the next reboot if a new production release is available. The service automatically migrates the current boot settings to the new bootloader release.</description>
    </item>
    
    <item>
      <title>更改ubuntu源</title>
      <link>http://wiseai.cn/post/%E6%9B%B4%E6%94%B9ubuntu%E6%BA%90/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E6%9B%B4%E6%94%B9ubuntu%E6%BA%90/</guid>
      <description>sed -i &#39;s#http://archive.ubuntu.com/ubuntu/#mirror://mirrors.ubuntu.com/mirrors.txt#&#39; /etc/apt/sources.list</description>
    </item>
    
    <item>
      <title>locate命令</title>
      <link>http://wiseai.cn/post/locate%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/locate%E5%91%BD%E4%BB%A4/</guid>
      <description>locate命令用于查找符合条件的文档，他会去保存文档和目录名称的数据库内，查找合乎范本样式条件的文档或目录。 # locate [-d ][--help][--version][查找内容文本]
参数：
-b, --basename 仅匹配路径名的基本名称，**也就是说文件名包含的才显示，目录不显示**。 -c, --count 只输出找到的数量 -d, --database DBPATH 使用 DBPATH 指定的数据库，而不是默认数据库 /var/lib/mlocate/mlocate.db -e, --existing 仅打印当前现有文件的条目 -1 如果是 1则启动安全模式。在安全模式下，使用者不会看到权限无法看到的档案。这会始速度减慢，因为 locate 必须至实际的档案系统中取得档案的权限资料。 -0, --null 在输出上带有NUL的单独条目 -S, --statistics 不搜索条目，打印有关每个数据库的统计信息 -P, --nofollow, -H 检查文件存在时不要遵循尾随的符号链接 -l, --limit, -n LIMIT 将输出（或计数）限制为LIMIT个条目 -n 至多显示 n个输出。 -m, --mmap 被忽略，为了向后兼容 -r, --regexp REGEXP 使用基本正则表达式 --regex 使用扩展正则表达式 -q, --quiet 安静模式，不会显示任何错误讯息 -s, --stdio 被忽略，为了向后兼容 -o 指定资料库存的名称。 -h, --help 显示帮助 -i, --ignore-case 忽略大小写 -V, --version 显示版本信息 locate 的数据库在 /var/lib/slocate/slocate.</description>
    </item>
    
    <item>
      <title>整站或网页下载软件httrack</title>
      <link>http://wiseai.cn/post/%E6%95%B4%E7%AB%99%E6%88%96%E7%BD%91%E9%A1%B5%E4%B8%8B%E8%BD%BD%E8%BD%AF%E4%BB%B6httrack/</link>
      <pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E6%95%B4%E7%AB%99%E6%88%96%E7%BD%91%E9%A1%B5%E4%B8%8B%E8%BD%BD%E8%BD%AF%E4%BB%B6httrack/</guid>
      <description>首先安装httrack:
＃dnf install httrack
使用说明：
＃httrack
输入项目名
输入保存目录
输入需要保存的网站URL或者网页URL
其它的默认就好</description>
    </item>
    
    <item>
      <title>搭建apt本地源</title>
      <link>http://wiseai.cn/post/%E6%90%AD%E5%BB%BAapt%E6%9C%AC%E5%9C%B0%E6%BA%90/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E6%90%AD%E5%BB%BAapt%E6%9C%AC%E5%9C%B0%E6%BA%90/</guid>
      <description>一、安装apt-mirror命令 # apt install apt-mirror
二、 修改apt-mirror配置文件 首先， 确定自己系统的版本 ，root权限执行：
# lsb_release -a
我的系统是ubuntu的bionic，从阿里云下载源，一般有5个目录，前三个常用，后两个是预发布软件，不常用，我一般用前三个
deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse 然后，编辑apt-mirror的配置文件/etc/apt/mirror.list
### 配置镜像下载目录 set base_path /var/spool/apt-mirror # 架构配置，i386/amd64，默认的话会下载跟本机相同的架构的源 set defaultarch amd64 # 下载线程数 set nthreads 20 set _tilde 0 # 阿里云的源（这里没有添加deb-src的源码源） deb http://mirrors.</description>
    </item>
    
    <item>
      <title>yum时出现error的解决办法</title>
      <link>http://wiseai.cn/post/yum%E6%97%B6%E5%87%BA%E7%8E%B0error%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/yum%E6%97%B6%E5%87%BA%E7%8E%B0error%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>错误内容： Unable to detect release version (use ‘–releasever’ to specify release version) error: rpmdb: damaged header #173 retrieved — skipping. error: rpmdbNextIterator: skipping h# 173 blob size(55540): BAD, 8 + 16 * il(78) + dl(54284) 解决办法： 首先：删除/var/lib/下的rpm文件夹
之后：执行命令rpm --rebuilddb
最后：安装一个提供版本号的包yum --releasever 8 install centos-release
其中--releasever 8是指定版本号，我的是centos8，所以这么写。</description>
    </item>
    
    <item>
      <title>树莓派蓝牙相关问题</title>
      <link>http://wiseai.cn/post/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%93%9D%E7%89%99%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%93%9D%E7%89%99%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
      <description>因系统更新快，这里的操作仅供参考!!
升级安装蓝牙相关软件包 # sudo apt-get install pi-bluetooth bluez bluez-firmware blueman
添加pi用户到蓝牙组 # sudo usermod -G bluetooth -a pi
重启 # sudo reboot
使用命令打开蓝牙 pi@raspberrypi:/ $ sudo bluetoothctl [bluetooth]#list Controller B8:27:EB:3D:15:E9 raspberrypi [default] [bluetooth]# scan on Discovery started [CHG] Device 5F:FC:4E:B0:EA:59 RSSI: -97 [NEW] Device 42:29:9A:3B:75:E6 42-29-9A-3B-75-E6 [bluetooth]# devices Device 30:21:4F:54:4D:8E Newmine Device 72:D7:02:62:CE:A0 72-D7-02-62-CE-A0 Device 5F:FC:4E:B0:EA:59 5F-FC-4E-B0-EA-59 Device E4:A7:C5:C8:55:F5 HUAWEI Mate 10 Pro Device 42:29:9A:3B:75:E6 42-29-9A-3B-75-E6 [bluetooth]# pair 30:21:4F:54:4D:8E Attempting to pair with 30:21:4F:54:4D:8E Failed to pair: org.</description>
    </item>
    
    <item>
      <title>MarkDown在线编辑器</title>
      <link>http://wiseai.cn/post/markdown%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/markdown%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/</guid>
      <description>使用开源项目editor.md我的gitee仓库下也有。
安装 # npm install editor.md
使用 &amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;editor.md/css/editormd.min.css&amp;#34; /&amp;gt;&amp;lt;title&amp;gt;Markdown 编辑在线器&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;div id=&amp;#34;text&amp;#34; style=&amp;#34;width: 100%;&amp;#34;&amp;gt;&amp;lt;div id=&amp;#34;editor&amp;#34; style=&amp;#34;height: 100%;&amp;#34;&amp;gt;&amp;lt;!-- Tips: Editor.md can auto append a `&amp;lt;textarea&amp;gt;` tag --&amp;gt;&amp;lt;textarea style=&amp;#34;display:none;&amp;#34; placeholder=&amp;#34;欢迎使用&amp;#34;&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script src=&amp;#34;jquery.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;#34;editor.md/editormd.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;// 设置div与窗口高度一致window.onload = function () {var h = window.innerHeight - 25 ; //获取当前窗口的高度; document.getElementById(&amp;#34;text&amp;#34;).style.height = h + &amp;#34;px&amp;#34;; //设置div的高度}// 设置textarea参数$(function() {var h = window.</description>
    </item>
    
    <item>
      <title>Nginx出现问题的解决办法</title>
      <link>http://wiseai.cn/post/nginx%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/nginx%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>最近遇到Permission denied这个问题，经过排查，是目录权限的问题，server的root目录必须要有写权限才行，只有读权限还是会出现Permission denied的问题，并且要给nginx的执行用户，比如默认的www-data用户。 待续</description>
    </item>
    
    <item>
      <title>sublime使用</title>
      <link>http://wiseai.cn/post/sublime%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/sublime%E4%BD%BF%E7%94%A8/</guid>
      <description>安装Package Control Tools-&amp;gt;Install Package Control 选项，即可调出 Package Control “Tools-&amp;gt;Command Palette&amp;hellip;”选项，快捷键Ctrl+Shift +P 输入 ipc ,点击 Install Package Control，即可调出 Package Control 设置中文 Preferences-&amp;gt;Package Control，快捷键Ctrl+Shift +P 选项弹出命令行输入框，输入ip，点击“install Package” 弹出命令行输入框，输入clz，点击“ChineseLocalizations” “帮助-&amp;gt;Language ”切换语言。 </description>
    </item>
    
    <item>
      <title>systemd的服务管理程序systemctl</title>
      <link>http://wiseai.cn/post/systemd%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8Fsystemctl/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/systemd%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8Fsystemctl/</guid>
      <description>systemctl融合service和chkconfig的功能于一体,可以使用它永久性或只在当前会话中启用/禁用服务。
一、启动/关闭、启用/禁用服务 运行一个服务：
#systemctl start firewalld
关闭一个服务：
#systemctl stop firewalld
重启一个服务:
#systemctl restart firewalld
显示一个服务（无论运行与否）的状态:
#systemctl status firewalld
在开机时启用一个服务：
#systemctl enable firewalld
在开机时禁用一个服务:
#systemctl disable firewalld
检查一个服务是否是开机启用：
#systemctl is-enabled firewalld
二、改变运行级别 切换到运行级别3或者5：
#systemctl isolate multi-user.target
#systemctl isolate graphical.target
改变默认运行级别3或者5：
#ln -sf /lib/systemd/system/multi-user.target /etc/systemd/system/default.target或#systemctl set-default multi-user.target
#ln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target或#systemctl set-default graphical.target
查看当下运行级别:
#systemctl list-units --type=target
三、改变默认 getty 数目 添加一个新的 getty ：
#ln -sf /lib/systemd/system/getty@.service /etc/systemd/system/getty.target.wants/getty@tty9.service #systemctl daemon-reload #systemctl start getty@tty9.service` 删除一个 getty ：</description>
    </item>
    
    <item>
      <title>玩玩LFS-从源码构建Linux系统</title>
      <link>http://wiseai.cn/post/%E7%8E%A9%E7%8E%A9lfs-%E4%BB%8E%E6%BA%90%E7%A0%81%E6%9E%84%E5%BB%BAlinux%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E7%8E%A9%E7%8E%A9lfs-%E4%BB%8E%E6%BA%90%E7%A0%81%E6%9E%84%E5%BB%BAlinux%E7%B3%BB%E7%BB%9F/</guid>
      <description>官方网站：http://www.linuxfromscratch.org/
LFS Book 翻译项目:https://github.com/LCTT/LFS-BOOK
Linux From Scratch （简体中文版） Version 8.3-systemd
LFS：Linux From Scratch是主要书籍，是从中衍生所有其他项目的基础。
BLFS：Beyond Linux From Scratch可帮助您将已完成的LFS安装扩展到更加个性化和可用的系统。
ALFS：Automated Linux From Scratch提供了自动化和管理LFS和BLFS构建的工具。</description>
    </item>
    
    <item>
      <title>Linux下合并文件</title>
      <link>http://wiseai.cn/post/linux%E4%B8%8B%E5%90%88%E5%B9%B6%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%8B%E5%90%88%E5%B9%B6%E6%96%87%E4%BB%B6/</guid>
      <description>#!/bin/bashfor ((i=0; i&amp;lt;700; i++))do cat $i.ts &amp;gt;&amp;gt; all.tsdone 某视频APP下载位置：手机存储/Android/data/com.tencent.qqlive/files/videos_***/
在这个目录下找下载的视频文件(以.hls结束的），找找就好了。</description>
    </item>
    
    <item>
      <title>Linux中修改limits值</title>
      <link>http://wiseai.cn/post/linux%E4%B8%AD%E4%BF%AE%E6%94%B9limits%E5%80%BC/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%AD%E4%BF%AE%E6%94%B9limits%E5%80%BC/</guid>
      <description>在/etc/security/limits.conf 最后增加:
* soft nofile 65535
* hard nofile 65535
修改ulimit值</description>
    </item>
    
    <item>
      <title>Linux中的搜索</title>
      <link>http://wiseai.cn/post/linux%E4%B8%AD%E7%9A%84%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%AD%E7%9A%84%E6%90%9C%E7%B4%A2/</guid>
      <description>一、whereis
二、which
三、locate
安装：mlocate
之后更新数据库：updatedb
四、find
五、catfish
一款Linux桌面图形软件，可以在桌面图形化的搜索文件。</description>
    </item>
    
    <item>
      <title>Linux中缺少运行库的解决办法</title>
      <link>http://wiseai.cn/post/linux%E4%B8%AD%E7%BC%BA%E5%B0%91%E8%BF%90%E8%A1%8C%E5%BA%93%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%AD%E7%BC%BA%E5%B0%91%E8%BF%90%E8%A1%8C%E5%BA%93%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>编辑 vi /etc/ld.so.conf root权限执行 /sbin/ldconfig -v命令 这样 ldd 才能找到这个库
/etc/ld.so.conf:
这个文件记录了编译时使用的动态链接库的路径。 默认情况下，编译器只会使用/lib和/usr/lib这两个目录下的库文件 如果你安装了某些库，没有指定 –prefix=/usr 这样lib库就装到了/usr/local下，而又没有在/etc/ld.so.conf中添加/usr/local/lib，就会报错了 ldconfig是个什么东东吧 ：
它是一个程序，通常它位于/sbin下，是root用户使用的东东。具体作用及用法可以man ldconfig查到 简单的说，它的作用就是将/etc/ld.so.conf列出的路径下的库文件 缓存到/etc/ld.so.cache 以供使用 因此当安装完一些库文件，(例如刚安装好glib)，或者修改ld.so.conf增加新的库路径后，需要运行一下/sbin/ldconfig 使所有的库文件都被缓存到ld.so.cache中，如果没做，即使库文件明明就在/usr/lib下的，也是不会被使用的，结果 编译过程中抱错，缺少xxx库。 以上尝试后发现还是不行，添加 /usr/lib/x86_64-linux-gnu 有许多QT库文件</description>
    </item>
    
    <item>
      <title>mariadb和mysql命令</title>
      <link>http://wiseai.cn/post/mariadb%E5%92%8Cmysql%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/mariadb%E5%92%8Cmysql%E5%91%BD%E4%BB%A4/</guid>
      <description>错误：ERROR 1045 (28000): Access denied for user &amp;lsquo;root&amp;rsquo;@&amp;rsquo;localhost&amp;rsquo; (using password: NO)
1.首先停掉数据库服务:
# systemctl stop mariadb.service
2.使用mysqld_safe来启动mysqld服务器:
# mysqld_safe --user=mysql --skip-grant-tables --skip-networking
3.无密码登录:
# mysql -u root mysql
命令行登录：
# mysql -h 127.0.0.1 -u root -p -P 3306
新建用户：
# create user &#39;newuser&#39;@&#39;localhost&#39; identified by &#39;123456&#39;;
或
# insert into mysql.user(user,host,password) values(&#39;newuser&#39;,&#39;localhost&#39;,password(&#39;123456&#39;));
删除用户：
# DROP USER &#39;newuser&#39;@&#39;localhost&#39;;
授权:
注：you password获取方法：
# select password(&#39;你的明文密码&#39;);
所有权限
# grant all privileges on *.* to &#39;newuser&#39;@&#39;localhost&#39; identified by password &#39;you password&#39;;</description>
    </item>
    
    <item>
      <title>Linux屏录软件</title>
      <link>http://wiseai.cn/post/linux%E5%B1%8F%E5%BD%95%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E5%B1%8F%E5%BD%95%E8%BD%AF%E4%BB%B6/</guid>
      <description>一、SimpleScreenRecorder 可以记录其他的应用程序和你的屏幕上运行的游戏。这是一个简单但功能强大，功能丰富的屏幕记录软件，包括一个易于使用的界面。 只支持Linux系统，包含在rpmfusion中。
# yum install simplescreenrecorder
# apt install simplescreenrecorder
其它安装方式：https://www.maartenbaert.be/simplescreenrecorder/
它的一些显著特点包括:
基于QT的简单GUI 可以记录整个屏幕或它的一部分	从OpenGL的应用程序直接记录 良好的视频和音频同步 有助于减少慢速机的视频帧速率 支持暂停和恢复功能 显示了了在记录过程期间的统计 支持录制过程中预览 默认设置已经很好，不需要进行过多设置 二、 OBS (Open Broadcaster Software) OBS 是一个免费、开源和跨平台的视频记录和流媒体应用程序,它可以工作在Linux、Windows和Mac OS X。 Windows需要从官网下载（https://obsproject.com/），Linux系统包含在rpmfusion中。
＃ yum install obs-studio
# apt install ffmpeg
# add-apt-repository ppa:obsproject/obs-studio
# apt update
# apt install obs-studio
它有几个强大的功能和显著的功能包括:
支持使用H264和AAC编码 支持英特尔QSV和NVENC 支持无限数量的场景和输入源 输出文件使用MP4 或FLV 格式 允许在记录会话中访问网络摄像头，采集卡等 高度可扩展的插件,开发人员可以使用api编写自己的插件 </description>
    </item>
    
    <item>
      <title>adduser&amp;addgroup添加用户&amp;用户组</title>
      <link>http://wiseai.cn/post/adduseraddgroup%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E7%94%A8%E6%88%B7%E7%BB%84/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/adduseraddgroup%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E7%94%A8%E6%88%B7%E7%BB%84/</guid>
      <description>添加一个普通用户 # adduser [--home 主目录] [--shell SHELL] [--no-create-home] [--uid ID] [--firstuid ID] [--lastuid ID] [--gecos GECOS] [--ingroup 用户组 | --gid ID][--disabled-password] [--disabled-login] [--add_extra_groups] 用户名
添加一个系统用户 # adduser --system [--home 主目录] [--shell SHELL] [--no-create-home] [--uid ID] [--gecos GECOS] [--group | --ingroup 用户组 | --gid ID] [--disabled-password] [--disabled-login] [--add_extra_groups] 用户名
添加一个用户组 # adduser --group [--gid ID] 用户组名 # addgroup [--gid ID] 用户组名
添加一个系统用户组 # addgroup --system [--gid ID] 用户组名
将一个已存在的用户添加至一个已存在的用户组 # adduser 用户名 用户组名</description>
    </item>
    
    <item>
      <title>docker学习笔记</title>
      <link>http://wiseai.cn/post/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>现在docker分企业版和社区版，如果自己用的话，还是社区版吧！！！
安装： centos7：
1.卸载旧版本
$ yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-selinux \ docker-engine-selinux \ docker-engine 2.安装依赖包：
$ yum install -y yum-utils device-mapper-persistent-data lvm2
3.安装docker官方库：
$ yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
4.安装最新稳定版本docker：
$ yum install docker-ce
如果提示接受GPG密钥，请验证指纹是否匹配060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35，如果匹配 ，则接受它。
ubuntu:
$ sudo apt-get update $ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common $ curl -fsSL https://download.</description>
    </item>
    
    <item>
      <title>efi和grub2相关配置文件及命令</title>
      <link>http://wiseai.cn/post/efi%E5%92%8Cgrub2%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/efi%E5%92%8Cgrub2%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E5%91%BD%E4%BB%A4/</guid>
      <description>一、配置文件目录 /etc/grub2/目录下 /etc/default/grub
二、更新引导项目 根据配置文件目录下的顺序更新启动项，命令：
# grub2-mkconfig -o /boot/grub2/grub.cfg
-o 选项为输出到那个文件
efi下的/boot/efi/EFI/centos/grub.cfg文件一般调用/boot/grub2/grub.cfg这个文件
类debian发行版，一般用这个命令： # update-grub2
三、更换默认启动项 命令：
# grub2-set-default 2
一般从0开始
四、安装 # grub-install --efi-directory=/boot/efi/ --boot-directory=/boot/ --removable /dev/sda 几个需要说明的地方：
--efi-directory=/boot/efi/这个位置的问题，如果efi分区是单独挂载的，就直接写这个目录就可以了，不用加efi，它会在这个目录下建立EFI的目录，写入相关文件。 --boot-directory=/boot/这个不用加grub2，它会自己生成grub2目录，写入相关文件 --removable如果是移动设备，一定要加这个选项
五、常用命令 启动常用的grub命令 root (hd0,2) #设置某块分区为根目录kernel /vmlinuz #加载linux kernelinitrd /initrd.gz #加载驱动，或者虚拟rootfsboot #启动加载的kernel 查找文件 find --set-root --ignore-floppies --ignore-cd /usr/bin/cp #查找/usr/bin/cp文件，并将分区设为根目录，忽略软盘和cd 加载iso root (hdx,x) #设置根目录map --mem /xx.iso (0xff) #映射iso文件到模拟cdrom 0xffmap --hook #映射钩子chainloader (0xff) #链接到映射的CDROMboot #启动 grub命名规则，(hd32)为第一仿真cd/dvd设备，等同于0xa0，(hd33)为二仿真cd/dvd设备，0xff为最后一个。grub中将0xa0以上都认做cdrom。 map --mem 用于仿真不连续的存放的iso文件，不加则必须连续存放，碎片整理后再存放iso一般才会连续。 另外grub不支持大的iso，如果iso不支持则提示:inviladorupsupported executableformat。</description>
    </item>
    
    <item>
      <title>filebrowser的安装和使用</title>
      <link>http://wiseai.cn/post/filebrowser%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/filebrowser%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>编译安装 可以自己编译，必须安装golang v1.16以上和nodejs，最好是最新版本，否则会出现一些问题。
$ git clone https://github.com/filebrowser/filebrowser 注：如果有gitee的可以改，速度快，可以直接下载对应版本
$ make help 注：编译帮助
$ make build 注：开始编译，完成后在当前目录下filebrowser
使用简介： 直接输入命令： ./filebrowser 会在当前目录下生成数据库文件，并开启服务
关闭服务后，输入以下命令进行设置：
./filebrowser config cat查看配置文件，这个配置是写入数据库里的
./filebrowser config set --address 0.0.0.0打开所有端口
这里的config set --address可以从配置文件里看，想设置那个就把address换成那个
./filebrowser config set --port 80设置端口
./filebrowser config set --locale zh-cn设置语言
./filebrowser config set --log /your/path/filebrowser.log设置日志
./filebrowser config set --root /your/path/设置根目录
./filebrowser users add root password --perm.admin这个是添加用户，其中的root和password分别是用户名和密码
./filebrowser -d /you/path/filebrowser.db config init这里的-d是指定数据库文件，config init是初始化，这个命令应该一开始就执行，但是什么参数都不带的话，会自己生成。
设置https访问：
./filebrowser config set --port 443设置https端口</description>
    </item>
    
    <item>
      <title>FTP服务器架设（vsftpd）</title>
      <link>http://wiseai.cn/post/ftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9E%B6%E8%AE%BEvsftpd/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/ftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9E%B6%E8%AE%BEvsftpd/</guid>
      <description>安装： # dnf install vsftpd
**FTP主动模式：客户端从一个任意的非特权端口N（N&amp;gt;1024）连接到FTP服务器的port 21命令端口。然后客户端开始监听端口N+1，**并发送FTP命令&amp;quot;port N+1&amp;quot;到FTP服务器。接着服务器会从它自己的数据端口（20）连接到客户端指定的数据端口（N+1）。
**FTP被动模式：客户端从一个任意的非特权端口N（N&amp;gt;1024）连接到FTP服务器的port 21命令端口。然后客户端开始监听端口N+1，**同时客户端提交 PASV命令。服务器会开启一个任意的非特权端口（P &amp;gt;1024），并发送PORT P命令给客户端。然后客户端发起从本地端口N+1到服务器的端口P的连接用来传送数据。
端口： 主动模式：TCP 21（指令），20（数据）端口
被动模式：TCP 21（指令），大于1024端口传输数据（可在配置文件中指定范围）
生成证书：
# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout ftp.pem -out ftp.pem
配置文件：
/etc/vsftpd/vsftpd.conf
严格来说,整个 vsftpd 的配置文件就只有这个档案!这个档案的设定是以 bash的变量设定相同的方式来处理的, 也就是『参数=设定值』来设定的,注意, 等号两边不能有空白喔!至于详细的 vsftpd.conf 可以使用 『 man 5 vsftpd.conf 』来详查。
/etc/pam.d/vsftpd
这个是 vsftpd 使用 PAM 模块时的相关配置文件。主要用来作为身份认证之用,还有一些用户身份的抵挡功能, 也是透过这个档案来达成的。
/etc/vsftpd/ftpusers
与上一个档案有关系,也就是 PAM 模块 (/etc/pam.d/vsftpd) 所指定的那个无法登入的用户配置文件啊! 这个档案的设定很简单,你只要将『不想让他登入FTP 的账号』写入这个档案即可。
/etc/vsftpd/user_list
这个档案是否能够生效与 vsftpd.conf 内的两个参数有关,分别是『 userlist_enable, userlist_deny 』。 如果说 /etc/vsftpd/ftpusers 是PAM 模块的抵挡设定项目,那么这个 /etc/vsftpd/user_list 则是 vsftpd 自定义的抵挡项目。事实上这个档案与 /etc/vsftpd/ftpusers 几乎一模一样, 在预设的情况下,你可以将不希望可登入 vsftpd 的账号写入这里。不过这个档案的功能会依据 vsftpd.</description>
    </item>
    
    <item>
      <title>git的使用</title>
      <link>http://wiseai.cn/post/git/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/git/</guid>
      <description>添加ssh公钥： 查看~/.ssh/id_rsa.pub文件，如果有公钥直接添加，没有的话使用这个命令：
$ ssh-keygen -t ed25519 -C &amp;#34;xxxxx@xxxxx.com&amp;#34; 三次回车后，再查看~/.ssh/id_rsa.pub文件，添加到gitee设置。
创建版本库： 不建议直接生成，可以在gitee网站下建立仓库，之后clone到本地，直接使用下面的命令操作就可以了。
$ git init 这个命令可以把当前目录变成git管理的仓库。 远程库如果是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
添加远程仓库： $ git remote add gitee git@gitee.com:wiseai/wiseai.git $ git remote add github git@github.com:wiseai/wiseai.git 查看远程仓库信息： $ git remote -v 删除远程仓库： $ git remote rm github 推送到GitHub或Gitee: $ git push gitee master $ git push github master 该操作在后面内容同步后再推送。
设置邮件和用户名： $ git config --global user.email &amp;#34;you@example.com&amp;#34; $ git config --global user.name &amp;#34;Your Name&amp;#34; 全局设置使用&amp;ndash;global参数，如果仅在本仓库设置身份标识，则省略 &amp;ndash;global 参数。
查看git的修改状态： $ git status 查看具体修改内容： $ git diff readme.</description>
    </item>
    
    <item>
      <title>golang和nodejs环境配置</title>
      <link>http://wiseai.cn/post/golang%E5%92%8Cnodejs%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/golang%E5%92%8Cnodejs%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>配置golang 下载文件：golang官网下载 解压文件至/usr/local/目录下： # rm -rf /usr/local/go &amp;amp;&amp;amp; tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz
（第一个命令是删除golang的残余文件）
建立软链接至/usr/bin/目录下： # ln -s /usr/local/go/bin/go /usr/bin/
# ln -s /usr/local/go/bin/gofmt /usr/bin/
修改为国内源 # go env -w GO111MODULE=auto # go env -w GOPROXY=https://goproxy.cn,direct
查看配置 # go env
配置nodejs 下载文件：nodejs官网 中文网站：nodejs中文网 解压文件至/usr/local/目录下： # rm -rf /usr/local/node &amp;amp;&amp;amp; tar -C /usr/local -xzf node-v16.13.2-linux-arm64.tar
（第一个命令是删除nodejs的残余文件） # npm install yarn
建立软链接至/usr/bin/目录下： # ln -s /usr/local/node-v16.13.2-linux-arm64/bin/node /usr/bin/
# ln -s /usr/local/node-v16.13.2-linux-arm64/bin/npm /usr/bin/</description>
    </item>
    
    <item>
      <title>golang的build命令编译</title>
      <link>http://wiseai.cn/post/golang%E7%9A%84build%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/golang%E7%9A%84build%E5%91%BD%E4%BB%A4/</guid>
      <description>go build，是我们非常常用的命令，它可以启动编译，把我们的包和相关的依赖编译成一个可执行的文件。
usage: go build [-o output] [-i] [build flags] [packages]
go build的使用比较简洁，所有的参数都可以忽略，直到只有go build，这个时候意味着使用当前目录进行编译，下面的几条命令是等价的：
go build go build . go build hello.go 以上这三种写法，都是使用当前目录编译的意思。因为我们忽略了packages,所以自然就使用当前目录进行编译了。从这里我们也可以推测出，go build本质上需要的是一个路径，让编译器可以找到哪些需要编译的go文件。packages其实是一个相对路径，是相对于我们定义的GOROOT和GOPATH这两个环境变量的，所以有了packages这个参数后，go build就可以知道哪些需要编译的go文件了。
go build flysnow.org/tools
这种方式是指定包的方式，这样会明确地编译我们这个包。当然我们也可以使用通配符
go build flysnow.org/tools/...
3个点表示匹配所有字符串，这样go build就会编译tools目录下的所有包。
讲到go build编译，不能不提跨平台编译，Go提供了编译链工具，可以让我们在任何一个开发平台上，编译出其他平台的可执行文件。
默认情况下，都是根据我们当前的机器生成的可执行文件，比如你的是Linux 64位，就会生成Linux 64位下的可执行文件，比如我的Mac；可以使用go env查看编译环境,以下截取重要的部分。
go env GOARCH=&amp;#34;amd64&amp;#34; GOEXE=&amp;#34;&amp;#34; GOHOSTARCH=&amp;#34;amd64&amp;#34; GOHOSTOS=&amp;#34;darwin&amp;#34; GOOS=&amp;#34;darwin&amp;#34; GOROOT=&amp;#34;/usr/local/go&amp;#34; GOTOOLDIR=&amp;#34;/usr/local/go/pkg/tool/darwin_amd64&amp;#34; 注意里面两个重要的环境变量GOOS和GOARCH,其中GOOS指的是目标操作系统，它的可用值为：
darwin freebsd linux windows android dragonfly netbsd openbsd plan9 solaris 一共支持10种操作系统。GOARCH指的是目标处理器的架构，目前支持的有：
arm arm64 386 amd64 ppc64 ppc64le mips64 mips64le s390x 一共支持9种处理器的架构</description>
    </item>
    
    <item>
      <title>GPIO相关知识</title>
      <link>http://wiseai.cn/post/gpio%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/gpio%E7%9B%B8%E5%85%B3/</guid>
      <description>linux查看gpio状态 cat /sys/kernel/debug/gpio
有个blog里有这个方法，去试试：
mkdir /tmp/debug mount -t debugfs debugfs /tmp/debug cat /tmp/debug/gpio GPIO操作的一些说明 首先，看看系统中有没有“/sys/class/gpio”这个文件夹。如果没有请在编译内核的时候加入 Device Drivers-&amp;gt; GPIO Support -&amp;gt;/sys/class/gpio/… (sysfs interface)
/sys/class/gpio 的使用说明： gpio_operation 通过/sys/文件接口操作IO端口 GPIO到文件系统的映射
◇ 控制GPIO的目录位于/sys/class/gpio
◇ /sys/class/gpio/export文件用于通知系统需要导出控制的GPIO引脚编号
◇ /sys/class/gpio/unexport 用于通知系统取消导出
◇ /sys/class/gpio/gpiochipX目录保存系统中GPIO寄存器的信息，包括每个寄存器控制引脚的起始编号base，寄存器名称，引脚总数 导出一个引脚的操作步骤
◇ 首先计算此引脚编号，引脚编号 = 控制引脚的寄存器基数 + 控制引脚寄存器位数
◇ 向/sys/class/gpio/export写入此编号，比如12号引脚，在shell中可以通过以下命令实现，echo 12 &amp;gt; export命令成功后生成/sys/class/gpio/gpio12目录，如果没有出现相应的目录，说明此引脚不可导出
◇ direction文件，定义输入输入方向，可以通过下面命令定义为输出。direction接受的参数：in, out, high, low。high/low同时设置方向为输出，并将value设置为相应的1/0
◇ value文件是端口的数值，为1或0
例子： 进入/sys/class/gpio/文件夹：
将gpio7重定向用户定义设备，生成gpio7目录 # echo 7 &amp;gt; export
进入gpio7目录并查看文件 # cd gpio7
# ls
direction设置引脚方向，输入还是输出</description>
    </item>
    
    <item>
      <title>Linux安装hp打印机驱动</title>
      <link>http://wiseai.cn/post/linux%E5%AE%89%E8%A3%85hp%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E5%AE%89%E8%A3%85hp%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/</guid>
      <description>一、安装hplip # dnf install hplip
或者官网下载
安装hplip-gui,
# dnf install hplip-gui
二、运行hp-plugin安装插件 或者下载hplip-3.17.10-plugin.run文件，版本和hplip相同，网址为：http://www.openprinting.org/download/printdriver/auxfiles/HP/plugins/
安装时会验证文件，不用理会，直接安装就行。
好了！</description>
    </item>
    
    <item>
      <title>Linux开机启动的方法</title>
      <link>http://wiseai.cn/post/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>一、配置rc.local文件实现开机启动： 首先，建立一个文件：
$ sudo touch /etc/rc.local
给予可执行权限：
$ sudo chmod +x /etc/rc.local
在文件写入以下内容：
#!/bin/sh /path/to/gohttpserver -r /path/to/ --port 8080 --upload 以上两个/path/to/，一个是文件所在目录，一个是工作目录，都使用绝对路径。 完成！！！
二、第二种方法以后有时间再补充。 </description>
    </item>
    
    <item>
      <title>Linux更换网卡后网络服务不能启动的问题解决办法</title>
      <link>http://wiseai.cn/post/linux%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1%E5%90%8E%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8D%E8%83%BD%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1%E5%90%8E%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8D%E8%83%BD%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>1、迁移以后，会存在其中一个网卡无法启动（eth0 or eth1）
[root@ ~]# ifup eth0
WARNING: Deprecated config file /etc/modprobe.conf, all config files belong into /etc/modprobe.d/.
WARNING: Deprecated config file /etc/modprobe.conf, all config files belong into /etc/modprobe.d/.
Device eth0 does not seem to be present, delaying initialization.
2、删除文件
[root@ ~]# mv /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/70-persistent-net.rules.bak
3、注释掉文件ifcfg-eth0及ifcfg-eth01中MAC地址（HWADDR）
[root@ ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
BOOTPROTO=static
#HWADDR=&amp;ldquo;XX:XX:XX:XX:XX:XX&amp;rdquo;
ONBOOT=yes
TYPE=Ethernet
4、重启服务器（重启网卡不好使）</description>
    </item>
    
    <item>
      <title>通过iptables设置防火墙</title>
      <link>http://wiseai.cn/post/iptables%E8%AE%BE%E7%BD%AEsh/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/iptables%E8%AE%BE%E7%BD%AEsh/</guid>
      <description>#!/bin/bash PATH=/sbin:/bin:/usr/sbin:/usr/bin #设置网卡 wk=&amp;#34;eth1&amp;#34; # 1. 清除规则 iptables -F iptables -X iptables -Z # 2. 设定政策 iptables -P INPUT DROP iptables -P OUTPUT ACCEPT iptables -P FORWARD ACCEPT # 3~5. 制订各项规则 iptables -A INPUT -i lo -j ACCEPT iptables -A INPUT -i $wk -m state --state RELATED,ESTABLISHED -j ACCEPT #samba服务 iptables -A INPUT -i $wk -p tcp --dport 139 -j ACCEPT iptables -A INPUT -i $wk -p tcp --dport 445 -j ACCEPT iptables -A INPUT -i $wk -p udp --dport 137:138 -j ACCEPT #vsftp服务 iptables -A INPUT -i $wk -p tcp --dport 21 -j ACCEPT iptables -A INPUT -i $wk -p tcp --dport 1024:65535 -j ACCEPT #iptables -A INPUT -i $wk -s 192.</description>
    </item>
    
    <item>
      <title>Footnote test</title>
      <link>http://wiseai.cn/post/footnote/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/footnote/</guid>
      <description>Lorem ipsum dolor sit amet1 consectetur adipisicing elit. Nemo tempora eum cumque neque voluptatum, odit ipsum consequatur animi.
Lorem ipsum dolor sit amet consectetur adipisicing elit. Nemo tempora eum cumque neque voluptatum, odit ipsum2 consequatur animi.
Lorem ipsum dolor sit amet consectetur adipisicing elit. Nemo tempora eum cumque neque voluptatum, odit ipsum consequatur animi.
Lorem ipsum dolor sit amet consectetur adipisicing elit. Nemo tempora eum cumque neque voluptatum, odit ipsum consequatur animi.</description>
    </item>
    
    <item>
      <title>Katex support</title>
      <link>http://wiseai.cn/post/test-katex/</link>
      <pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/test-katex/</guid>
      <description>The following
$$ \int_{a}^{b} x^2 dx $$
Is an integral
$$ \varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } } $$
Enable Katex in the config file by setting the katex param to true. This will import the necessary Katex CSS/JS.
See the online reference of supported TeX functions.
1 Inline math: $ \varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887… $ Inline math: $ \varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887… $
1 2 3 Block math: $$ \varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } } $$ Block math:</description>
    </item>
    
    <item>
      <title>MathJax support</title>
      <link>http://wiseai.cn/post/test-mathjax/</link>
      <pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/test-mathjax/</guid>
      <description>The following
$$ \int_{a}^{b} x^2 dx $$
Is an integral
$$ \varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } } $$
Enable MathJax in the config file by setting the mathjax param to true. This will import the necessary MathJax CSS/JS.
1 Inline math: $ \varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887… $ Inline math: $ \varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887… $
1 2 3 Block math: $$ \varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } } $$ Block math:</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>http://wiseai.cn/post/markdown-syntax/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Example Lazy Load Image</title>
      <link>http://wiseai.cn/post/example-lazy-load-image/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/example-lazy-load-image/</guid>
      <description>Nya nya nyan meow meow mama More napping, more napping all the napping is exhausting stretch out on bed you are a captive audience while sitting on the toilet, pet me slap the dog because cats rule bleghbleghvomit my furball really tie the room together always hungry. Humans,humans, humans oh how much they love us felines we are the center of attention they feed, they clean miaow then turn around and show you my bum.</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>http://wiseai.cn/post/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>http://wiseai.cn/post/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
