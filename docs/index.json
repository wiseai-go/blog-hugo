[{"categories":null,"contents":"","date":"Nov 26","permalink":"https://blog.wiseai.cn/projects/tania_theme/","tags":null,"title":"Hugo Tania Theme"},{"categories":null,"contents":"","date":"May 29","permalink":"https://blog.wiseai.cn/projects/blog_wiseai/","tags":null,"title":"blog-hugo"},{"categories":["Linux使用"],"contents":" 一、SimpleScreenRecorder 可以记录其他的应用程序和你的屏幕上运行的游戏。这是一个简单但功能强大，功能丰富的屏幕记录软件，包括一个易于使用的界面。 只支持Linux系统，包含在rpmfusion中。\n# yum install simplescreenrecorder\n# apt install simplescreenrecorder\n其它安装方式：https://www.maartenbaert.be/simplescreenrecorder/\n它的一些显著特点包括:\n基于QT的简单GUI 可以记录整个屏幕或它的一部分\t从OpenGL的应用程序直接记录 良好的视频和音频同步 有助于减少慢速机的视频帧速率 支持暂停和恢复功能 显示了了在记录过程期间的统计 支持录制过程中预览 默认设置已经很好，不需要进行过多设置 二、 OBS (Open Broadcaster Software) OBS 是一个免费、开源和跨平台的视频记录和流媒体应用程序,它可以工作在Linux、Windows和Mac OS X。 Windows需要从官网下载（https://obsproject.com/），Linux系统包含在rpmfusion中。\n＃ yum install obs-studio\n# apt install ffmpeg\n# add-apt-repository ppa:obsproject/obs-studio\n# apt update\n# apt install obs-studio\n它有几个强大的功能和显著的功能包括:\n支持使用H264和AAC编码 支持英特尔QSV和NVENC 支持无限数量的场景和输入源 输出文件使用MP4 或FLV 格式 允许在记录会话中访问网络摄像头，采集卡等 高度可扩展的插件,开发人员可以使用api编写自己的插件 ","date":"May 31","permalink":"https://blog.wiseai.cn/post/linux%E5%B1%8F%E5%BD%95%E8%BD%AF%E4%BB%B6/","tags":["屏录","录屏"],"title":"Linux屏录软件"},{"categories":["Linux命令"],"contents":" 添加一个普通用户 # adduser [--home 主目录] [--shell SHELL] [--no-create-home] [--uid ID] [--firstuid ID] [--lastuid ID] [--gecos GECOS] [--ingroup 用户组 | --gid ID][--disabled-password] [--disabled-login] [--add_extra_groups] 用户名\n添加一个系统用户 # adduser --system [--home 主目录] [--shell SHELL] [--no-create-home] [--uid ID] [--gecos GECOS] [--group | --ingroup 用户组 | --gid ID] [--disabled-password] [--disabled-login] [--add_extra_groups] 用户名\n添加一个用户组 # adduser --group [--gid ID] 用户组名 # addgroup [--gid ID] 用户组名\n添加一个系统用户组 # addgroup --system [--gid ID] 用户组名\n将一个已存在的用户添加至一个已存在的用户组 # adduser 用户名 用户组名\n常规设置： --quiet | -q 不在标准输出中给出进度信息 --force-badname 允许用户名不匹配： NAME_REGEX[_SYSTEM] 配置变量 --help | -h 给出本命令用法 --version | -v 版本号和版权信息 --conf | -c 文件 使用文件中的配置 ","date":"May 30","permalink":"https://blog.wiseai.cn/post/adduseraddgroup%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E7%94%A8%E6%88%B7%E7%BB%84/","tags":["用户","组"],"title":"adduser\u0026addgroup添加用户\u0026用户组"},{"categories":["Linux使用"],"contents":"现在docker分企业版和社区版，如果自己用的话，还是社区版吧！！！\n安装： centos7：\n1.卸载旧版本\n$ yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine 2.安装依赖包：\n$ yum install -y yum-utils device-mapper-persistent-data lvm2\n3.安装docker官方库：\n$ yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n4.安装最新稳定版本docker：\n$ yum install docker-ce\n如果提示接受GPG密钥，请验证指纹是否匹配060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35，如果匹配 ，则接受它。\nubuntu:\n$ sudo apt-get update $ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg \u0026#39;sudo pt-key add -\u0026#39; $ sudo add-apt-repository \u0026#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\u0026#34; $ sudo apt-get update 其它发行版本的请参考：官方文档\n配置：\n1.Linux更改Docker运行根目录\nDocker 的配置文件可以设置大部分的后台进程参数，在各个操作系统中的存放位置不一致:\n在 ubuntu 中的位置是：/etc/default/docker\n在 centos 中的位置是：/etc/sysconfig/docker\n只需要更改 vim /etc/sysconfig/docker 成\n为OPTIONS选项添加参数：\u0026ndash;graph=/home/docker \u0026ndash;icc=false \u0026ndash;graph=/your/dir\n\u0026ndash;icc=false禁用容器内部通信，为安全建议添加，内部通信使用link\n\u0026ndash;graph=/your/dir 自定义运行目录\n或者使用软件链接：\n# ln -sv /home/docker/ /var/lib/docker\n搞定！\n2.iptables设置：\n# iptables -A INPUT -s 172.17.0.0/16 -d 172.17.0.0/16 -j ACCEPT\n命令：\n查找镜像：docker search centos 下载镜像：docker pull centos 列出本地镜像：docker images 删除镜像：docker rmi 镜像名 运行容器： # docker run -it --name 容器名 --link 链接容器名:别名 -v 本地绝对路径:容器路径 -p ip:本地端口:容器端口/udp -e --restart=always （docker服务启动后容器自动启动，no 不启动；on-failure 容器退出状态非0时重启）MYSQL_ROOT_PASSWORD\u0026lt;span class=\u0026quot;hljs-subst\u0026quot;\u0026gt;=\u0026lt;/span\u0026gt;'passwd'(设置环境变量） --dns=自定义的DNS -d(后台运行) 镜像 运行命令 列出运行容器：docker container ls 列出所有容器：docker container ls -a 运行容器：docker start 容器名（-i参数进入命令行） 进入运行容器：docker exec -it 容器名 /bin/bash 停止容器：docker stop 容器名 kill容器：docker kill 容器名 删除容器：docker rm 容器名 查看容器信息：docker inspect 容器名 查看容器log：docker logs 容器名 利用已有容器修改或建立新的镜像：docker commit -m \u0026ldquo;说明信息\u0026rdquo; -a \u0026ldquo;用户信息\u0026rdquo; 容器名 centos7/nginx-php:v2 镜像存出：docker save -o ubuntu_14.04.tar ubuntu:14.04或docker save \u0026gt; ubuntu_14.04.tar ubuntu:14.04 镜像载入：docker load -i ubuntu_14.04.tar或docker load \u0026lt; ubuntu_14.04.tar 容器导出：docker export ubuntu \u0026gt; ubuntu.tar 容器导入：docker import ubuntu.tar test/ubuntu 注意： 容器导入后就成镜像了，如果容器有运行的命令，在run的时候也一定要加上命令，否则不能成功创建。 镜像就不存在这个问题 从主机复制到容器：docker cp host_path containerID:container_path 从容器复制到主机：docker cp containerID:container_path host_path 最后添加\u0026quot;运行命令\u0026quot;的shell里，如果没有驻留服务的话，一定要在最后一行写bash，否则无法启动。 docker网络设置： docker安装后，默认会创建三种网络类型，bridge、host和none，可通过如下命令查看：\n# docker network ls\nbridge：网络桥接\n默认情况下启动、创建容器都是用该模式，所以每次docker容器重启时会按照顺序获取对应IP地址，这就导致容器每次重启，IP都发生变化，这种类型下无法设置固定IP\nnone：无指定网络\n启动容器时，可以通过-network=none，docker容器不会分配局域网ip\nhost：主机网络\ndocker容器的网络会附属在主机上，两者是互通的。这种类型下可以设置固定IP\n创建固定ip容器： 1.创建自定义网络类型，并且指定网段 # docker network create --subnet=192.168.168.0/30 mynet 通过docker network ls可以查看到网络类型中多了一个mynet\n2.使用新的网络类型创建并启动容器 # docker run -it --name test --net mynet --ip 192.168.168.2 centos /bin/bash\n存在问题： docker-storage-setup不能启动的问题。 编辑/etc/sysconfig/docker-storage-setup文件 添加STORAGE_DRIVER=\u0026ldquo;overlay\u0026rdquo; 容器启动自动运行 编辑/etc/bashrc文件 添加运行命令在文件最后 ","date":"May 30","permalink":"https://blog.wiseai.cn/post/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","tags":["docker","容器"],"title":"docker学习笔记"},{"categories":["Linux使用"],"contents":" 一、配置文件目录 /etc/grub2/目录下 /etc/default/grub\n二、更新引导项目 根据配置文件目录下的顺序更新启动项，命令：\n# grub2-mkconfig -o /boot/grub2/grub.cfg\n-o 选项为输出到那个文件\nefi下的/boot/efi/EFI/centos/grub.cfg文件一般调用/boot/grub2/grub.cfg这个文件\n类debian发行版，一般用这个命令： # update-grub2\n三、更换默认启动项 命令：\n# grub2-set-default 2\n一般从0开始\n四、安装 # grub-install --efi-directory=/boot/efi/ --boot-directory=/boot/ --removable /dev/sda 几个需要说明的地方：\n--efi-directory=/boot/efi/这个位置的问题，如果efi分区是单独挂载的，就直接写这个目录就可以了，不用加efi，它会在这个目录下建立EFI的目录，写入相关文件。 --boot-directory=/boot/这个不用加grub2，它会自己生成grub2目录，写入相关文件 --removable如果是移动设备，一定要加这个选项\n五、常用命令 启动常用的grub命令 root (hd0,2) #设置某块分区为根目录\rkernel /vmlinuz #加载linux kernel\rinitrd /initrd.gz #加载驱动，或者虚拟rootfs\rboot #启动加载的kernel 查找文件 find --set-root --ignore-floppies --ignore-cd /usr/bin/cp #查找/usr/bin/cp文件，并将分区设为根目录，忽略软盘和cd 加载iso root (hdx,x) #设置根目录\rmap --mem /xx.iso (0xff) #映射iso文件到模拟cdrom 0xff\rmap --hook #映射钩子\rchainloader (0xff) #链接到映射的CDROM\rboot #启动 grub命名规则，(hd32)为第一仿真cd/dvd设备，等同于0xa0，(hd33)为二仿真cd/dvd设备，0xff为最后一个。grub中将0xa0以上都认做cdrom。 map --mem 用于仿真不连续的存放的iso文件，不加则必须连续存放，碎片整理后再存放iso一般才会连续。 另外grub不支持大的iso，如果iso不支持则提示:inviladorupsupported executableformat。\n六、添加efi启动项 在安装程序不完善的时候，有时候会存在没有启动项的问题，这个时候就要用efibootmgr管理UEFI启动项。 # efibootmgr 这个命令会显示所有已经添加的启动项，BootOrder后会显示启动顺序。 # efibootmgr -c -w -L \u0026quot;BootOptionName\u0026quot; -d /dev/sda -p 1 -l \\\\EFI\\\\UOS\\\\grubx64.efi BootOptionName是你启动项的名字，修改为自己的 -d修改那个硬盘 -p分区位置，默认为1 -l是启动efi文件的路径，注意是\\而不是// 这样就添加了EFI启动项，刚添加的启动项的顺序排第一个 # efibootmgr -b 0013 -B 删除编号为0013的启动项 # efibootmgr -o 0012,0010,000f 修改启动顺序。 这个命令没有认真研究，有空再说吧。\n七、需要注意的地方 grub背景图片的问题，最近用gimp做了个图片设为grub2启动背景图片，grub2提示错误，最后发现是图片的问题。 ","date":"May 30","permalink":"https://blog.wiseai.cn/post/efi%E5%92%8Cgrub2%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E5%91%BD%E4%BB%A4/","tags":["系统引导","启动"],"title":"efi和grub2相关配置文件及命令"},{"categories":["Linux使用"],"contents":" 编译安装 可以自己编译，必须安装golang v1.16以上和nodejs，最好是最新版本，否则会出现一些问题。\n$ git clone https://github.com/filebrowser/filebrowser 注：如果有gitee的可以改，速度快\n$ make help 注：编译帮助\n$ make build 注：开始编译，完成后在当前目录下filebrowser\n使用简介： 直接输入命令： ./filebrowser 会在当前目录下生成数据库文件，并开启服务\n关闭服务后，输入以下命令进行设置：\n./filebrowser config cat查看配置文件，这个配置是写入数据库里的\n./filebrowser config set --address 0.0.0.0打开所有端口\n这里的config set --address可以从配置文件里看，想设置那个就把address换成那个\n./filebrowser config set --port 80设置端口\n./filebrowser config set --locale zh-cn设置语言\n./filebrowser config set --log /your/path/filebrowser.log设置日志\n./filebrowser config set --root /your/path/设置根目录\n./filebrowser users add root password --perm.admin这个是添加用户，其中的root和password分别是用户名和密码\n./filebrowser -d /you/path/filebrowser.db config init这里的-d是指定数据库文件，config init是初始化，这个命令应该一开始就执行，但是什么参数都不带的话，会自己生成。\n设置https访问：\n./filebrowser config set --port 443设置https端口\n./filebrowser/filebrowser config set -t \u0026quot;/path/to/***.pem\u0026quot;设置证书\n./filebrowser/filebrowser config set -k \u0026quot;/path/to/***.key\u0026quot;设置key\n设置系统服务：位置/lib/systemd/system/filebrowser.service\nDescription=File Browser\rAfter=network.target\r[Service]\rExecStart=/usr/local/bin/filebrowser -d /your/path/filebrowser.db\r[Install]\rWantedBy=multi-user.target``` ","date":"May 30","permalink":"https://blog.wiseai.cn/post/filebrowser%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/","tags":["filebrowser","文件管理"],"title":"filebrowser的安装和使用"},{"categories":["Linux使用"],"contents":" 安装： # dnf install vsftpd\n**FTP主动模式：客户端从一个任意的非特权端口N（N\u0026gt;1024）连接到FTP服务器的port 21命令端口。然后客户端开始监听端口N+1，**并发送FTP命令\u0026quot;port N+1\u0026quot;到FTP服务器。接着服务器会从它自己的数据端口（20）连接到客户端指定的数据端口（N+1）。\n**FTP被动模式：客户端从一个任意的非特权端口N（N\u0026gt;1024）连接到FTP服务器的port 21命令端口。然后客户端开始监听端口N+1，**同时客户端提交 PASV命令。服务器会开启一个任意的非特权端口（P \u0026gt;1024），并发送PORT P命令给客户端。然后客户端发起从本地端口N+1到服务器的端口P的连接用来传送数据。\n端口： 主动模式：TCP 21（指令），20（数据）端口\n被动模式：TCP 21（指令），大于1024端口传输数据（可在配置文件中指定范围）\n生成证书：\n# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout ftp.pem -out ftp.pem\n配置文件：\n/etc/vsftpd/vsftpd.conf\n严格来说,整个 vsftpd 的配置文件就只有这个档案!这个档案的设定是以 bash的变量设定相同的方式来处理的, 也就是『参数=设定值』来设定的,注意, 等号两边不能有空白喔!至于详细的 vsftpd.conf 可以使用 『 man 5 vsftpd.conf 』来详查。\n/etc/pam.d/vsftpd\n这个是 vsftpd 使用 PAM 模块时的相关配置文件。主要用来作为身份认证之用,还有一些用户身份的抵挡功能, 也是透过这个档案来达成的。\n/etc/vsftpd/ftpusers\n与上一个档案有关系,也就是 PAM 模块 (/etc/pam.d/vsftpd) 所指定的那个无法登入的用户配置文件啊! 这个档案的设定很简单,你只要将『不想让他登入FTP 的账号』写入这个档案即可。\n/etc/vsftpd/user_list\n这个档案是否能够生效与 vsftpd.conf 内的两个参数有关,分别是『 userlist_enable, userlist_deny 』。 如果说 /etc/vsftpd/ftpusers 是PAM 模块的抵挡设定项目,那么这个 /etc/vsftpd/user_list 则是 vsftpd 自定义的抵挡项目。事实上这个档案与 /etc/vsftpd/ftpusers 几乎一模一样, 在预设的情况下,你可以将不希望可登入 vsftpd 的账号写入这里。不过这个档案的功能会依据 vsftpd.conf 配置文件内的 serlist_deny={YES/NO} 而不同。\n/etc/vsftpd/chroot_list\n这个档案预设是不存在的,所以你必须要手动自行建立。这个档案的主要功能是可以将某些账号的使用者 chroot 在他们的家目录下!但这个档案要生效与vsftpd.conf 内的『 chroot_list_enable, chroot_list_file 』两个参数有关。如果你想要将某些实体用户限制在他们的家目录下而不许到其他目录去,可以启动这个设定项目。\n/usr/sbin/vsftpd\n这就是 vsftpd 的主要执行档，vsftpd 只有这一个执行档。\n/var/ftp/\n这个是 vsftpd 的预设匿名者登入的根目录，其实与 ftp 这个账号的家目录有关。\n!!服务器环境设定\n### 使用本地时间 use_localtime=yes dirmessage_enable=yes xferlog_enable=yes connect_from_port_20=yes xferlog_std_format=yes listen=yes pam_service_name=vsftpd tcp_wrappers=yes ### 欢迎信息 banner_file=/etc/vsftpd/welcome.txt ### 限制带宽单位Bytes/秒 local_max_rate=100000000 ### 限制最大同时在线人数 max_clients=100 max_per_ip=100 ### 数据流传输10分钟停止传输 data_connection_timeout=600 ### 发呆超过 10 分钟就断线 idle_session_timeout=600 write_enable=yes userlist_enable=yes userlist_deny=no ### user_list文件必须建立 userlist_file=/etc/vsftpd/user_list ### 为了避免一个安全漏洞，从 vsftpd 2.3.5 开始，chroot 目录必须不可写。 chroot_local_user=yes chroot_list_enable=yes ### chroot_list必须建立，空文件都可以 chroot_list_file=/etc/vsftpd/chroot_list ### 被动式端口范围设定 pasv_min_port=65500 pasv_max_port=65535 ### 设定上传文件权限 local_umask=002 ### anonymous设定，设定上传目录拥有者为ftp anonymous_enable=yes no_anon_password=yes anon_max_rate=100000000 anon_other_write_enable=yes anon_mkdir_write_enable=yes anon_upload_enable=yes anon_root=/var/vsftpd/ ### 下两行的作用是修改anonymous上传文件的拥有者为daemon,所以anonymous上传的文件是不能下载的，只有修改权限后才能下载 chown_uploads=yes chown_username=daemon ### 针对实体账号的设定 local_enable=yes ### 针对 SSL 所加入的特别参数。 ### 启动 SSL 的支持 ssl_enable=YES ### 但是不允许匿名者使用 SSL 喔 allow_anon_ssl=NO ### 强制实体用户数据传输加密 force_local_data_ssl=YES ### 登入时的帐密也加密 force_local_logins_ssl=YES ### 支持 TLS 方式即可,底下不用启动 ssl_tlsv1=YES ssl_sslv2=NO ssl_sslv3=NO ### 预设 RSA 加密的凭证档案所在 rsa_cert_file=/etc/vsftpd/vsftpd.pem 网上一个详细的教程，值得参考 一、安装vsftpd及相关组件： # yum -y install vsftpd db5.3-util 注意：这里的db5.3在系统更新的时候可以会变名字，所以用apt list db*查找下再安装。\n二、修改FTP相关帐户： vsftpd服务的宿主用户 # useradd vsftpd -s /sbin/nologin 默认的vsftpd的服务宿主用户是root，但是这不符合安全性的需要。这里建立名字为vsftpd的用户，用他来作为支持vsftpd的服务宿主用户。由于该用户仅用来支持vsftpd服务用，因此没有许可他登陆系统的必要，并设定他为不能登陆系统的用户。 这一步现在可能不需要了，先放着。\nvsftpd的虚拟宿主用户 # useradd ftp -d /var/www/html/ -s /sbin/nologin # chown -R ftp:ftp /var/www/html/ vsftpd的虚拟用户并不是系统用户，也就是说这些FTP的用户在系统中是不存在的。他们的总体权限其实是集中寄托在一个在系统中的某一个用户身上的，所谓vsftpd的虚拟宿主用户，就是这样一个支持着所有虚拟用户的宿主用户。由于他支撑了FTP的所有虚拟的用户，那么他本身的权限将会影响着这些虚拟的用户，因此，处于安全性的考虑，也要非分注意对该用户的权限的控制，该用户也绝对没有登陆系统的必要，这里也设定他为不能登陆系统的用户。ftp用户在安装vsftpd的时候就已经添加了，我们只需要将它\n三、vsftpd.conf基本配置： 配置 /etc/vsftpd/vsftpd.conf文件，这里我们只写有变动的地方，其它的保持默认。\n#ssl加密传输 rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key ssl_enable=YES #被动ftp #listen_port=56880 #pasv_min_port=30000 #pasv_max_port=35000 #主动ftp，这个只需要打开20和21两个端口，在负载比较小的时候，不想开多个端口的时候，可以使用 pasv_enable=NO #这个地方一定要注意，被卡这儿好久 userlist_enable=YES userlist_deny=NO userlist_file=/etc/vsftpd/user_list tcp_wrappers=YES chroot_local_user=YES chroot_list_file=/etc/vsftpd/chroot_list #虚拟用户 guest_enable=YES guest_username=ftp virtual_use_local_privs=YES pam_service_name=vsftpd #独立用户设置 user_config_dir=/etc/vsftpd/vsftpd_user_conf 四、生成vsftpd虚拟用户数据库文件： 建立虚拟用户名单文件： # vim /etc/vsftpd/ftpuser.txt 内容如下： ftp1 1234 ftp2 5678 格式很简单：“一行用户名，一行密码！”。\n生成虚拟用户数据文件： # db_load -T -t hash -f /etc/vsftpd/ftpuser.txt /etc/vsftpd/vsftpd_login.db # chmod 600 /etc/vsftpd/vsftpd_login.db这一步可以省略，文件权限就是这个\n五、配置PAM验证文件： # vim /etc/pam.d/vsftpd 将以下内容加入到文件最前面（在后面加入无效）：\n注意：pam_userdb.so这个文件可以搜索下位置写入，不同系统的文件位置不同\nauth required /usr/lib/aarch64-linux-gnu/security/pam_userdb.so db=/etc/vsftpd/vsftpd_login account required /usr/lib/aarch64-linux-gnu/security/pam_userdb.so db=/etc/vsftpd/vsftpd_login auth required pam_listfile.so item=user sense=deny file=/etc/vsftpd/ftpusers onerr=succeed 经过测试，这样写也行：\nauth required pam_userdb.so db=/etc/vsftpd/vsftpd_login account required pam_userdb.so db=/etc/vsftpd/vsftpd_login auth required pam_listfile.so item=user sense=deny file=/etc/vsftpd/ftpusers onerr=succeed ftpusers的原位置在/etc/下，移动ftpusers到/etc/vsftpd/下，这个文件中的用户是不能登陆ftp的。 上一步建立的数据库 vsftpd_login 在此处被使用，建立的虚拟用户将采用PAM进行验证，这是通过/etc/vsftpd/vsftpd.conf文件中的语句pam_service_name=vsftpd来启用的。\n六、vsftpd虚拟用户的独立配置： # mkdir -p /etc/vsftpd/vsftpd_user_conf # vim /etc/vsftpd/vsftpd_user_conf/用户名\n配置如下： allow_writeable_chroot=YES anon_world_readable_only=NO write_enable=YES anon_upload_enable=YES anon_mkdir_write_enable=YES anon_other_write_enable=YES local_root=/var/ftp/\n七、vsftpd服务器之间的站点对传： 有时候可能需要开启vsftpd服务器之间的站点对传功能，只需在主配置文件 /etc/vsftpd/vsftpd.conf 里加入如下参数即可：\npasv_promiscuous=YES port_promiscuous=YES 说明： port_promiscuous=YES|NO 默认值为NO。为YES时，取消PORT安全检查。该检查确保外出的数据只能连接到客户端上。小心打开此选项。\npasv_promiscuous=YES|NO 默认值为NO。为YES时，将关闭PASV模式的安全检查。该检查确保数据连接和控制连接是来自同一个IP地址。小心打开此选项。此选项唯一合理的用法是存在于由安全隧道方案构成的组织中。 由于取消了数据包的安全检查，允许数据流向非客户端，所以站点对传成功。\n八、/etc/vsftpd/目录下的文件有： chroot_list ftpuser.txt\nftpusers\nuser_list\nvsftpd_login.db\nvsftpd_user_conf这个是目录下面是各个用户的配置文件\n配置修改完成后，重启vsftpd服务生效： 结束 vsftpd配置文件详解 默认配置：允许匿名用户和本地用户登陆。\nanonymous_enable=YES local_enable=YES 匿名用户使用的登陆名为ftp或anonymous，口令为空；匿名用户不能离开匿名 用户家目录/var/ftp,且只能下载不能上传。 本地用户的登录名为本地用户名，口令为此本地用户的口令；本地用户可以在自己家目录中进行读写操作；本地用户可以离开自家目录切换至有权限访问的其他目录，并在权限允许的情况下进行上传/下载。\nwrite_enable=YES 写在文件/etc/vsftpd.ftpusers中的本地用户禁止登陆。\n配置文件格式：vsftpd.conf 的内容非常单纯，每一行即为一项设定。若是空白行或是开头为#的一行，将会被忽略。内容的格式只有一种，如下所示\noption=value 要注意的是，等号两边不能加空白。\n匿名用户（anonymous）设置\nanonymous_enable=YES/NO（YES） 控制是否允许匿名用户登入，YES 为允许匿名登入，NO 为不允许。默认值为YES。\nwrite_enable=YES/NO（YES） 是否允许登陆用户有写权限。属于全局设置，默认值为YES。\nno_anon_password=YES/NO（NO） 若是启动这项功能，则使用匿名登入时，不会询问密码。默认值为NO。\nftp_username=ftp 定义匿名登入的使用者名称。默认值为ftp。\nanon_root=/var/ftp 使用匿名登入时，所登入的目录。默认值为/var/ftp。注意ftp目录不能是777的权限属性，即匿名用户的家目录不能有777的权限。\nanon_upload_enable=YES/NO（NO） 如果设为YES，则允许匿名登入者有上传文件（非目录）的权限，只有在write_enable=YES时，此项才有效。当然，匿名用户必须要有对上层目录的写入权。默认值为NO。 anon_world_readable_only=YES/NO（YES） 如果设为YES，则允许匿名登入者下载可阅读的档案（可以下载到本机阅读，不能直接在FTP服务器中打开阅读）。默认值为YES。 anon_mkdir_write_enable=YES/NO（NO） 如果设为YES，则允许匿名登入者有新增目录的权限，只有在write_enable=YES时，此项才有效。当然，匿名用户必须要有对上层目录的写入权。默认值为NO。 anon_other_write_enable=YES/NO（NO） 如 果设为YES，则允许匿名登入者更多于上传或者建立目录之外的权限，譬如删除或者重命名。（如果anon_upload_enable=NO，则匿名用户 不能上传文件，但可以删除或者重命名已经存在的文件；如果anon_mkdir_write_enable=NO，则匿名用户不能上传或者新建文件夹，但 可以删除或者重命名已经存在的文件夹。）默认值为NO。 chown_uploads=YES/NO（NO） 设置是否改变匿名用户上传文件（非目录）的属主。默认值为NO。 chown_username=username 设置匿名用户上传文件（非目录）的属主名。建议不要设置为root。 anon_umask=077 设置匿名登入者新增或上传档案时的umask 值。默认值为077，则新建档案的对应权限为700。 deny_email_enable=YES/NO（NO） 若是启动这项功能，则必须提供一个档案/etc/vsftpd/banner_emails，内容为email address。若是使用匿名登入，则会要求输入email address，若输入的email address 在此档案内，则不允许进入。默认值为NO。 banned_email_file=/etc/vsftpd/banner_emails 此文件用来输入email address，只有在deny_email_enable=YES时，才会使用到此档案。若是使用匿名登入，则会要求输入email address，若输入的email address 在此档案内，则不允许进入。\n4.本地用户设置 local_enable=YES/NO（YES） 控制是否允许本地用户登入，YES 为允许本地用户登入，NO为不允许。默认值为YES。 local_root=/home/username 当本地用户登入时，将被更换到定义的目录下。默认值为各用户的家目录。 write_enable=YES/NO（YES） 是否允许登陆用户有写权限。属于全局设置，默认值为YES。 local_umask=022 本地用户新增档案时的umask 值。默认值为077。 file_open_mode=0755 本地用户上传档案后的档案权限，与chmod 所使用的数值相同。默认值为0666。\n5.欢迎语设置 dirmessage_enable=YES/NO（YES） 如果启动这个选项，那么使用者第一次进入一个目录时，会检查该目录下是否有.message这个档案，如果有，则会出现此档案的内容，通常这个档案会放置欢迎话语，或是对该目录的说明。默认值为开启。 message_file=.message 设置目录消息文件，可将要显示的信息写入该文件。默认值为.message。 banner_file=/etc/vsftpd/banner 当使用者登入时，会显示此设定所在的档案内容，通常为欢迎话语或是说明。默认值为无。如果欢迎信息较多，则使用该配置项。 ftpd_banner=Welcome to BOB\u0026rsquo;s FTP server 这里用来定义欢迎话语的字符串，banner_file是档案的形式，而ftpd_banner 则是字符串的形式。预设为无。\n6.控制用户是否允许切换到上级目录 在默认配置下，本地用户登入FTP后可以使用cd命令切换到其他目录，这样会对系统带来安全隐患。可以通过以下三条配置文件来控制用户切换目录。 chroot_list_enable=YES/NO（NO） 设置是否启用chroot_list_file配置项指定的用户列表文件。默认值为NO。 chroot_list_file=/etc/vsftpd.chroot_list 用于指定用户列表文件，该文件用于控制哪些用户可以切换到用户家目录的上级目录。 chroot_local_user=YES/NO（NO） 用于指定用户列表文件中的用户是否允许切换到上级目录。默认值为NO。 通过搭配能实现以下几种效果： ①当chroot_list_enable=YES，chroot_local_user=YES时，在/etc/vsftpd.chroot_list文件中列出的用户，可以切换到其他目录；未在文件中列出的用户，不能切换到其他目录。 ②当chroot_list_enable=YES，chroot_local_user=NO时，在/etc/vsftpd.chroot_list文件中列出的用户，不能切换到其他目录；未在文件中列出的用户，可以切换到其他目录。 ③当chroot_list_enable=NO，chroot_local_user=YES时，所有的用户均不能切换到其他目录。 ④当chroot_list_enable=NO，chroot_local_user=NO时，所有的用户均可以切换到其他目录。 [chroot_local_user=YES/NO ,特别注意当等于YES时，因为FTP不能切换目录，有些FTP客户端会在FTP目标目录里再新建一个目标目录，如 upload/upload 造成应用调试困扰] 7.数据传输模式设置 FTP在传输数据时，可以使用二进制方式，也可以使用ASCII模式来上传或下载数据。 ascii_upload_enable=YES/NO（NO） 设置是否启用ASCII 模式上传数据。默认值为NO。 ascii_download_enable=YES/NO（NO） 设置是否启用ASCII 模式下载数据。默认值为NO。\n8.访问控制设置 两种控制方式：一种控制主机访问，另一种控制用户访问。 ①控制主机访问： tcp_wrappers=YES/NO（YES） 设 置vsftpd是否与tcp wrapper相结合来进行主机的访问控制。默认值为YES。如果启用，则vsftpd服务器会检查/etc/hosts.allow 和/etc/hosts.deny 中的设置，来决定请求连接的主机，是否允许访问该FTP服务器。这两个文件可以起到简易的防火墙功能。 比如：若要仅允许192.168.0.1—192.168.0.254的用户可以连接FTP服务器，则在/etc/hosts.allow文件中添加以下内容： vsftpd:192.168.0. :allow all:all :deny ②控制用户访问： 对于用户的访问控制可以通过/etc目录下的vsftpd.user_list和ftpusers文件来实现。 userlist_file=/etc/vsftpd.user_list 控制用户访问FTP的文件，里面写着用户名称。一个用户名称一行。 userlist_enable=YES/NO（NO） 是否启用vsftpd.user_list文件。 userlist_deny=YES/NO（YES） 决定vsftpd.user_list文件中的用户是否能够访问FTP服务器。若设置为YES，则vsftpd.user_list文件中的用户不允许访问FTP，若设置为NO，则只有vsftpd.user_list文件中的用户才能访问FTP。 /etc /vsftpd/ftpusers文件专门用于定义不允许访问FTP服务器的用户列表（注意:如果 userlist_enable=YES,userlist_deny=NO,此时如果在vsftpd.user_list和ftpusers中都有某个 用户时，那么这个用户是不能够访问FTP的，即ftpusers的优先级要高）。默认情况下vsftpd.user_list和ftpusers，这两个 文件已经预设置了一些不允许访问FTP服务器的系统内部账户。如果系统没有这两个文件，那么新建这两个文件，将用户添加进去即可。\n9.访问速率设置 anon_max_rate=0 设置匿名登入者使用的最大传输速度，单位为B/s，0 表示不限制速度。默认值为0。 local_max_rate=0 本地用户使用的最大传输速度，单位为B/s，0 表示不限制速度。预设值为0。\n10.超时时间设置 accept_timeout=60 设置建立FTP连接的超时时间，单位为秒。默认值为60。 connect_timeout=60 PORT 方式下建立数据连接的超时时间，单位为秒。默认值为60。 data_connection_timeout=120 设置建立FTP数据连接的超时时间，单位为秒。默认值为120。 idle_session_timeout=300 设置多长时间不对FTP服务器进行任何操作，则断开该FTP连接，单位为秒。默认值为300 。\n11.日志文件设置 xferlog_enable= YES/NO（YES） 是否启用上传/下载日志记录。如果启用，则上传与下载的信息将被完整纪录在xferlog_file 所定义的档案中。预设为开启。 xferlog_file=/var/log/vsftpd.log 设置日志文件名和路径，默认值为/var/log/vsftpd.log。 xferlog_std_format=YES/NO（NO） 如果启用，则日志文件将会写成xferlog的标准格式，如同wu-ftpd 一般。默认值为关闭。 log_ftp_protocol=YES|NO（NO） 如果启用此选项，所有的FTP请求和响应都会被记录到日志中，默认日志文件在/var/log/vsftpd.log。启用此选项时，xferlog_std_format不能被激活。这个选项有助于调试。默认值为NO。\n12.定义用户配置文件 在vsftpd中，可以通过定义用户配置文件来实现不同的用户使用不同的配置。 user_config_dir=/etc/vsftpd/userconf 设置用户配置文件所在的目录。当设置了该配置项后，用户登陆服务器后，系统就会到/etc/vsftpd/userconf目录下，读取与当前用户名相同的文件，并根据文件中的配置命令，对当前用户进行更进一步的配置。 例 如：定义user_config_dir=/etc/vsftpd/userconf，且主机上有使用者 test1,test2，那么我们就在user_config_dir 的目录新增文件名为test1和test2两个文件。若是test1 登入，则会读取user_config_dir 下的test1 这个档案内的设定。默认值为无。利用用户配置文件，可以实现对不同用户进行访问速度的控制，在各用户配置文件中定义local_max_rate=XX， 即可。\n13.FTP的工作方式与端口设置 FTP有两种工作方式：PORT FTP（主动模式）和PASV FTP（被动模式） listen_port=21 设置FTP服务器建立连接所监听的端口，默认值为21。 connect_from_port_20=YES/NO 指定FTP使用20端口进行数据传输，默认值为YES。 ftp_data_port=20 设置在PORT方式下，FTP数据连接使用的端口，默认值为20。 pasv_enable=YES/NO（YES） 若设置为YES，则使用PASV工作模式；若设置为NO，则使用PORT模式。默认值为YES，即使用PASV工作模式。 pasv_max_port=0 在PASV工作模式下，数据连接可以使用的端口范围的最大端口，0 表示任意端口。默认值为0。 pasv_min_port=0 在PASV工作模式下，数据连接可以使用的端口范围的最小端口，0 表示任意端口。默认值为0。\n14.与连接相关的设置 listen=YES/NO（YES） 设 置vsftpd服务器是否以standalone模式运行。以standalone模式运行是一种较好的方式，此时listen必须设置为YES，此为默 认值。建议不要更改，有很多与服务器运行相关的配置命令，需要在此模式下才有效。若设置为NO，则vsftpd不是以独立的服务运行，要受到xinetd 服务的管控，功能上会受到限制。 max_clients=0 设置vsftpd允许的最大连接数，默认值为0，表示不受限制。若设置为100时，则同时允许有100个连接，超出的将被拒绝。只有在standalone模式运行才有效。 max_per_ip=0 设置每个IP允许与FTP服务器同时建立连接的数目。默认值为0，表示不受限制。只有在standalone模式运行才有效。 listen_address=IP地址 设置FTP服务器在指定的IP地址上侦听用户的FTP请求。若不设置，则对服务器绑定的所有IP地址进行侦听。只有在standalone模式运行才有效。 setproctitle_enable=YES/NO（NO） 设置每个与FTP服务器的连接，是否以不同的进程表现出来。默认值为NO，此时使用ps aux |grep ftp只会有一个vsftpd的进程。若设置为YES，则每个连接都会有一个vsftpd的进程。\n15.虚拟用户设置 虚拟用户使用PAM认证方式。 pam_service_name=vsftpd 设置PAM使用的名称，默认值为/etc/pam.d/vsftpd。 guest_enable= YES/NO（NO） 启用虚拟用户。默认值为NO。 guest_username=ftp 这里用来映射虚拟用户。默认值为ftp。 virtual_use_local_privs=YES/NO（NO） 当该参数激活（YES）时，虚拟用户使用与本地用户相同的权限。当此参数关闭（NO）时，虚拟用户使用与匿名用户相同的权限。默认情况下此参数是关闭的（NO）。\n16.其他设置 text_userdb_names= YES/NO（NO） 设置在执行ls –la之类的命令时，是显示UID、GID还是显示出具体的用户名和组名。默认值为NO，即以UID和GID方式显示。若希望显示用户名和组名，则设置为YES。 ls_recurse_enable=YES/NO（NO） 若是启用此功能，则允许登入者使用ls –R（可以查看当前目录下子目录中的文件）这个指令。默认值为NO。 hide_ids=YES/NO（NO） 如果启用此功能，所有档案的拥有者与群组都为ftp，也就是使用者登入使用ls -al之类的指令，所看到的档案拥有者跟群组均为ftp。默认值为关闭。 download_enable=YES/NO（YES） 如果设置为NO，所有的文件都不能下载到本地，文件夹不受影响。默认值为YES。\n","date":"May 30","permalink":"https://blog.wiseai.cn/post/ftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9E%B6%E8%AE%BEvsftpd/","tags":["ftp"],"title":"FTP服务器架设（vsftpd）"},{"categories":["Linux使用"],"contents":" 添加ssh公钥： 查看~/.ssh/id_rsa.pub文件，如果有公钥直接添加，没有的话使用这个命令：\n$ ssh-keygen -t ed25519 -C \u0026#34;xxxxx@xxxxx.com\u0026#34; 三次回车后，再查看~/.ssh/id_rsa.pub文件，添加到gitee设置。\n创建版本库： 不建议直接生成，可以在gitee网站下建立仓库，之后clone到本地，直接使用下面的命令操作就可以了。\n$ git init 这个命令可以把当前目录变成git管理的仓库。 远程库如果是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。\n添加远程仓库： $ git remote add gitee git@gitee.com:wiseai/wiseai.git $ git remote add github git@github.com:wiseai/wiseai.git 查看远程仓库信息： $ git remote -v 删除远程仓库： $ git remote rm github 推送到GitHub或Gitee: $ git push gitee master $ git push github master 该操作在后面内容同步后再推送。\n设置邮件和用户名： $ git config --global user.email \u0026#34;you@example.com\u0026#34; $ git config --global user.name \u0026#34;Your Name\u0026#34; 全局设置使用\u0026ndash;global参数，如果仅在本仓库设置身份标识，则省略 \u0026ndash;global 参数。\n查看git的修改状态： $ git status 查看具体修改内容： $ git diff readme.txt 添加修改文件： $ git add readme.txt 也可以提交文件，但是空目录不显示\n提交文件修改： $ git commit -m \u0026#34;修改说明\u0026#34; 该操作提交所有add的文件和目录\n丢弃没有add的修改： $ git checkout -- readme.txt 丢弃已经add文件的修改： $ git reset HEAD readme.txt 删除文件： 先从本地删除文件，之后\n$ git rm test.txt $ git commit -m \u0026#34;修改说明\u0026#34; 文件已删除。恢复使用：\n$ git checkout -- test.txt 将远程仓库克隆到本地： $ git clone git@gitee.com:wiseai/wiseai.git 克隆可以使用Https或者ssh等，具体可以看网站。 使用ssh必有添加公钥才行。\n仓库 # 在当前目录新建一个Git代码库 $ git init # 新建一个目录，将其初始化为Git代码库 $ git init [project-name] # 下载一个项目和它的整个代码历史 $ git clone [url] 配置 # 显示当前的Git配置 $ git config --list # 编辑Git配置文件 $ git config -e [--global] # 设置提交代码时的用户信息 $ git config [--global] user.name \u0026quot;[name]\u0026quot; $ git config [--global] user.email \u0026quot;[email address]\u0026quot; 增加/删除文件 # 添加指定文件到暂存区 $ git add [file1] [file2] ... # 添加指定目录到暂存区，包括子目录 $ git add [dir] # 添加当前目录的所有文件到暂存区 $ git add . # 添加每个变化前，都会要求确认 # 对于同一个文件的多处变化，可以实现分次提交 $ git add -p # 删除工作区文件，并且将这次删除放入暂存区 $ git rm [file1] [file2] ... # 停止追踪指定文件，但该文件会保留在工作区 $ git rm --cached [file] # 改名文件，并且将这个改名放入暂存区 $ git mv [file-original] [file-renamed] 代码提交 # 提交暂存区到仓库区 $ git commit -m [message] # 提交暂存区的指定文件到仓库区 $ git commit [file1] [file2] ... -m [message] # 提交工作区自上次commit之后的变化，直接到仓库区 $ git commit -a # 提交时显示所有diff信息 $ git commit -v # 使用一次新的commit，替代上一次提交 # 如果代码没有任何新变化，则用来改写上一次commit的提交信息 $ git commit --amend -m [message] # 重做上一次commit，并包括指定文件的新变化 $ git commit --amend [file1] [file2] ... 分支 # 列出所有本地分支 $ git branch # 列出所有远程分支 $ git branch -r # 列出所有本地分支和远程分支 $ git branch -a # 新建一个分支，但依然停留在当前分支 $ git branch [branch-name] # 新建一个分支，并切换到该分支 $ git checkout -b [branch] # 新建一个分支，指向指定commit $ git branch [branch] [commit] # 新建一个分支，与指定的远程分支建立追踪关系 $ git branch --track [branch] [remote-branch] # 切换到指定分支，并更新工作区 $ git checkout [branch-name] # 切换到上一个分支 $ git checkout - # 建立追踪关系，在现有分支与指定的远程分支之间 $ git branch --set-upstream [branch] [remote-branch] # 合并指定分支到当前分支 $ git merge [branch] # 选择一个commit，合并进当前分支 $ git cherry-pick [commit] # 删除分支 $ git branch -d [branch-name] # 删除远程分支 $ git push origin --delete [branch-name] $ git branch -dr [remote/branch] 标签 # 列出所有tag $ git tag # 新建一个tag在当前commit $ git tag [tag] # 新建一个tag在指定commit $ git tag [tag] [commit] # 删除本地tag $ git tag -d [tag] # 删除远程tag $ git push origin :refs/tags/[tagName] # 查看tag信息 $ git show [tag] # 提交指定tag $ git push [remote] [tag] # 提交所有tag $ git push [remote] --tags # 新建一个分支，指向某个tag $ git checkout -b [branch] [tag] 查看信息 # 显示有变更的文件 $ git status # 显示当前分支的版本历史 $ git log # 显示commit历史，以及每次commit发生变更的文件 $ git log --stat # 搜索提交历史，根据关键词 $ git log -S [keyword] # 显示某个commit之后的所有变动，每个commit占据一行 $ git log [tag] HEAD --pretty=format:%s # 显示某个commit之后的所有变动，其\u0026quot;提交说明\u0026quot;必须符合搜索条件 $ git log [tag] HEAD --grep feature # 显示某个文件的版本历史，包括文件改名 $ git log --follow [file] $ git whatchanged [file] # 显示指定文件相关的每一次diff $ git log -p [file] # 显示过去5次提交 $ git log -5 --pretty --oneline # 显示所有提交过的用户，按提交次数排序 $ git shortlog -sn # 显示指定文件是什么人在什么时间修改过 $ git blame [file] # 显示暂存区和工作区的差异 $ git diff # 显示暂存区和上一个commit的差异 $ git diff --cached [file] # 显示工作区与当前分支最新commit之间的差异 $ git diff HEAD # 显示两次提交之间的差异 $ git diff [first-branch]...[second-branch] # 显示今天你写了多少行代码 $ git diff --shortstat \u0026quot;@{0 day ago}\u0026quot; # 显示某次提交的元数据和内容变化 $ git show [commit] # 显示某次提交发生变化的文件 $ git show --name-only [commit] # 显示某次提交时，某个文件的内容 $ git show [commit]:[filename] # 显示当前分支的最近几次提交 $ git reflog 远程同步 # 下载远程仓库的所有变动 $ git fetch [remote] # 显示所有远程仓库 $ git remote -v # 显示某个远程仓库的信息 $ git remote show [remote] # 增加一个新的远程仓库，并命名 $ git remote add [shortname] [url] # 取回远程仓库的变化，并与本地分支合并 $ git pull [remote] [branch] # 上传本地指定分支到远程仓库 $ git push [remote] [branch] # 强行推送当前分支到远程仓库，即使有冲突 $ git push [remote] --force # 推送所有分支到远程仓库 $ git push [remote] --all 撤销 # 恢复暂存区的指定文件到工作区 $ git checkout [file] # 恢复某个commit的指定文件到暂存区和工作区 $ git checkout [commit] [file] # 恢复暂存区的所有文件到工作区 $ git checkout . # 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变 $ git reset [file] # 重置暂存区与工作区，与上一次commit保持一致 $ git reset --hard # 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变 $ git reset [commit] # 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致 $ git reset --hard [commit] # 重置当前HEAD为指定commit，但保持暂存区和工作区不变 $ git reset --keep [commit] # 新建一个commit，用来撤销指定commit # 后者的所有变化都将被前者抵消，并且应用到当前分支 $ git revert [commit] 暂时将未提交的变化移除，稍后再移入 $ git stash $ git stash pop 其他 # 生成一个可供发布的压缩包 $ git archive ","date":"May 30","permalink":"https://blog.wiseai.cn/post/git/","tags":["github","gitee"],"title":"git的使用"},{"categories":["golang学习"],"contents":" 配置golang 下载文件：golang官网下载 解压文件至/usr/local/目录下： # rm -rf /usr/local/go \u0026amp;\u0026amp; tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz\n（第一个命令是删除golang的残余文件）\n建立软链接至/usr/bin/目录下： # ln -s /usr/local/go/bin/go /usr/bin/\n# ln -s /usr/local/go/bin/gofmt /usr/bin/\n修改为国内源 # go env -w GO111MODULE=auto # go env -w GOPROXY=https://goproxy.cn,direct\n查看配置 # go env\n配置nodejs 下载文件：nodejs官网 解压文件至/usr/local/目录下： # rm -rf /usr/local/go \u0026amp;\u0026amp; tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz\n（第一个命令是删除nodejs的残余文件） # npm install yarn\n建立软链接至/usr/bin/目录下： # ln -s /usr/local/node-v16.13.2-linux-arm64/bin/node /usr/bin/\n# ln -s /usr/local/node-v16.13.2-linux-arm64/bin/npm /usr/bin/\n# ln -s /usr/local/node-v16.13.2-linux-arm64/bin/npx /usr/bin/\n修改为国内源 # npm config set registry https://registry.npm.taobao.org\n查看配置 # npm config get\n","date":"May 30","permalink":"https://blog.wiseai.cn/post/golang%E5%92%8Cnodejs%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","tags":["golang","nodejs","环境配置"],"title":"golang和nodejs环境配置"},{"categories":["golang学习"],"contents":"go build，是我们非常常用的命令，它可以启动编译，把我们的包和相关的依赖编译成一个可执行的文件。\nusage: go build [-o output] [-i] [build flags] [packages]\ngo build的使用比较简洁，所有的参数都可以忽略，直到只有go build，这个时候意味着使用当前目录进行编译，下面的几条命令是等价的：\ngo build go build . go build hello.go 以上这三种写法，都是使用当前目录编译的意思。因为我们忽略了packages,所以自然就使用当前目录进行编译了。从这里我们也可以推测出，go build本质上需要的是一个路径，让编译器可以找到哪些需要编译的go文件。packages其实是一个相对路径，是相对于我们定义的GOROOT和GOPATH这两个环境变量的，所以有了packages这个参数后，go build就可以知道哪些需要编译的go文件了。\ngo build flysnow.org/tools\n这种方式是指定包的方式，这样会明确地编译我们这个包。当然我们也可以使用通配符\ngo build flysnow.org/tools/...\n** 3个点表示匹配所有字符串，这样go build就会编译tools目录下的所有包。**\n讲到go build编译，不能不提跨平台编译，Go提供了编译链工具，可以让我们在任何一个开发平台上，编译出其他平台的可执行文件。\n默认情况下，都是根据我们当前的机器生成的可执行文件，比如你的是Linux 64位，就会生成Linux 64位下的可执行文件，比如我的Mac；可以使用go env查看编译环境,以下截取重要的部分。\ngo env GOARCH=\u0026#34;amd64\u0026#34; GOEXE=\u0026#34;\u0026#34; GOHOSTARCH=\u0026#34;amd64\u0026#34; GOHOSTOS=\u0026#34;darwin\u0026#34; GOOS=\u0026#34;darwin\u0026#34; GOROOT=\u0026#34;/usr/local/go\u0026#34; GOTOOLDIR=\u0026#34;/usr/local/go/pkg/tool/darwin_amd64\u0026#34; ** 注意里面两个重要的环境变量GOOS和GOARCH,其中GOOS指的是目标操作系统，它的可用值为：**\ndarwin freebsd linux windows android dragonfly netbsd openbsd plan9 solaris ** 一共支持10种操作系统。GOARCH指的是目标处理器的架构，目前支持的有：**\narm arm64 386 amd64 ppc64 ppc64le mips64 mips64le s390x 一共支持9种处理器的架构\n如果我们要生成不同平台架构的可执行程序，只要改变这两个环境变量就可以了，比如要生成Linux 64位的程序，命令如下：\nGOOS=linux GOARCH=amd64 go build flysnow.org/hello\n前面两个赋值，是更改环境变量，这样的好处是只针对本次运行有效，不会更改我们默认的配置。\ngo help build\n","date":"May 30","permalink":"https://blog.wiseai.cn/post/golang%E7%9A%84build%E5%91%BD%E4%BB%A4/","tags":["golang"],"title":"golang的build命令"},{"categories":["树莓派"],"contents":" linux查看gpio状态 cat /sys/kernel/debug/gpio\n有个blog里有这个方法，去试试：\nmkdir /tmp/debug mount -t debugfs debugfs /tmp/debug cat /tmp/debug/gpio GPIO操作的一些说明 首先，看看系统中有没有“/sys/class/gpio”这个文件夹。如果没有请在编译内核的时候加入 Device Drivers-\u0026gt; GPIO Support -\u0026gt;/sys/class/gpio/… (sysfs interface)\n/sys/class/gpio 的使用说明： gpio_operation 通过/sys/文件接口操作IO端口 GPIO到文件系统的映射\n◇ 控制GPIO的目录位于/sys/class/gpio\n◇ /sys/class/gpio/export文件用于通知系统需要导出控制的GPIO引脚编号\n◇ /sys/class/gpio/unexport 用于通知系统取消导出\n◇ /sys/class/gpio/gpiochipX目录保存系统中GPIO寄存器的信息，包括每个寄存器控制引脚的起始编号base，寄存器名称，引脚总数 导出一个引脚的操作步骤\n◇ 首先计算此引脚编号，引脚编号 = 控制引脚的寄存器基数 + 控制引脚寄存器位数\n◇ 向/sys/class/gpio/export写入此编号，比如12号引脚，在shell中可以通过以下命令实现，echo 12 \u0026gt; export命令成功后生成/sys/class/gpio/gpio12目录，如果没有出现相应的目录，说明此引脚不可导出\n◇ direction文件，定义输入输入方向，可以通过下面命令定义为输出。direction接受的参数：in, out, high, low。high/low同时设置方向为输出，并将value设置为相应的1/0\n◇ value文件是端口的数值，为1或0\n例子： 进入/sys/class/gpio/文件夹：\n将gpio7重定向用户定义设备，生成gpio7目录 # echo 7 \u0026gt; export\n进入gpio7目录并查看文件 # cd gpio7\n# ls\ndirection设置引脚方向，输入还是输出\nvalue设置引脚状态，高电平还是低电平\n输入状态 设置引脚状态为输入状态 # echo in \u0026gt; direction\n查看引脚高低电平 # cat value 输出状态 设置引脚状态为输出状态 # echo out \u0026gt; direction\n设置输出高电平 # echo 1 \u0026gt; value\n设置输出低电平 # echo 0 \u0026gt; value\n注销 测试完毕之后返回/sys/class/gpio/目录，并将gpio注销\n# cd /sys/class/gpio/\n# echo 7 \u0026gt; /sys/class/gpio/unexport\n这篇博客很不错：https://zhuanlan.zhihu.com/p/66660750 https://blog.csdn.net/k1ang/article/details/107117077\n","date":"May 30","permalink":"https://blog.wiseai.cn/post/gpio%E7%9B%B8%E5%85%B3/","tags":["gpio","树莓派"],"title":"GPIO相关知识"},{"categories":["Linux使用"],"contents":" 一、安装hplip # dnf install hplip\n或者官网下载\n安装hplip-gui,\n# dnf install hplip-gui\n二、运行hp-plugin安装插件 或者下载hplip-3.17.10-plugin.run文件，版本和hplip相同，网址为：http://www.openprinting.org/download/printdriver/auxfiles/HP/plugins/\n安装时会验证文件，不用理会，直接安装就行。\n好了！\n","date":"May 30","permalink":"https://blog.wiseai.cn/post/linux%E5%AE%89%E8%A3%85hp%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/","tags":["惠普"],"title":"Linux安装hp打印机驱动"},{"categories":["Linux使用"],"contents":" 一、配置rc.local文件实现开机启动： 首先，建立一个文件：\n$ sudo touch /etc/rc.local\n给予可执行权限：\n$ sudo chmod +x /etc/rc.local\n在文件写入以下内容：\n#!/bin/sh /path/to/gohttpserver -r /path/to/ --port 8080 --upload 以上两个/path/to/，一个是文件所在目录，一个是工作目录，都使用绝对路径。 完成！！！\n二、第二种方法以后有时间再补充。 ","date":"May 30","permalink":"https://blog.wiseai.cn/post/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/","tags":["开机","自动运行"],"title":"Linux开机启动的方法"},{"categories":["Linux使用"],"contents":"1、迁移以后，会存在其中一个网卡无法启动（eth0 or eth1）\n[root@ ~]# ifup eth0\nWARNING: Deprecated config file /etc/modprobe.conf, all config files belong into /etc/modprobe.d/.\nWARNING: Deprecated config file /etc/modprobe.conf, all config files belong into /etc/modprobe.d/.\nDevice eth0 does not seem to be present, delaying initialization.\n2、删除文件\n[root@ ~]# mv /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/70-persistent-net.rules.bak\n3、注释掉文件ifcfg-eth0及ifcfg-eth01中MAC地址（HWADDR）\n[root@ ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0\nDEVICE=eth0\nBOOTPROTO=static\n#HWADDR=\u0026ldquo;XX:XX:XX:XX:XX:XX\u0026rdquo;\nONBOOT=yes\nTYPE=Ethernet\n4、重启服务器（重启网卡不好使）\n","date":"May 30","permalink":"https://blog.wiseai.cn/post/linux%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1%E5%90%8E%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8D%E8%83%BD%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","tags":["网络","故障"],"title":"Linux更换网卡后网络服务不能启动的问题解决办法"},{"categories":["Linux使用"],"contents":" #!/bin/bash PATH=/sbin:/bin:/usr/sbin:/usr/bin #设置网卡 wk=\u0026#34;eth1\u0026#34; # 1. 清除规则 iptables -F iptables -X iptables -Z # 2. 设定政策 iptables -P INPUT DROP iptables -P OUTPUT ACCEPT iptables -P FORWARD ACCEPT # 3~5. 制订各项规则 iptables -A INPUT -i lo -j ACCEPT iptables -A INPUT -i $wk -m state --state RELATED,ESTABLISHED -j ACCEPT #samba服务 iptables -A INPUT -i $wk -p tcp --dport 139 -j ACCEPT iptables -A INPUT -i $wk -p tcp --dport 445 -j ACCEPT iptables -A INPUT -i $wk -p udp --dport 137:138 -j ACCEPT #vsftp服务 iptables -A INPUT -i $wk -p tcp --dport 21 -j ACCEPT iptables -A INPUT -i $wk -p tcp --dport 1024:65535 -j ACCEPT #iptables -A INPUT -i $wk -s 192.168.1.0/24 -j ACCEPT 1.查看防火墙规则\n# iptables [-t tables] [-L] [-nv] 选项与参数： -t ：后面接table ，例如nat或filter，若省略此项目，则使用预设的filter -L ：列出目前的table的规则 -n ：不进行IP 与HOSTNAME 的反查，显示速度会快很多！ -v ：列出更多的相关信息\n2.清除规则 # iptables [-t tables] [-FXZ] 选项与参数： -F ：清除所有的已订定的规则； -X ：杀掉所有使用者\u0026quot;自订\u0026quot; 的chain； -Z ：将所有的chain 的计数与流量统计都归零\n3.定义预设政策(policy) # iptables [-t nat] -P [INPUT,OUTPUT,FORWARD] [ACCEPT,DROP] 选项与参数： -P ：定义政策( Policy )。注意，这个P为大写啊！ ACCEPT ：该封包可接受 DROP ：该封包直接丢弃，不会让client 端知道为何被丢弃。\n范例：将本机的INPUT设定为DROP ，其他设定为ACCEPT\n# iptables -P INPUT DROP # iptables -P OUTPUT ACCEPT # iptables -P FORWARD ACCEPT # iptables -t nat -P PREROUTING ACCEPT # iptables -t nat -P POSTROUTING ACCEPT # iptables -t nat -P INPUT ACCEPT # iptables -t nat -P OUTPUT ACCEPT nat表不用于过滤，所以不能设置为DROP 4.定义规则 # iptables [-AI链名] [-io网络界面] [-p协议] [-s来源IP/网域] [-sport 端口范围] [-d目标IP/网域] [-dport 端口范围] -j [ACCEPT'DROP'REJECT'LOG] 选项与参数：\n-AI链名：规则的\u0026#34;插入\u0026#34;或\u0026#34;增加\u0026#34; -A：新增加一条规则，该规则增加在原本规则的最后面。例如原本已经有四条规则，使用-A就可以加上第五条规则！ -I：插入一条规则。如果没有指定此规则的顺序，预设是插入变成第一条规则。 例如原本有四条规则，使用-I则该规则变成第一条，而原本四条变成2~5号 链：有INPUT，OUTPUT，FORWARD等，此链名称又与-io有关，请看底下。 -io网卡：设定封包进出的规范 -i：封包所进入的那个网卡，例如eth0，lo等网卡。需与INPUT链配合； -o：封包所传出的那个网卡，需与OUTPUT链配合； -p协议：设定此规则适用于哪种封包格式 主要的封包格式有：tcp，udp，icmp及all。 -s来源IP/网域：设定此规则之封包的来源项目，可指定单纯的IP或包括网域，例如： IP :192.168.0.100 网域：192.168.0.0/24，192.168.0.0/255.255.255.0均可。 若规范为『不许』时，则加上！即可，例如： -s！192.168.100.0/24表示不许192.168.100.0/24封包来源； -d目标IP/网域：同-s，只不过这里指的是目标的IP或网域。 --sport 来源端口范围。例如 1024:65535 --dport 目标端口范围 -j：后面接动作，主要的动作有接受（ACCEPT）、丢弃（DROP）、拒绝（REJECT）及记录（LOG） # iptables -A INPUT [-m state] [--state状态] 选项与参数：\n-m：一些iptables的外挂模块，主要常见的有： state：状态模块 mac：网络卡硬件地址（hardware address） --state：一些封包的状态，主要有： INVALID：无效的封包，例如数据破损的封包状态 ESTABLISHED：已经联机成功的联机状态； NEW：想要新建立联机的封包状态； RELATED：这个最常用！表示这个封包是与我们主机发送出去的封包有关 例：只要已建立或相关封包就予以通过，只要是不合法封包就丢弃 # iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT # iptables -A INPUT -m state --state INVALID -j DROP 对MAC地址为aa:bb:cc:dd:ee:ff主机开放其连接 # iptables -A INPUT -m mac --mac-source aa:bb:cc:dd :ee:ff -j ACCEPT 选项与参数：\n--mac-source ：就是来源主机的MAC ICMP 封包规则：针对是否回应ping 来设计\n通常我们会把ICMP type 8 (echo request)去掉而已，让远端主机不知道我们是否存在，也不会接受ping的回应。 # iptables -A INPUT [-p icmp] [--icmp-type类型] -j ACCEPT 选项与参数：\n--icmp-type ：后面必须要接ICMP 的封包类型，也可以使用代号， 例如8 代表echo request 的意思。 例：让0,3,4,11,12,14,16,18的ICMP type可以进入本机：\n#!/bin/bash icmp_type=\u0026#34;0 3 4 11 12 14 16 18\u0026#34; for typeicmp in $icmp_type do iptables -A INPUT -i eth0 -p icmp --icmp-type $typeicmp -j ACCEPT done ","date":"May 30","permalink":"https://blog.wiseai.cn/post/iptables%E8%AE%BE%E7%BD%AEsh/","tags":["防火墙","sh"],"title":"通过iptables设置防火墙"},{"categories":["syntax"],"contents":"Lorem ipsum dolor sit amet1 consectetur adipisicing elit. Nemo tempora eum cumque neque voluptatum, odit ipsum consequatur animi.\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo tempora eum cumque neque voluptatum, odit ipsum2 consequatur animi.\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo tempora eum cumque neque voluptatum, odit ipsum consequatur animi.\nLorem ipsum dolor sit amet consectetur adipisicing elit. Nemo tempora eum cumque neque voluptatum, odit ipsum consequatur animi.\nTest Footnote\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nTest Footnote2\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"May 31","permalink":"https://blog.wiseai.cn/post/footnote/","tags":null,"title":"Footnote test"},{"categories":["math"],"contents":"The following\n$$ \\int_{a}^{b} x^2 dx $$\nIs an integral\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEnable Katex in the config file by setting the katex param to true. This will import the necessary Katex CSS/JS.\nSee the online reference of supported TeX functions.\n1 Inline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $ Inline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\n1 2 3 Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ Block math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"May 22","permalink":"https://blog.wiseai.cn/post/test-katex/","tags":null,"title":"Katex support"},{"categories":["math"],"contents":"The following\n$$ \\int_{a}^{b} x^2 dx $$\nIs an integral\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEnable MathJax in the config file by setting the mathjax param to true. This will import the necessary MathJax CSS/JS.\n1 Inline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $ Inline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\n1 2 3 Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ Block math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"May 22","permalink":"https://blog.wiseai.cn/post/test-mathjax/","tags":null,"title":"MathJax support"},{"categories":["themes","syntax"],"contents":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"Mar 11","permalink":"https://blog.wiseai.cn/post/markdown-syntax/","tags":["markdown","css","html"],"title":"Markdown Syntax Guide"},{"categories":null,"contents":" Nya nya nyan meow meow mama More napping, more napping all the napping is exhausting stretch out on bed you are a captive audience while sitting on the toilet, pet me slap the dog because cats rule bleghbleghvomit my furball really tie the room together always hungry. Humans,humans, humans oh how much they love us felines we are the center of attention they feed, they clean miaow then turn around and show you my bum. Cats secretly make all the worlds muffins slap owner\u0026rsquo;s face at 5am until human fills food dish, milk the cow hunt by meowing loudly at 5am next to human slave food dispenser throwup on your pillow. Get scared by doggo also cucumerro .\nCat is meow meow Sees bird in air, breaks into cage and attacks creature when in doubt, wash spend six hours per day washing, but still have a crusty butthole yet lick sellotape tickle my belly at your own peril i will pester for food when you\u0026rsquo;re in the kitchen even if it\u0026rsquo;s salad find box a little too small and curl up with fur hanging out.\nClaw at curtains stretch and yawn nibble on tuna ignore human bite human hand. Under the bed mice yet funny little cat chirrup noise shaking upright tail when standing next to you but white cat sleeps on a black shirt for eat an easter feather as if it were a bird then burp victoriously.\nHas closed eyes but still sees you present belly scratch hand when stroked for is good you understand your place in my world get scared by sudden appearance of cucumber. What the heck just happened, something feels fishy chew master\u0026rsquo;s slippers yet brown cats with pink ears bite the neighbor\u0026rsquo;s bratty kid cereal boxes make for five star accommodation but i like to spend my days sleeping and eating fishes that my human fished for me we live on a luxurious yacht, sailing proudly under the sun, i like to walk on the deck, watching the horizon, dreaming of a good bowl of milk. Lounge in doorway put butt in owner\u0026rsquo;s face, or ptracy destroy house in 5 seconds. Mrow no, you can\u0026rsquo;t close the door, i haven\u0026rsquo;t decided whether or not i wanna go out is good you understand your place in my world.\nBrown cats with pink ears shred all toilet paper and spread around the house being gorgeous with belly side up. Cats go for world domination the best thing in the universe is a cardboard box cats are cute so meow all night having their mate disturbing sleeping humans. Nya nya nyan annoy owner until he gives you food say meow repeatedly until belly rubs, feels good eat the fat cats food but meowing non stop for food. Pet right here, no not there, here, no fool, right here that other cat smells funny you should really give me all the treats because i smell the best and omg you finally got the right spot and i love you right now see brother cat receive pets, attack out of jealousy. Headbutt owner\u0026rsquo;s knee love blinks and purr purr purr purr yawn for stand in front of the computer screen, or mew mew for human is washing you why halp oh the horror flee scratch hiss bite.\nCats making all the muffins Cats making all the muffins asdflkjaertvlkjasntvkjn (sits on keyboard) so the dog smells bad but cough hairball on conveniently placed pants and show belly but loved it, hated it, loved it, hated it catch mouse and gave it as a present. Give me attention or face the wrath of my claws meow all night for love me! and love you, then bite you or mesmerizing birds. Lick human with sandpaper tongue. Murf pratt ungow ungow scratch the box sit in box and to pet a cat, rub its belly, endure blood and agony, quietly weep, keep rubbing belly wake up human for food at 4am or eat owner\u0026rsquo;s food trip owner up in kitchen i want food. Curl up and sleep on the freshly laundered towels paw at your fat belly, steal mom\u0026rsquo;s crouton while she is in the bathroom yet nyan nyan goes the cat, scraaaaape scraaaape goes the walls when the cat murders them with its claws milk the cow suddenly go on wild-eyed crazy rampage toy mouse squeak roll over.\nHunt by meowing loudly at 5am next to human slave food dispenser hate dog reward the chosen human with a slow blink. Cat dog hate mouse eat string barf pillow no baths hate everything miaow then turn around and show you my bum love fish, and kitty scratches couch bad kitty steal the warm chair right after you get up kitty poochy munch on tasty moths. Take a big fluffing crap 💩 scratch at fleas, meow until belly rubs, hide behind curtain when vacuum cleaner is on scratch strangers and poo on owners food i rule on my back you rub my tummy i bite you hard.\nThanks by cats.\n","date":"Mar 09","permalink":"https://blog.wiseai.cn/post/example-lazy-load-image/","tags":["markdown","text","image"],"title":"Example Lazy Load Image"},{"categories":null,"contents":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"Mar 09","permalink":"https://blog.wiseai.cn/post/placeholder-text/","tags":["markdown","text"],"title":"Placeholder Text"},{"categories":null,"contents":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"Mar 05","permalink":"https://blog.wiseai.cn/post/emoji-support/","tags":["emoji"],"title":"Emoji Support"},{"categories":null,"contents":"","date":"Jan 01","permalink":"https://blog.wiseai.cn/articles/","tags":null,"title":"所有文章"}]