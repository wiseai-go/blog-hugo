<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux学习 on WiseAI的博客</title>
    <link>http://wiseai.cn/categories/linux%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in Linux学习 on WiseAI的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>陇ICP备15000157号</copyright>
    <lastBuildDate>Mon, 13 Feb 2023 14:44:41 +0800</lastBuildDate><atom:link href="http://wiseai.cn/categories/linux%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>路由设置和route命令的使用</title>
      <link>http://wiseai.cn/post/2023.02.13-%E8%B7%AF%E7%94%B1%E8%AE%BE%E7%BD%AE%E5%92%8Croute%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 13 Feb 2023 14:44:41 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/2023.02.13-%E8%B7%AF%E7%94%B1%E8%AE%BE%E7%BD%AE%E5%92%8Croute%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>命令格式： route [-f] [-p] [Command [Destination] [mask Netmask] [Gateway] [metric Metric]] [if Interface]] 命令功能： Route命令是用于操作基于内核ip路由表，它的主要作用是创建一个静态路由让指定一个主机或者一个网络通过一个网络接口，如eth0。当使用&amp;quot;add&amp;quot;或者&amp;quot;del&amp;quot;参数时，路由表被修改，如果没有参数，则显示路由表当前的内容。
命令参数：
-c 显示更多信息
-n 不解析名字
-v 显示详细的处理信息
-F 显示发送信息
-C 显示路由缓存
-f 清除所有网关入口的路由表。
-p 与 add 命令一起使用时使路由具有永久性。
add:添加一条新路由。
del:删除一条路由。
-net:目标地址是一个网络。
-host:目标地址是一个主机。
netmask:当添加一个网络路由时，需要使用网络掩码。
gw:路由数据包通过网关。注意，你指定的网关必须能够达到。
metric：设置路由跳数。
Command 指定您想运行的命令 (Add/Change/Delete/Print)。
Destination 指定该路由的网络目标。
mask Netmask 指定与网络目标相关的网络掩码（也被称作子网掩码）。
Gateway 指定网络目标定义的地址集和子网掩码可以到达的前进或下一跃点 IP 地址。
metric Metric 为路由指定一个整数成本值标（从 1 至 9999），当在路由表(与转发的数据包目标地址最匹配)的多个路由中进行选择时可以使用。
if Interface 为可以访问目标的接口指定接口索引。若要获得一个接口列表和它们相应的接口索引，使用 route print 命令的显示功能。可以使用十进制或十六进制值进行接口索引。
oute 命令的输出项说明:
Destination	目标网段或者主机 Gateway	网关地址，”*” 表示目标是本主机所属的网络，不需要路由 Genmask	网络掩码 Flags	标记。一些可能的标记如下： U — 路由是活动的 H — 目标是一个主机 G — 路由指向网关 R — 恢复动态路由产生的表项 D — 由路由的后台程序动态地安装 M — 由路由的后台程序修改 !</description>
    </item>
    
    <item>
      <title>Linux网卡设置</title>
      <link>http://wiseai.cn/post/2023.02.13-linux%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Mon, 13 Feb 2023 10:08:41 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/2023.02.13-linux%E7%BD%91%E5%8D%A1%E8%AE%BE%E7%BD%AE/</guid>
      <description>这里主要以树莓派的网卡设置为例，其它的linux发行版都差不多。
树莓派的raspi-config工具，是设置网络最方便的，下面主要说说手动设置的方法。
有线网卡
树莓派建议一个网口设置两个ip，这样，在固定ip的网络也可以连接，在dhpc的网络也可以连接。 auto eth0 iface eth0 inet static address 192.168.1.2 netmask 255.255.255.0 gateway 192.168.1.1 auto eth0:1 iface eth0:1 inet dhcp 这个是我的配置文件，位置在/etc/network/interfaces.d/eth0，文件不存在建立一个就好.
无线网卡
iwconfig 命令查看当前无线网卡状态
iwlist wlan0 scan 扫描周围无线网卡 新建/etc/network/interfaces.d/wlan0
auto wlan0 #或者allow-hotplug iface wlan0 inet dhcp wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf 生成配置文件：
# wpa_passphrase &amp;lt;yourAPssid&amp;gt; &amp;lt;yourpassphrase&amp;gt; &amp;gt;&amp;gt; /etc/wpa_supplicant/wpa_supplicant.conf 注意:&amp;quot;&amp;raquo;&amp;ldquo;是追加的意思，不要用&amp;rdquo;&amp;gt;&amp;quot;。
修改/etc/wpa_supplicant/wpa_supplicant.conf
network={ ssid=&amp;#34;&amp;lt;yourAPssid&amp;gt;&amp;#34; #psk=&amp;#34;&amp;lt;yourpassphrase&amp;gt;&amp;#34; psk=f7caf61012a3fe193ce790164b88c3648bd5fc16cd0f007c84cf154d728b4f2d } //这部分是命令生成的，psk是加密后的密码，修改后为： network={ ssid=&amp;#34;&amp;lt;yourAPssid&amp;gt;&amp;#34; proto=RSN key_mgmt=WPA-PSK pairwise=CCMP TKIP group=CCMP TKIP scan_ssid=1 disabled=1 #psk=&amp;#34;&amp;lt;yourpassphrase&amp;gt;&amp;#34; psk=f7caf61012a3fe193ce790164b88c3648bd5fc16cd0f007c84cf154d728b4f2d priority=1 } ssid：无线网络名称。 proto=RSN #Robust Security Network:强健安全网络，表示这个网络配置比WEP模式要更安全。 key_mgmt=WPA-PSK #请无论你是使用WPA-PSK，WPA2-PSK，都请在这里输入 WPA-PSK。这在wpa_supplicant看来WPA-PSK，WPA2-PSK都是 WPA-PSK。企业路由是WPA-EAP。如果没有密码，需要配置为NONE pairwise=CCMP TKIP #关键点，wpa_supplicant目前还不认AES的加密标准 group=CCMP TKIP #同上 scan_ssid:如果ssid隐藏，这个参数必须配置 disabled=1:禁用这个网络 psk=7b271c9a7c8a6ac07d12403a1f0792d7d92b5957ff8dfd56481ced43ec6a6515 #wpa_supplicant算出来的加密密码。 priority:优先连接那个wifi 添加网关的方法： //添加默认网关 # route add default gw IP 具体看route命令的使用</description>
    </item>
    
    <item>
      <title>PPTist在线演示文稿ppt</title>
      <link>http://wiseai.cn/post/2023.02.07-pptist%E5%9C%A8%E7%BA%BF%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BFppt/</link>
      <pubDate>Tue, 07 Feb 2023 10:06:31 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/2023.02.07-pptist%E5%9C%A8%E7%BA%BF%E6%BC%94%E7%A4%BA%E6%96%87%E7%A8%BFppt/</guid>
      <description>简介： 一个基于 Vue3.x + TypeScript 的在线演示文稿（幻灯片）应用，还原了大部分 Office PowerPoint 常用功能，支持 文字、图片、形状、线条、图表、表格、视频、音频、公式 几种最常用的元素类型，每一种元素都拥有高度可编辑能力，同时支持丰富的快捷键和右键菜单，支持导出本地 PPTX 文件，支持移动端基础编辑和预览，支持 PWA。
源码位置： github: https://github.com/pipipi-pikachu/PPTist.git
gitee: https://gitee.com/mirrors/PPTist.git
编译代码： 首先，需要搭建node.js环境
# git clone https://github.com/pipipi-pikachu/PPTist.git # npm install # npm run serve # npm run build //目录下会生成dist目录，这个就是可以发布的代码 注意：编译最新版本出现一个问题,“opensslErrorStack: [ ’error:03000086:digital envelope routines::initialization error’ ]&amp;quot;,出现这个错误是因为 node.js V17以上的版本中最近发布的OpenSSL3.0, 而OpenSSL3.0对允许算法和密钥大小增加了严格的限制，解决办法是:
# export NODE_OPTIONS=--openssl-legacy-provider</description>
    </item>
    
    <item>
      <title>Linux性能分析工具</title>
      <link>http://wiseai.cn/post/2023.01.30-linux%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 30 Jan 2023 18:04:19 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/2023.01.30-linux%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</guid>
      <description>vmstat&amp;ndash;虚拟内存统计 vmstat（VirtualMeomoryStatistics，虚拟内存统计）是 Linux 中监控内存的常用工具,可对操作系统的虚拟内存、进程、CPU 等的整体情况进行监视。vmstat 的常规用法：vmstat interval times 即每隔 interval 秒采样一次，共采样 times 次，如果省略 times，则一直采集数据，直到用户手动停止为止。
# vmstat 5 procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu----- r b swpd free buff cache si so bi bo in cs us sy id wa st 2 0 1526016 161916 48016 1694424 2 14 257 73 34 90 13 7 80 0 0 4 0 1526016 159584 48044 1694552 0 0 1 108 14151 28405 17 13 70 0 0 1 0 1526016 158608 48064 1694568 0 0 1 426 14277 27948 19 12 69 0 0 4 0 1526016 157600 48072 1694576 3 0 3 19 13744 27644 18 12 69 0 0 可以使用 ctrl+c 停止 vmstat 采集数据。</description>
    </item>
    
    <item>
      <title>Fsearch的安装及使用</title>
      <link>http://wiseai.cn/post/2023.01.27-fsearch%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 27 Jan 2023 17:40:07 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/2023.01.27-fsearch%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
      <description>简介： fsearch是一个全平台的，开源的，文件及文件夹搜索软件，它基于GTK3，用C语言编写，可以说是“Everything”的开源免费版本，速度相当快，体会一下就知道了。
今天主要说一下编译安装的方法，为什么呢？X86平台的直接去官网下载就可以了，但是arm处理器的怎么办？所以记录一下编译安装的方法，编译的版本为0.2.2,如有更新的版本，如果出现问题请查看官网编译安装说明。
编译安装的方法 安装依赖软件： # sudo apt install git build-essential meson itstool libtool pkg-config intltool libicu-dev libpcre2-dev libglib2.0-dev libgtk-3-dev libxml2-utils appstream-util 拉取源文件 # git clone https://github.com/cboxdoerfer/fsearch.git # git checkout 0.2.2 //选择编译版本 # cd fsearch 开始编译 meson builddir ninja -C builddir install 完成！</description>
    </item>
    
    <item>
      <title>systemd延时启动服务</title>
      <link>http://wiseai.cn/post/2022.12.22-systemd%E5%BB%B6%E6%97%B6%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Thu, 22 Dec 2022 09:54:24 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/2022.12.22-systemd%E5%BB%B6%E6%97%B6%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1/</guid>
      <description>原因：我的docker容器链接了硬盘上的一个文件夹，但是docker服务在硬盘没有挂载前就启动，容器在目录下自动生成了链接文件夹，导致系统挂载的硬盘名改变，延时启动可以解决这个问题，方法如下：
编辑/lib/systemd/system/docker.service文件
[Service] #在这里添加下面两行，就可以延时5分钟启动服务 TimeoutStartSec=infinity ExecStartPre=/bin/sleep 300 参考：使用systemd配置一个服务再开机后5分钟再启动
感谢作者！ 原文如下：
原因：我们的linux服务器上可能会有许多服务要启动，如果再开机后要立即启动的服务过多，很可能会造成开机速度过慢，这时可以对不同的服务进行时间安排，有序的延迟一部分服务的启动。
这里以透传软件 frpc.service 为例。
一、单配置文件的实现模式 也就是直接对frpc.service进行配置
[Unit] Description=Frp Client Service After=network.target [Service] Type=simple User=nobody # 下面两行设定了再开机后300秒再启动服务 TimeoutStartSec=infinity ExecStartPre=/bin/sleep 300 Restart=on-failure RestartSec=5s ExecStart=/usr/bin/frpc -c /etc/frp/frpc.ini ExecReload=/usr/bin/frpc reload -c /etc/frp/frpc.ini LimitNOFILE=1048576 [Install] WantedBy=multi-user.target 二、利用额外的timer服务实现 这样做的好处是，可以额外增加一项设定，配置服务再持续运行24、48小时后重启一次，用于不关机，但需要对某个服务进行定期重启的情况。
对 frpc.service 进行修改 [Unit] Description=Frp Client Service [Service] Type=simple User=nobody Restart=on-failure RestartSec=5s ExecStart=/usr/bin/frpc -c /etc/frp/frpc.ini ExecReload=/usr/bin/frpc reload -c /etc/frp/frpc.ini LimitNOFILE=1048576 注意，这里的frpc.service 中没有 [Install] 这一部分的设置！！！ 新建一个用于启动frpc.service的timer vim /lib/systemd/system/frpc.timer [Unit] Description=timer for frpc service [Timer] OnBootSec=5min OnUnitActiveSec=24h [Install] WantedBy=timers.</description>
    </item>
    
    <item>
      <title>文件同步Syncthing的使用</title>
      <link>http://wiseai.cn/post/2022.12.21-syncthing%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 21 Dec 2022 09:46:22 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/2022.12.21-syncthing%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>1.下载及编译 源码下载地址：https://github.com/syncthing/syncthing
gitee镜像：https://gitee.com/mirrors/syncthing?_from=gitee_search
# go build build.go
在bin目录下会编译生成所有程序，我们主要使用syncthing这个程序
2.使用 直接运行程序
# ./syncthing
首次运行会生成配置文件，位置在~/.confing/syncthing/，配置文件主要是config.xml
同时会打开127.0.0.1：8384网站，用于配置软件。
修改config.xml中的127.0.0.1为0.0.0.0，就可以远程打开配置网站，但是不建议这么做，存在安全隐患，建议设置为固定IP，用于管理。
必须修改网站登陆密码，操作-&amp;gt;设置-&amp;gt;图形用户界面，设置用户名及密码。
操作-&amp;gt;设置-&amp;gt;连接，可设置NAT、全局发现、本地发现、中继等，在安全要求较高的情况下，建议全部不要选择。
添加文件夹，文件夹ID非常重要，共享时必须一致。
添加远程设备，设备ID在操作-&amp;gt;显示ID处查询，在不启用全局发现和本地发现的情况下，必须设置地址列表添加设备-&amp;gt;高级-&amp;gt;地址列表为tcp://ip地址:22000
设置共享，在文件夹和远程设备选项中都可以设置共享，共享文件夹可以双向同步，也可单向同步，文件夹类型只能在文件夹选项中设置。
加密，如果在共享时设置了密码，远程设备的文件夹必须为加密接收，否则会出现失去同步的问题。
解密，加密接收的文件夹可以通过
# syncthing decrypt (--to=&amp;lt;dir&amp;gt; | --verify-only) [--password=&amp;lt;pw&amp;gt;] [--folder-id=&amp;lt;id&amp;gt;] [--token-path=&amp;lt;file&amp;gt;] [--continue] [--verbose] [--version] [--help] &amp;lt;path&amp;gt;
进行解密。
主要参数有：	--to 解密位置，	--password 加密的密码，	最后的&amp;lt;path&amp;gt;是需要解密的目录
这样基本使用就没有问题了，其它功能遇到了再添加说明。</description>
    </item>
    
    <item>
      <title>Nging的使用</title>
      <link>http://wiseai.cn/post/2022.11.12-nging%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 12 Nov 2022 14:29:26 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/2022.11.12-nging%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>Nging是一个网站服务程序，可以代替Nginx或Apache来搭建Web开发测试环境，并附带了实用的周边工具，例如：计划任务、MySQL管理、Redis管理、FTP管理、SSH管理、服务器管理等。
这个软件项目不仅仅实现了一些网站服务工具，本身还是一个具有很好扩展性的通用网站后台管理系统，通过本项目，可以很轻松的构建一个全新的网站项目，省去从头构建项目的麻烦，减少重复性劳动。
下载地址：https://dl.webx.top/nging/latest/
使用可以看说明，非常简单，注意： 在添加服务的时候要用root权限，其它的操作可以参考systemctl命令，服务名称是Nging，N是大写。
git clone https://github.com/admpub/nging.git 这一步必须完整clone，否则会出现找不到文件的错误。
git checkout v4.2.4
checkout到版本号
将go/bin加入PATH # PATH=PATH:~/go/bin
进入tool目录下使用bash执行 # bash build-all-platform.sh linux_amd64
这是如果不加linux_amd64，则编译全平台的。
最后，如果觉得广告不好可以去掉，但是不建议这么做，毕竟作者开源就很不错了，如果你有强迫症，可以这样做，在template目录下，查找TrackerHTML，这个是自动查检更新的js，作者顺带着加了个广告，去掉就没有广告了，强烈建议不要去。
手头宽裕的可以支持下作者，支持作者更好开发软件！！！
使用80端口 可以使用源码编译，这个需要修改源代码，比较简单的是使用软件自带的网站管理功能。
添加个网站，监听80端口:80
选择代理转发Proxy
选择预置功能中的两个选项，websocket和transparent，用于支持基于浏览器的终端服务pty和xterm</description>
    </item>
    
    <item>
      <title>nohup及重定向</title>
      <link>http://wiseai.cn/post/nohup%E5%8F%8A%E9%87%8D%E5%AE%9A%E5%90%91/</link>
      <pubDate>Fri, 08 Jul 2022 16:30:38 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/nohup%E5%8F%8A%E9%87%8D%E5%AE%9A%E5%90%91/</guid>
      <description> 语法：nohup Command [ Arg … ] [　&amp;amp; ]
描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。要在后台运行 nohup 命令，添加 &amp;amp; 到命令的尾部。
操作系统中有三个常用的流：
0：标准输入流 stdin 1：标准输出流 stdout 2：标准错误流 stderr &amp;gt; info.txt实际是 1 &amp;gt; info.txt的省略用法；
&amp;lt; info.txt实际是 0 &amp;lt; info.txt的省略用法。
下面步入正题： &amp;gt;nohup ./text.sh &amp;gt;output 2&amp;gt;&amp;amp;1 &amp;amp; &amp;gt;su – wiseai -c ‘/usr/local/bin/jupyter notebook &amp;amp;&amp;gt; /dev/null &amp;amp;’ 解释：
带&amp;amp;的命令行，即使terminal（终端）关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上)； 2&amp;gt;&amp;amp;1和&amp;amp;&amp;gt;相同:意思是把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件output里面，所以结果是标准错误和标准输出都导入文件output里面了。 至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而stdout有。这就会导致 &amp;gt;output 2&amp;gt;output 文件output被两次打开，而stdout和stderr将会竞争覆盖，这肯定不是我门想要的。 /dev/null文件的作用，这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。 所以一般很大的stdou和stderr当你不关心的时候可以利用stdout和stderr定向到这里。 </description>
    </item>
    
    <item>
      <title>Debian的包管理工具apt</title>
      <link>http://wiseai.cn/post/debian%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 06 Jul 2022 16:52:16 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/debian%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
      <description>清除所有已删除包的残余配置文件：
#dpkg -l |grep ^rc|awk &#39;{print $2}&#39; |xargs dpkg -P
dpkg -l |grep &amp;quot;^rc&amp;quot;|awk &#39;{print $2}&#39; |xargs apt -y purge
说明:
dpkg -l
列出系统中安装的所有包的状态，ii开头的是正常安装的包，rc开头的则是删除但仍留下配置文件的包，其他状态则是有错误的状态，自己执行一次就明白了，输出结果的开头有说明的。 grep &amp;ldquo;^rc&amp;rdquo;
提取以 rc 开头的包，也就是被删除但仍残留配置文件的包的信息的行。 awk &amp;lsquo;{print $2}&amp;rsquo;
打印这些包的名字，他们位于 dpkg -l 输出结果的第二个字段，估计有很多人是通过这个命令认识到 awk 的，也有很多人只在这个命令行中才使用 awk，我就是其中之一。 xargs apt -y purge
把上述输出，也就是要清除配置文件的包的名字放在 apt -y purge 后面，purge命令会清除配置文件，而 -y 参数会自动对后面 apt 命令的提示回答是，这个开关通常是危险的，所以在一般情况下不要轻易使用，而在这里，如果你确定这些包的配置文件的清除是没有问题的的话，可以使用这个开关 </description>
    </item>
    
    <item>
      <title>Docker容器设置ssh连接</title>
      <link>http://wiseai.cn/post/docker%E5%AE%B9%E5%99%A8%E8%AE%BE%E7%BD%AEssh%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Wed, 06 Jul 2022 16:36:58 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/docker%E5%AE%B9%E5%99%A8%E8%AE%BE%E7%BD%AEssh%E8%BF%9E%E6%8E%A5/</guid>
      <description>这里以debian容器为例：
一、进入容器、更改更新源及安装openssh-server # docker exec -it debian /bin/bash # sed -i -e &#39;s/deb.debian.org/mirrors.aliyun.com/g&#39; \ -e &#39;s/security.debian.org/mirrors.aliyun.com/g&#39; \ /etc/apt/sources.list # apt install openssh-server 二、添加目录、修改配置文件 # mkdir -p /run/sshd 注：(这个地方看启动服务时的提示信息，运行sshd服务的命令只能使用绝对路径/usr/sbin/sshd -D)
下面修改/etc/ssh/sshd_config 先说下PermitRootLogin：prohibit-password 允许root登陆但不能使用密码登陆yes 允许root以任何方式登陆,我们这里只允许使用密钥无密码登陆： # sed -i &#39;s/#PermitRootLogin prohibit-password/PermitRootLogin prohibit-password/g&#39; /etc/ssh/sshd_config 下面修改/etc/pam.d/sshd # sed -i &#39;s/session .*required .*pam_loginuid.so/#session required pam_loginuid.so/g&#39; /etc/pam.d/sshd 注：这个是一个pam登陆控制，可以参考ftp服务器设置
三、添加ssh服务，使服务在容器打开时就启动： # sed -i &#39;$a /usr/sbin/sshd -D&#39; /etc/bash.bashrc centos容器中遇到的问题： 显示/etc/ssh/中缺少公钥和私钥：
$ ssh-keygen -t rsa -N &amp;#39;&amp;#39; -f /etc/ssh/ sh_host_rsa_key $ ssh-keygen -t ed25519 -N &amp;#39;&amp;#39; -f /etc/ssh/ssh_host_ed25519_key $ ssh-keygen -t ecdsa -N &amp;#39;&amp;#39; -f /etc/ssh/ssh_host_ecdsa_key </description>
    </item>
    
    <item>
      <title>profile、bashrc、bash_profile详解</title>
      <link>http://wiseai.cn/post/profilebashrcbash_profile%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 06 Jul 2022 16:20:56 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/profilebashrcbash_profile%E8%AF%A6%E8%A7%A3/</guid>
      <description>/etc/profile: 此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.并从/etc/profile.d目录的配置文件中搜集shell的设置.
英文描述为：
# /etc/profile # System wide environment and startup programs, for login setup # Functions and aliases [Go](http://lib.csdn.net/base/go &amp;#34;Go知识库&amp;#34;) in /etc/bashrc # It&amp;#39;s NOT a good idea to change this file unless you know what you # are doing. It&amp;#39;s much better to create a custom.sh shell script in # /etc/profile.d/ to make custom changes to your environment, as this # will prevent the need for merging in future updates.</description>
    </item>
    
    <item>
      <title>sed和awk命令</title>
      <link>http://wiseai.cn/post/sed%E5%92%8Cawk%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 16:03:36 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/sed%E5%92%8Cawk%E5%91%BD%E4%BB%A4/</guid>
      <description># sed [-nefr] [动作]
选项与参数：
-n ：使用安静(silent)模式。在一般sed 的用法中，所有来自STDIN 的资料一般都会被列出到屏幕上。 但如果加上-n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。 -e ：直接在指令列模式上进行sed 的动作编辑； -f ：直接将sed 的动作写在一个档案内， -f filename 则可以执行filename 内的sed 动作； -r ：sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法) -i ：直接修改读取的档案内容，而不是由屏幕输出。 动作说明： [n1[,n2]]function
n1, n2 ：不见得会存在，一般代表『选择进行动作的行数』，举例来说，如果我的动作 是需要在10 到20 行之间进行的，则『 10,20[动作行为] 』 function 有底下这些咚咚： a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～ c ：取代， c 的后面可以接字串，这些字串可以取代n1,n2 之间的行！ d ：删除，因为是删除啊，所以d后面通常不接任何咚咚； i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)； p ：列印，亦即将某个选择的资料印出。通常p 会与参数sed -n 一起运作～ s ：取代，可以直接进行取代的工作！通常这个s的动作可以搭配正规表示法！ 例如1,20s/old/new/g 例子：
sed &amp;#39;2,5d&amp;#39; 删除2-5行 sed &amp;#39;2a abc&amp;#39; 在第二行后添加abc sed &amp;#39;2,5c abc&amp;#39; 将2-5行替换为abc sed -n &amp;#39;2,5p&amp;#39; 打印2-5行 sed &amp;#39;s/word1/word2/g&amp;#39; 将word1替换为word2 sed -i 直接修改文档内容 # cat /etc/passwd | sed -e &#39;4d&#39; -e &#39;6c no six line&#39; &amp;gt; passwd.</description>
    </item>
    
    <item>
      <title>sftp命令</title>
      <link>http://wiseai.cn/post/sftp%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Jul 2022 15:57:22 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/sftp%E5%91%BD%E4%BB%A4/</guid>
      <description>常用方式 格式：sftp &amp;lt;host&amp;gt; 通过sftp连接&amp;lt;host&amp;gt;，端口为默认的22，用户为Linux当前登录用户。 格式：sftp -oPort=&amp;lt;port&amp;gt; &amp;lt;host&amp;gt; 通过sftp连接&amp;lt;host&amp;gt;，指定端口&amp;lt;port&amp;gt;，用户为Linux当前登录用户。 格式：sftp &amp;lt;user&amp;gt;@&amp;lt;host&amp;gt; 通过sftp连接&amp;lt;host&amp;gt;，端口为默认的22，指定用户&amp;lt;user&amp;gt;。 格式：sftp -oPort=&amp;lt;port&amp;gt; &amp;lt;user&amp;gt;@&amp;lt;host&amp;gt; 通过sftp连接&amp;lt;host&amp;gt;，端口为&amp;lt;port&amp;gt;，用户为&amp;lt;user&amp;gt;。 sftp连接成功之后常用操作命令如下：
help/? 打印帮助信息。 pwd 查看远程服务器当前目录； lpwd 查看本地系统的当前目录。 cd &amp;lt;dir&amp;gt; 将远程服务器的当前目录更改为&amp;lt;dir&amp;gt;； lcd &amp;lt;dir&amp;gt; 将本地系统的当前目录更改为&amp;lt;dir&amp;gt;。 ls 显示远程服务器上当前目录的文件名； ls -l 显示远程服务器上当前目录的文件详细列表； ls &amp;lt;pattern&amp;gt; 显示远程服务器上符合指定模式&amp;lt;pattern&amp;gt;的文件名； ls -l &amp;lt;pattern&amp;gt; 显示远程服务器上符合指定模式&amp;lt;pattern&amp;gt;的文件详细列表。 lls 显示本地系统上当前目录的文件名； lls的其他参数与ls命令的类似。 get &amp;lt;file&amp;gt; 下载指定文件&amp;lt;file&amp;gt;； -r参数操作目录 get &amp;lt;pattern&amp;gt; 下载符合指定模式&amp;lt;pattern&amp;gt;的文件。-r参数操作目录 put &amp;lt;file&amp;gt; 上传指定文件&amp;lt;file&amp;gt;；-r参数操作目录 put &amp;lt;pattern&amp;gt; 上传符合指定模式&amp;lt;pattern&amp;gt;的文件。-r参数操作目录 progress 切换是否显示文件传输进度。 mkdir &amp;lt;dir&amp;gt; 在远程服务器上创建目录； lmkdir &amp;lt;dir&amp;gt; 在本地系统上创建目录。 exit/quit/bye 退出sftp。 ! 启动一个本地shell。 ! &amp;lt;commandline&amp;gt; 执行本地命令行。 其他命令还有：chgrp, chmod, chown, ln, lumask, rename, rm, rmdir, symlink, version。</description>
    </item>
    
    <item>
      <title>ssh免密码登陆</title>
      <link>http://wiseai.cn/post/ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E9%99%86/</link>
      <pubDate>Wed, 06 Jul 2022 15:49:33 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E9%99%86/</guid>
      <description>在client生成公钥和私钥： ＃ ssh-keygen -t rsa 注:这个命令可以参考下git的使用，rsa也没有问题。
位置在~/.ssh/下，分别是id_rsa和id_rsa.pub
将client的公钥上传到server： ＃ ssh-copy-id -p &#39;端口&#39; &#39;用户名@IP或域名&#39; 这个时候client的公钥文件内容会追加写入到server的 .ssh/authorized_keys 文件中。
登陆免密了：
＃ ssh -p &#39;端口&#39; &#39;用户名@IP或域名&#39; 打完，收功。</description>
    </item>
    
    <item>
      <title>U盘启动盘制作</title>
      <link>http://wiseai.cn/post/u%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C/</link>
      <pubDate>Tue, 05 Jul 2022 10:08:37 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/u%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C/</guid>
      <description>一、Ventoy:制作可启动U盘的开源工具 github
gitee
优点 多平台、支持Iso镜像多
使用方法 在安装包解压后的目录下，打开终端执行 sudo sh VentoyWeb.sh
打开浏览器，直接访问 http://127.0.0.1:24680
提示：
执行第1步后会在终端上打印出对应的 http 地址。很多系统中都可以按下 Ctrl 键，同时鼠标点击链接即可。无需再手动打开浏览器。 VentoyWeb.sh 默认情况下监听 127.0.0.1 地址的 24680 端口。此时只能通过本机的浏览器进行访问。 你也可以像这样 sudo sh VentoyWeb.sh -H 192.168.0.100 -P 8080 指定IP地址和端口号。 此时你可以通过同网络内的另一台电脑上的浏览器来访问这个界面进行操作。这在有些情况下比较方便。 比如，你有一台机器里面安装了Linux的系统，但是并没有安装图形界面，只有命令行操作界面。此时你可以在命令行里面执行上述命令， 然后在另外一台有图形环境的电脑上（比如Windows）通过浏览器访问对应的页面进行操作。只要这两台电脑网络上是联通的即可。 二、rufus:只支持windows的U盘启动盘制作工具 github
使用方法 没有特别的，和其它windows程序一样，下一步，下一步就可以了。</description>
    </item>
    
    <item>
      <title>Linux中firefox支持flash</title>
      <link>http://wiseai.cn/post/linux%E4%B8%ADfirefox%E6%94%AF%E6%8C%81flash/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%ADfirefox%E6%94%AF%E6%8C%81flash/</guid>
      <description>这个有点旧了，参考下 进入adobe中下载flash
解压文件
cp ./libflashplayer.so /home/wiseai/.mozilla/plugins/
chmod 755 /home/wiseai/.mozilla/plugins/libflashplayer.so
搞定</description>
    </item>
    
    <item>
      <title>Linux远程连接软件</title>
      <link>http://wiseai.cn/post/linux%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%BD%AF%E4%BB%B6/</guid>
      <description>远程桌面客户端:Remmina Remote Desktop Client
安装：apt install remmina</description>
    </item>
    
    <item>
      <title>NetworkManager网络管理相关问题</title>
      <link>http://wiseai.cn/post/networkmanager%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/networkmanager%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
      <description>相关配置文件位置 /etc/dbus-1/system.d/NetworkManager.conf /etc/dbus-1/system.d/nm-avahi-autoipd.conf /etc/dbus-1/system.d/nm-dhcp-client.conf /etc/dbus-1/system.d/nm-dispatcher.conf /etc/dbus-1/system.d/nm-system-settings.conf /etc/rc.d/init.d/NetworkManager
/etc/dbus-1/system.d/nm-applet.conf
不使用Network Manager 管理某些网络设备 默认情况下，NetworkManager 管理除 lo（环回）设备以外的所有网络设备，因为一些情况需要将设备设置为 unmanaged，也就是不使用NetworkManager管理这些设备。 查看设备状态 # nmcli device status 在 /etc/NetworkManager/NetworkManager.conf 配置文件的[main] 层级下启用插件 keyfile。 [main] plugins=keyfile 这个一般都启用了。 - 创建 /etc/NetworkManager/conf.d/unmanaged-devices.conf 配置文件（这个文件名没有要求，自己容易识别就可以了），包含以下内容：
[keyfile] unmanaged-devices=interface-name:wlan* 以分号隔开； 可以使用通配符来匹配接口； interface-name:eth*,except:interface-name:eth0;表示：除了 eth0，其他以 eth 开头的接口全部 unmanaged； 可以通过 mac 地址来排除接口，mac:66:77:88:99:00:aa - 重启服务 # systemctl restart network-manager.service</description>
    </item>
    
    <item>
      <title>php5-fpm.sock failed</title>
      <link>http://wiseai.cn/post/php5-fpm.sock-failed/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/php5-fpm.sock-failed/</guid>
      <description>/etc/php5/fpm/pool.d/www.conf
里面找到这样一段代码：
listen = 127.0.0.1:9000
在这上面代码的下面添加一行：
listen = /var/run/php5-fpm.sock
保存后启动php5-fpm
/etc/init.d/php5-fpm restart
这时就可以正常访问了</description>
    </item>
    
    <item>
      <title>php截取中文字符串乱码问题</title>
      <link>http://wiseai.cn/post/php%E6%88%AA%E5%8F%96%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/php%E6%88%AA%E5%8F%96%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</guid>
      <description>php截取字符串有两个函数:
一个是substr()，这个用来截取全字母的字符串，截取UTF-8的汉字就会出错；
另一个是mb_substr()，这个用来截取汉字，但一定要注明编码方式：mb_substr(&amp;lsquo;我的祖国是中国&amp;rsquo;, 0, 4, &amp;lsquo;utf-8&amp;rsquo;);</description>
    </item>
    
    <item>
      <title>samba服务器配置和使用</title>
      <link>http://wiseai.cn/post/samba%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/samba%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>安装：
#dnf install samba
端口：
管理工作组：UDP137，138
共享数据：TCP139，445（不一定存在）
启动服务：
#systemctl start smb
#systemctl enable smb
配置文件（/etc/samba/smb.conf）:
1.先设定好服务器整体环境方面的参数
[global]
config file = /etc/samba/conf/smb.conf.%m
说明：config file可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件 不存在，则该项无效。这个参数很有用，可以使得samba配置更灵活，可以让一台samba服务器模拟多台不同配置的服务器。比如，你想让PC1（主机 名）这台电脑在访问Samba Server时使用它自己的配置文件，那么先在/etc/samba/host/下为PC1配置一个名为smb.conf.pc1的文件，然后在 smb.conf中加入：config file = /etc/samba/conf/smb.conf.%m。这样当PC1请求连接Samba Server时，smb.conf.%m就被替换成smb.conf.pc1。这样，对于PC1来说，它所使用的Samba服务就是由 smb.conf.pc1定义的，而其他机器访问Samba Server则还是应用smb.conf。
#用户组 workgroup = mygroup #欢迎信息 server string = Samba Server Version %v #加密 security = user #使用TDB 数据库格式 passdb backend = tdbsam #不加载打印机 load printers = no #共享名 [homes] #说明 comment = Home Directories #除了使用者自己外,不可被其他人浏览 browseable = no #挂载后可擦写此分享 writable = yes #建立档案的权限为 664 create mode = 0664 #建立目录的权限为 775 directory mode = 0775 #指定允许访问该共享资源的用户&amp;amp;&amp;amp;多个用户或者组中间用逗号隔开，如果要加入一个组就用&amp;#34;@组名&amp;#34;表示,%s表示代替前一个[]里的内容 valid users = %S valid users = MYDOMAIN\%S [share] comment = Public Stuff #实际的 Linux 上面的目录位置 path = /home/samba #用来指定该共享的管理员（对该共享具有完全控制权限） admin users = admin #指定允许访问该共享资源的用户或者组 valid users = share,@share #指定不允许访问该共享资源的用户 invalid users = guest #除了使用者自己外,不可被其他人浏览 browseable = no #指定可以在该共享下写入文件的用户 write list = share,@share #指定该共享是否允许guest账户访问 public = no #指定该共享路径是否可写 writable = yes #可以在该共享下写入文件的用户和组 write list = share,@share 用 testparm 查阅 smb.</description>
    </item>
    
    <item>
      <title>ssh加密算法的启用禁用方法</title>
      <link>http://wiseai.cn/post/ssh%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%9A%84%E5%90%AF%E7%94%A8%E7%A6%81%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/ssh%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%9A%84%E5%90%AF%E7%94%A8%E7%A6%81%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>“手机ES文件浏览器”不能连接sftp的问题解决方法 首先，说说为什么学习这个东西，在使用“手机ES文件浏览器”这个软件的时候，出现了不能连接的情况，在网上查询后发现是KexAlgorithms 密钥交换算法的问题，在/etc/ssh/sshd_config后添加: KexAlgorithms +diffie-hellman-group14-sha1 后问题解决。 出现no matching host key type found.Their offer: ssh-rsa,ssh-dss这个问题时,在/etc/ssh/sshd_config后添加： HostKeyAlgorithms ssh-rsa 配置位置：/etc/ssh/sshd_config Ciphers Ciphers 指定 ssh 使用的加密算法。多个加密算法之间使用逗号分隔。当 Ciphers 的值以 + 字符开始时，指定的加密算法将附加到默认集合，不影响默认集合中的其它算法。当 Ciphers 的值以 ‘-’ 字符开始时，指定的加密算法将会从默认集合中移除，不影响默认集合中的其它项目。 比如，在 sshd_config 文件的最后添加如下行： Ciphers +3des-cbc,aes128-cbc 这样就添加了两个加密算法。 Ciphers -3des-cbc,aes128-cbc 这样就删除了两个加密算法。
MACs MACs 选项指定可用的 MAC（消息认证代码）算法，用于数据完整性保护。配置方法与 Ciphers 一致。
KexAlgorithms KexAlgorithms 选项指定可用的密钥交换算法。配置方法与 Ciphers 一致。
PubkeyAcceptedKeyTypes PubkeyAcceptedKeyTypes 指定公钥认证允许的密钥类型。配置方法与 Ciphers 一致。
查看 ssh 支持的不同类别的加密算法 Ciphers: ssh -Q cipher MACs: ssh -Q mac KexAlgorithms: ssh -Q kex PubkeyAcceptedKeyTypes: ssh -Q key</description>
    </item>
    
    <item>
      <title>使用OpenSSL生成证书</title>
      <link>http://wiseai.cn/post/%E4%BD%BF%E7%94%A8openssl%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E4%BD%BF%E7%94%A8openssl%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6/</guid>
      <description>openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes -out cert.pem -keyout key.pem
这个命令就可以生成了,下面的是网上的,可以参考.
下载安装OpenSSL，进入/bin/下面，执行命令（把ssl目录下的openssl.cnf 拷贝到bin目录下）
1.首先要生成服务器端的私钥(key文件):
openssl genrsa -des3 -out server.key 1024 [root@airwaySSL openssl]# cd ssl/ [root@airwaySSL ssl]# pwd /home/openssl/ssl [root@airwaySSL ssl]# ls certs man misc openssl.cnf private server.csr server.key 运行时会提示输入密码,此密码用于加密key文件(参数des3便是指加密算法,当然也可以选用其他你认为安全的算法.),以后每当需读取此文件(通过openssl提供的命令或API)都需输入口令.如果觉得不方便,也可以去除这个口令,但一定要采取其他的保护措施!
去除key文件口令的命令:
openssl rsa -in server.key -out server.key 2.openssl req -new -key server.key -out server.csr -config openssl.cnf
[root@airwaySSL bin]# openssl req -new -key server.key -out server.csr -config openssl.cnf Enter pass phrase for server.</description>
    </item>
    
    <item>
      <title>更改ubuntu源</title>
      <link>http://wiseai.cn/post/%E6%9B%B4%E6%94%B9ubuntu%E6%BA%90/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E6%9B%B4%E6%94%B9ubuntu%E6%BA%90/</guid>
      <description>sed -i &#39;s#http://archive.ubuntu.com/ubuntu/#mirror://mirrors.ubuntu.com/mirrors.txt#&#39; /etc/apt/sources.list</description>
    </item>
    
    <item>
      <title>整站或网页下载软件httrack</title>
      <link>http://wiseai.cn/post/%E6%95%B4%E7%AB%99%E6%88%96%E7%BD%91%E9%A1%B5%E4%B8%8B%E8%BD%BD%E8%BD%AF%E4%BB%B6httrack/</link>
      <pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E6%95%B4%E7%AB%99%E6%88%96%E7%BD%91%E9%A1%B5%E4%B8%8B%E8%BD%BD%E8%BD%AF%E4%BB%B6httrack/</guid>
      <description>首先安装httrack:
＃dnf install httrack
使用说明：
＃httrack
输入项目名
输入保存目录
输入需要保存的网站URL或者网页URL
其它的默认就好</description>
    </item>
    
    <item>
      <title>搭建apt本地源</title>
      <link>http://wiseai.cn/post/%E6%90%AD%E5%BB%BAapt%E6%9C%AC%E5%9C%B0%E6%BA%90/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E6%90%AD%E5%BB%BAapt%E6%9C%AC%E5%9C%B0%E6%BA%90/</guid>
      <description>一、安装apt-mirror命令 # apt install apt-mirror
二、 修改apt-mirror配置文件 首先， 确定自己系统的版本 ，root权限执行：
# lsb_release -a
我的系统是ubuntu的bionic，从阿里云下载源，一般有5个目录，前三个常用，后两个是预发布软件，不常用，我一般用前三个
deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse 然后，编辑apt-mirror的配置文件/etc/apt/mirror.list
### 配置镜像下载目录 set base_path /var/spool/apt-mirror # 架构配置，i386/amd64，默认的话会下载跟本机相同的架构的源 set defaultarch amd64 # 下载线程数 set nthreads 20 set _tilde 0 # 阿里云的源（这里没有添加deb-src的源码源） deb http://mirrors.</description>
    </item>
    
    <item>
      <title>yum时出现error的解决办法</title>
      <link>http://wiseai.cn/post/yum%E6%97%B6%E5%87%BA%E7%8E%B0error%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/yum%E6%97%B6%E5%87%BA%E7%8E%B0error%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>错误内容： Unable to detect release version (use ‘–releasever’ to specify release version) error: rpmdb: damaged header #173 retrieved — skipping. error: rpmdbNextIterator: skipping h# 173 blob size(55540): BAD, 8 + 16 * il(78) + dl(54284) 解决办法： 首先：删除/var/lib/下的rpm文件夹
之后：执行命令rpm --rebuilddb
最后：安装一个提供版本号的包yum --releasever 8 install centos-release
其中--releasever 8是指定版本号，我的是centos8，所以这么写。</description>
    </item>
    
    <item>
      <title>MarkDown在线编辑器</title>
      <link>http://wiseai.cn/post/markdown%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/markdown%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/</guid>
      <description>使用开源项目editor.md我的gitee仓库下也有。
安装 # npm install editor.md
使用 &amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;editor.md/css/editormd.min.css&amp;#34; /&amp;gt;&amp;lt;title&amp;gt;Markdown 编辑在线器&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;div id=&amp;#34;text&amp;#34; style=&amp;#34;width: 100%;&amp;#34;&amp;gt;&amp;lt;div id=&amp;#34;editor&amp;#34; style=&amp;#34;height: 100%;&amp;#34;&amp;gt;&amp;lt;!-- Tips: Editor.md can auto append a `&amp;lt;textarea&amp;gt;` tag --&amp;gt;&amp;lt;textarea style=&amp;#34;display:none;&amp;#34; placeholder=&amp;#34;欢迎使用&amp;#34;&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script src=&amp;#34;jquery.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;#34;editor.md/editormd.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;// 设置div与窗口高度一致window.onload = function () {var h = window.innerHeight - 25 ; //获取当前窗口的高度; document.getElementById(&amp;#34;text&amp;#34;).style.height = h + &amp;#34;px&amp;#34;; //设置div的高度}// 设置textarea参数$(function() {var h = window.</description>
    </item>
    
    <item>
      <title>Nginx出现问题的解决办法</title>
      <link>http://wiseai.cn/post/nginx%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/nginx%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>最近遇到Permission denied这个问题，经过排查，是目录权限的问题，server的root目录必须要有写权限才行，只有读权限还是会出现Permission denied的问题，并且要给nginx的执行用户，比如默认的www-data用户。 待续</description>
    </item>
    
    <item>
      <title>sublime使用</title>
      <link>http://wiseai.cn/post/sublime%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/sublime%E4%BD%BF%E7%94%A8/</guid>
      <description>安装Package Control Tools-&amp;gt;Install Package Control 选项，即可调出 Package Control “Tools-&amp;gt;Command Palette&amp;hellip;”选项，快捷键Ctrl+Shift +P 输入 ipc ,点击 Install Package Control，即可调出 Package Control 设置中文 Preferences-&amp;gt;Package Control，快捷键Ctrl+Shift +P 选项弹出命令行输入框，输入ip，点击“install Package” 弹出命令行输入框，输入clz，点击“ChineseLocalizations” “帮助-&amp;gt;Language ”切换语言。 </description>
    </item>
    
    <item>
      <title>systemd的服务管理程序systemctl</title>
      <link>http://wiseai.cn/post/systemd%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8Fsystemctl/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/systemd%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8Fsystemctl/</guid>
      <description>systemctl融合service和chkconfig的功能于一体,可以使用它永久性或只在当前会话中启用/禁用服务。
一、启动/关闭、启用/禁用服务 运行一个服务：
#systemctl start firewalld
关闭一个服务：
#systemctl stop firewalld
重启一个服务:
#systemctl restart firewalld
显示一个服务（无论运行与否）的状态:
#systemctl status firewalld
在开机时启用一个服务：
#systemctl enable firewalld
在开机时禁用一个服务:
#systemctl disable firewalld
检查一个服务是否是开机启用：
#systemctl is-enabled firewalld
二、改变运行级别 切换到运行级别3或者5：
#systemctl isolate multi-user.target
#systemctl isolate graphical.target
改变默认运行级别3或者5：
#ln -sf /lib/systemd/system/multi-user.target /etc/systemd/system/default.target或#systemctl set-default multi-user.target
#ln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target或#systemctl set-default graphical.target
查看当下运行级别:
#systemctl list-units --type=target
三、改变默认 getty 数目 添加一个新的 getty ：
#ln -sf /lib/systemd/system/getty@.service /etc/systemd/system/getty.target.wants/getty@tty9.service #systemctl daemon-reload #systemctl start getty@tty9.service` 删除一个 getty ：</description>
    </item>
    
    <item>
      <title>玩玩LFS-从源码构建Linux系统</title>
      <link>http://wiseai.cn/post/%E7%8E%A9%E7%8E%A9lfs-%E4%BB%8E%E6%BA%90%E7%A0%81%E6%9E%84%E5%BB%BAlinux%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/%E7%8E%A9%E7%8E%A9lfs-%E4%BB%8E%E6%BA%90%E7%A0%81%E6%9E%84%E5%BB%BAlinux%E7%B3%BB%E7%BB%9F/</guid>
      <description>官方网站：http://www.linuxfromscratch.org/
LFS Book 翻译项目:https://github.com/LCTT/LFS-BOOK
Linux From Scratch （简体中文版） Version 8.3-systemd
LFS：Linux From Scratch是主要书籍，是从中衍生所有其他项目的基础。
BLFS：Beyond Linux From Scratch可帮助您将已完成的LFS安装扩展到更加个性化和可用的系统。
ALFS：Automated Linux From Scratch提供了自动化和管理LFS和BLFS构建的工具。</description>
    </item>
    
    <item>
      <title>Linux下合并文件</title>
      <link>http://wiseai.cn/post/linux%E4%B8%8B%E5%90%88%E5%B9%B6%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%8B%E5%90%88%E5%B9%B6%E6%96%87%E4%BB%B6/</guid>
      <description>#!/bin/bashfor ((i=0; i&amp;lt;700; i++))do cat $i.ts &amp;gt;&amp;gt; all.tsdone 某视频APP下载位置：手机存储/Android/data/com.tencent.qqlive/files/videos_***/
在这个目录下找下载的视频文件(以.hls结束的），找找就好了。</description>
    </item>
    
    <item>
      <title>Linux中修改limits值</title>
      <link>http://wiseai.cn/post/linux%E4%B8%AD%E4%BF%AE%E6%94%B9limits%E5%80%BC/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%AD%E4%BF%AE%E6%94%B9limits%E5%80%BC/</guid>
      <description>在/etc/security/limits.conf 最后增加:
* soft nofile 65535
* hard nofile 65535
修改ulimit值</description>
    </item>
    
    <item>
      <title>Linux中的搜索</title>
      <link>http://wiseai.cn/post/linux%E4%B8%AD%E7%9A%84%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%AD%E7%9A%84%E6%90%9C%E7%B4%A2/</guid>
      <description>一、whereis
二、which
三、locate
安装：mlocate
之后更新数据库：updatedb
四、find
五、catfish
一款Linux桌面图形软件，可以在桌面图形化的搜索文件。</description>
    </item>
    
    <item>
      <title>Linux中缺少运行库的解决办法</title>
      <link>http://wiseai.cn/post/linux%E4%B8%AD%E7%BC%BA%E5%B0%91%E8%BF%90%E8%A1%8C%E5%BA%93%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E4%B8%AD%E7%BC%BA%E5%B0%91%E8%BF%90%E8%A1%8C%E5%BA%93%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>编辑 vi /etc/ld.so.conf root权限执行 /sbin/ldconfig -v命令 这样 ldd 才能找到这个库
/etc/ld.so.conf:
这个文件记录了编译时使用的动态链接库的路径。 默认情况下，编译器只会使用/lib和/usr/lib这两个目录下的库文件 如果你安装了某些库，没有指定 –prefix=/usr 这样lib库就装到了/usr/local下，而又没有在/etc/ld.so.conf中添加/usr/local/lib，就会报错了 ldconfig是个什么东东吧 ：
它是一个程序，通常它位于/sbin下，是root用户使用的东东。具体作用及用法可以man ldconfig查到 简单的说，它的作用就是将/etc/ld.so.conf列出的路径下的库文件 缓存到/etc/ld.so.cache 以供使用 因此当安装完一些库文件，(例如刚安装好glib)，或者修改ld.so.conf增加新的库路径后，需要运行一下/sbin/ldconfig 使所有的库文件都被缓存到ld.so.cache中，如果没做，即使库文件明明就在/usr/lib下的，也是不会被使用的，结果 编译过程中抱错，缺少xxx库。 以上尝试后发现还是不行，添加 /usr/lib/x86_64-linux-gnu 有许多QT库文件</description>
    </item>
    
    <item>
      <title>Linux屏录软件</title>
      <link>http://wiseai.cn/post/linux%E5%B1%8F%E5%BD%95%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E5%B1%8F%E5%BD%95%E8%BD%AF%E4%BB%B6/</guid>
      <description>一、SimpleScreenRecorder 可以记录其他的应用程序和你的屏幕上运行的游戏。这是一个简单但功能强大，功能丰富的屏幕记录软件，包括一个易于使用的界面。 只支持Linux系统，包含在rpmfusion中。
# yum install simplescreenrecorder
# apt install simplescreenrecorder
其它安装方式：https://www.maartenbaert.be/simplescreenrecorder/
它的一些显著特点包括:
基于QT的简单GUI 可以记录整个屏幕或它的一部分	从OpenGL的应用程序直接记录 良好的视频和音频同步 有助于减少慢速机的视频帧速率 支持暂停和恢复功能 显示了了在记录过程期间的统计 支持录制过程中预览 默认设置已经很好，不需要进行过多设置 二、 OBS (Open Broadcaster Software) OBS 是一个免费、开源和跨平台的视频记录和流媒体应用程序,它可以工作在Linux、Windows和Mac OS X。 Windows需要从官网下载（https://obsproject.com/），Linux系统包含在rpmfusion中。
＃ yum install obs-studio
# apt install ffmpeg
# add-apt-repository ppa:obsproject/obs-studio
# apt update
# apt install obs-studio
它有几个强大的功能和显著的功能包括:
支持使用H264和AAC编码 支持英特尔QSV和NVENC 支持无限数量的场景和输入源 输出文件使用MP4 或FLV 格式 允许在记录会话中访问网络摄像头，采集卡等 高度可扩展的插件,开发人员可以使用api编写自己的插件 </description>
    </item>
    
    <item>
      <title>docker学习笔记</title>
      <link>http://wiseai.cn/post/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>现在docker分企业版和社区版，如果自己用的话，还是社区版吧！！！
安装： centos7：
1.卸载旧版本
$ yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-selinux \ docker-engine-selinux \ docker-engine 2.安装依赖包：
$ yum install -y yum-utils device-mapper-persistent-data lvm2
3.安装docker官方库：
$ yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
4.安装最新稳定版本docker：
$ yum install docker-ce
如果提示接受GPG密钥，请验证指纹是否匹配060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35，如果匹配 ，则接受它。
ubuntu:
$ sudo apt-get update $ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common $ curl -fsSL https://download.</description>
    </item>
    
    <item>
      <title>efi和grub2相关配置文件及命令</title>
      <link>http://wiseai.cn/post/efi%E5%92%8Cgrub2%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/efi%E5%92%8Cgrub2%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E5%91%BD%E4%BB%A4/</guid>
      <description>一、配置文件目录 /etc/grub2/目录下 /etc/default/grub
二、更新引导项目 根据配置文件目录下的顺序更新启动项，命令：
# grub2-mkconfig -o /boot/grub2/grub.cfg
-o 选项为输出到那个文件
efi下的/boot/efi/EFI/centos/grub.cfg文件一般调用/boot/grub2/grub.cfg这个文件
类debian发行版，一般用这个命令： # update-grub2
三、更换默认启动项 命令：
# grub2-set-default 2
一般从0开始
四、安装 # grub-install --efi-directory=/boot/efi/ --boot-directory=/boot/ --removable /dev/sda 几个需要说明的地方：
--efi-directory=/boot/efi/这个位置的问题，如果efi分区是单独挂载的，就直接写这个目录就可以了，不用加efi，它会在这个目录下建立EFI的目录，写入相关文件。 --boot-directory=/boot/这个不用加grub2，它会自己生成grub2目录，写入相关文件 --removable如果是移动设备，一定要加这个选项
五、常用命令 启动常用的grub命令 root (hd0,2) #设置某块分区为根目录kernel /vmlinuz #加载linux kernelinitrd /initrd.gz #加载驱动，或者虚拟rootfsboot #启动加载的kernel 查找文件 find --set-root --ignore-floppies --ignore-cd /usr/bin/cp #查找/usr/bin/cp文件，并将分区设为根目录，忽略软盘和cd 加载iso root (hdx,x) #设置根目录map --mem /xx.iso (0xff) #映射iso文件到模拟cdrom 0xffmap --hook #映射钩子chainloader (0xff) #链接到映射的CDROMboot #启动 grub命名规则，(hd32)为第一仿真cd/dvd设备，等同于0xa0，(hd33)为二仿真cd/dvd设备，0xff为最后一个。grub中将0xa0以上都认做cdrom。 map --mem 用于仿真不连续的存放的iso文件，不加则必须连续存放，碎片整理后再存放iso一般才会连续。 另外grub不支持大的iso，如果iso不支持则提示:inviladorupsupported executableformat。</description>
    </item>
    
    <item>
      <title>filebrowser的安装和使用</title>
      <link>http://wiseai.cn/post/filebrowser%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/filebrowser%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>编译安装 可以自己编译，必须安装golang v1.16以上和nodejs，最好是最新版本，否则会出现一些问题。
编译最新版本出现一个问题,&amp;ldquo;opensslErrorStack: [ &amp;rsquo;error:03000086:digital envelope routines::initialization error&amp;rsquo; ]&amp;quot;,出现这个错误是因为 node.js V17以上的版本中最近发布的OpenSSL3.0, 而OpenSSL3.0对允许算法和密钥大小增加了严格的限制，解决办法是# export NODE_OPTIONS=--openssl-legacy-provider后再编译。
$ git clone https://github.com/filebrowser/filebrowser 注：如果有gitee的可以改，速度快，可以直接下载对应版本
$ make help 注：编译帮助
$ make build 注：开始编译，完成后在当前目录下filebrowser
使用简介： 直接输入命令： ./filebrowser 会在当前目录下生成数据库文件，并开启服务
关闭服务后，输入以下命令进行设置：
./filebrowser config cat查看配置文件，这个配置是写入数据库里的
./filebrowser config set --address 0.0.0.0打开所有端口
这里的config set --address可以从配置文件里看，想设置那个就把address换成那个
./filebrowser config set --port 80设置端口
./filebrowser config set --locale zh-cn设置语言
./filebrowser config set --log /your/path/filebrowser.log设置日志
./filebrowser config set --root /your/path/设置根目录
./filebrowser users add root password --perm.admin这个是添加用户，其中的root和password分别是用户名和密码</description>
    </item>
    
    <item>
      <title>FTP服务器架设（vsftpd）</title>
      <link>http://wiseai.cn/post/ftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9E%B6%E8%AE%BEvsftpd/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/ftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9E%B6%E8%AE%BEvsftpd/</guid>
      <description>一、安装vsftpd及相关组件： # apt install vsftpd db-util
注意：db-util如果不存在，那就找db5.3-util，所以用# apt list db*查找下再安装。
二、修改FTP相关帐户： vsftpd服务的宿主用户
vsftpd默认只能使用root用户运行。使用非root用户运行，需要在配置文件里设置run_as_launching_user=YES。 官方强烈不推荐使用这种方式启动，会带来安全问题，并且会导致无法使用chroot技术来限制文件访问。这一步现在可能不需要了，先放着。
# useradd vsftpd -s /sbin/nologin
vsftpd的虚拟宿主用户
# useradd ftp -d /var/ftp/ -s /sbin/nologin
# chown -R ftp:ftp /var/ftp/
vsftpd的虚拟用户并不是系统用户，也就是说这些FTP的用户在系统中是不存在的。他们的总体权限其实是集中寄托在一个在系统中的某一个用户身上的，所谓vsftpd的虚拟宿主用户，就是这样一个支持着所有虚拟用户的宿主用户。由于他支撑了FTP的所有虚拟的用户，那么他本身的权限将会影响着这些虚拟的用户，因此，处于安全性的考虑，也要非分注意对该用户的权限的控制，该用户也绝对没有登陆系统的必要，这里也设定他为不能登陆系统的用户。ftp用户在安装vsftpd的时候就已经添加了，我们只需要将它家目录改为你需要的位置。
三、vsftpd.conf基本配置： 配置 /etc/vsftpd/vsftpd.conf文件，这里我们只写有变动的地方，其它的保持默认。
首先，生成证书：
# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout ftp.key -out ftp.pem
#ssl加密传输 rsa_cert_file=/etc/ssl/certs/ftp.pem rsa_private_key_file=/etc/ssl/ftp.key ssl_enable=YES #被动ftp #listen_port=56880 #pasv_min_port=30000 #pasv_max_port=35000 #主动ftp，这个只需要打开20和21两个端口，在负载比较小的时候，不想开多个端口的时候，可以使用 pasv_enable=NO #这个地方一定要注意，这里的user_list里的用户是可以登陆的用户 userlist_enable=YES userlist_deny=NO userlist_file=/etc/vsftpd/user_list tcp_wrappers=YES chroot_local_user=YES chroot_list_file=/etc/vsftpd/chroot_list #虚拟用户 guest_enable=YES guest_username=ftp virtual_use_local_privs=YES pam_service_name=vsftpd #独立用户设置 user_config_dir=/etc/vsftpd/vsftpd_user_conf 四、生成vsftpd虚拟用户数据库文件： 建立虚拟用户名单文件：</description>
    </item>
    
    <item>
      <title>Linux安装hp打印机驱动</title>
      <link>http://wiseai.cn/post/linux%E5%AE%89%E8%A3%85hp%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E5%AE%89%E8%A3%85hp%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/</guid>
      <description>一、安装hplip # dnf install hplip
或者官网下载
安装hplip-gui,
# dnf install hplip-gui
二、运行hp-plugin安装插件 或者下载hplip-3.17.10-plugin.run文件，版本和hplip相同，网址为：http://www.openprinting.org/download/printdriver/auxfiles/HP/plugins/
安装时会验证文件，不用理会，直接安装就行。
好了！</description>
    </item>
    
    <item>
      <title>Linux开机启动的方法</title>
      <link>http://wiseai.cn/post/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>一、配置rc.local文件实现开机启动： 首先，建立一个文件：
$ sudo touch /etc/rc.local
给予可执行权限：
$ sudo chmod +x /etc/rc.local
在文件写入以下内容：
#!/bin/sh /path/to/gohttpserver -r /path/to/ --port 8080 --upload 以上两个/path/to/，一个是文件所在目录，一个是工作目录，都使用绝对路径。 完成！！！
二、第二种方法以后有时间再补充。 </description>
    </item>
    
    <item>
      <title>Linux更换网卡后网络服务不能启动的问题解决办法</title>
      <link>http://wiseai.cn/post/linux%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1%E5%90%8E%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8D%E8%83%BD%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/linux%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1%E5%90%8E%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8D%E8%83%BD%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>1、迁移以后，会存在其中一个网卡无法启动（eth0 or eth1）
[root@ ~]# ifup eth0
WARNING: Deprecated config file /etc/modprobe.conf, all config files belong into /etc/modprobe.d/.
WARNING: Deprecated config file /etc/modprobe.conf, all config files belong into /etc/modprobe.d/.
Device eth0 does not seem to be present, delaying initialization.
2、删除文件
[root@ ~]# mv /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/70-persistent-net.rules.bak
3、注释掉文件ifcfg-eth0及ifcfg-eth01中MAC地址（HWADDR）
[root@ ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
BOOTPROTO=static
#HWADDR=&amp;ldquo;XX:XX:XX:XX:XX:XX&amp;rdquo;
ONBOOT=yes
TYPE=Ethernet
4、重启服务器（重启网卡不好使）</description>
    </item>
    
    <item>
      <title>通过iptables设置防火墙</title>
      <link>http://wiseai.cn/post/iptables%E8%AE%BE%E7%BD%AEsh/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://wiseai.cn/post/iptables%E8%AE%BE%E7%BD%AEsh/</guid>
      <description>#!/bin/bash PATH=/sbin:/bin:/usr/sbin:/usr/bin #设置网卡 wk=&amp;#34;eth1&amp;#34; # 1. 清除规则 iptables -F iptables -X iptables -Z # 2. 设定政策 iptables -P INPUT DROP iptables -P OUTPUT ACCEPT iptables -P FORWARD ACCEPT # 3~5. 制订各项规则 iptables -A INPUT -i lo -j ACCEPT iptables -A INPUT -i $wk -m state --state RELATED,ESTABLISHED -j ACCEPT #samba服务 iptables -A INPUT -i $wk -p tcp --dport 139 -j ACCEPT iptables -A INPUT -i $wk -p tcp --dport 445 -j ACCEPT iptables -A INPUT -i $wk -p udp --dport 137:138 -j ACCEPT #vsftp服务 iptables -A INPUT -i $wk -p tcp --dport 21 -j ACCEPT iptables -A INPUT -i $wk -p tcp --dport 1024:65535 -j ACCEPT #iptables -A INPUT -i $wk -s 192.</description>
    </item>
    
  </channel>
</rss>
