<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>重定向 on WiseAI的博客</title>
    <link>http://wiseai.cn/tags/%E9%87%8D%E5%AE%9A%E5%90%91/</link>
    <description>Recent content in 重定向 on WiseAI的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>陇ICP备15000157号</copyright>
    <lastBuildDate>Fri, 08 Jul 2022 16:30:38 +0800</lastBuildDate><atom:link href="http://wiseai.cn/tags/%E9%87%8D%E5%AE%9A%E5%90%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nohup及重定向</title>
      <link>http://wiseai.cn/post/nohup%E5%8F%8A%E9%87%8D%E5%AE%9A%E5%90%91/</link>
      <pubDate>Fri, 08 Jul 2022 16:30:38 +0800</pubDate>
      
      <guid>http://wiseai.cn/post/nohup%E5%8F%8A%E9%87%8D%E5%AE%9A%E5%90%91/</guid>
      <description> 语法：nohup Command [ Arg … ] [　&amp;amp; ]
描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。要在后台运行 nohup 命令，添加 &amp;amp; 到命令的尾部。
操作系统中有三个常用的流：
0：标准输入流 stdin 1：标准输出流 stdout 2：标准错误流 stderr &amp;gt; info.txt实际是 1 &amp;gt; info.txt的省略用法；
&amp;lt; info.txt实际是 0 &amp;lt; info.txt的省略用法。
下面步入正题： &amp;gt;nohup ./text.sh &amp;gt;output 2&amp;gt;&amp;amp;1 &amp;amp; &amp;gt;su – wiseai -c ‘/usr/local/bin/jupyter notebook &amp;amp;&amp;gt; /dev/null &amp;amp;’ 解释：
带&amp;amp;的命令行，即使terminal（终端）关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上)； 2&amp;gt;&amp;amp;1和&amp;amp;&amp;gt;相同:意思是把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件output里面，所以结果是标准错误和标准输出都导入文件output里面了。 至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而stdout有。这就会导致 &amp;gt;output 2&amp;gt;output 文件output被两次打开，而stdout和stderr将会竞争覆盖，这肯定不是我门想要的。 /dev/null文件的作用，这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。 所以一般很大的stdou和stderr当你不关心的时候可以利用stdout和stderr定向到这里。 </description>
    </item>
    
  </channel>
</rss>
